
<!DOCTYPE html>
<html>

<head>
	<title>addStepper</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>addStepper</h1>
		<div class="ui-btn-right" style="font-size:50%">
			<a class="code-js" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">JS</a>
			<a class="code-py" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">Py</a>
			<a data-icon="gear" data-role="button" data-inline="true" data-mini="true" data-iconpos="notext" onclick="tglTheme()"></a>
		</div>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Properties')">Properties</a><br>
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>A Stepper in mobile UI design is a navigation element that guides users through a multi-step process, typically used for forms or sequential tasks.</p>

		<div class="samp">
		stp = ui.addStepper(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">parent</a>,
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">steps?</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options?</a>,
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">width?</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">height?</a> )
			→ <b>ui object:</b> Stepper
		</div>

		<p>For <kbd>Mobile</kbd> option, an additional position options can be added <kbd>Top</kbd>, <kbd>Static</kbd> or <kbd>Bottom</kbd> and <kbd>AutoSwipe</kbd> to enable auto swiping.<br>
		To style step count text, pass <kbd>Fraction</kbd>, <kbd>Dots</kbd> or <kbd>Progress</kbd> options.<br>
		For <kbd>vertical</kbd> and <kbd>mobile</kbd>, you can add Layout type <kbd>Linear</kbd> or <kbd>Absolute</kbd></p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic stepper</h3>
			<div id="examp1" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with object vertically centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">setChildMargins</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Initialize the steps array</span><br>
				        <span class="token keyword">var</span> steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">// Add a stepper component to the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addStepper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add back button control to the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>btnBack <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token string">"Back"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>btnBack<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>back <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add next button control to the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>btnNext <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>btnNext<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">nextStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">previousStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp1" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token keyword">global</span> stp<br>
				    <span class="token comment"># Creates a fullscreen layout with object vertically centered</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    main<span class="token punctuation">.</span>setChildMargins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Initialize the steps array</span><br>
				    steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				    <br>
				    <span class="token comment"># Add a stepper component to the main layout</span><br>
				    stp <span class="token operator">=</span> ui<span class="token punctuation">.</span>addStepper<span class="token punctuation">(</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add back button control to the main layout</span><br>
				    btnBack <span class="token operator">=</span> ui<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token string">"Back"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				    btnBack<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span>back<span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add next button control to the main layout</span><br>
				    btnNext <span class="token operator">=</span> ui<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				    btnNext<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span><span class="token builtin">next</span><span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">next</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    stp<span class="token punctuation">.</span>nextStep<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">back</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    stp<span class="token punctuation">.</span>previousStep<span class="token punctuation">(</span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp1' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp1' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Vertical stepper</h3>
			<div id="examp2" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fulscreen layout with objects vertically centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Stepper titles</span><br>
				        <span class="token keyword">var</span> steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">// Add a stepper control into the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addStepper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">"Vertical"</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Get the layout of the first step</span><br>
				        <span class="token keyword">var</span> step1Lay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">)</span><br>
				        step1Lay<span class="token punctuation">.</span><span class="token function">setChildMargins</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// Add controls to the first step layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span>step1Lay<span class="token punctuation">,</span> <span class="token string">"This is a text content on step 1"</span><span class="token punctuation">)</span><br>
				            <span class="token keyword">var</span> btnStep1Next <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span>step1Lay<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				            btnStep1Next<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Get the layout of the second step</span><br>
				        <span class="token keyword">var</span> step2Lay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><br>
				        step2Lay<span class="token punctuation">.</span><span class="token function">setChildMargins</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// Add controls to the second step layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span>step2Lay<span class="token punctuation">,</span> <span class="token string">"This is a text content on step 2"</span><span class="token punctuation">)</span><br>
				            <span class="token keyword">var</span> btnStep2Next <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span>step2Lay<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				            btnStep2Next<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Get the layout of the third step</span><br>
				        <span class="token keyword">var</span> step3Lay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><br>
				        step3Lay<span class="token punctuation">.</span><span class="token function">setChildMargins</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// Add controls to the third step layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span>step3Lay<span class="token punctuation">,</span> <span class="token string">"This is a text content on step 3"</span><span class="token punctuation">)</span><br>
				            <span class="token keyword">var</span> btnStep3Next <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span>step3Lay<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				            btnStep3Next<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">nextStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">previousStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp2" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token keyword">global</span> stp<br>
				    <span class="token comment"># Creates a fulscreen layout with objects vertically centered</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Stepper titles</span><br>
				    steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				    <br>
				    <span class="token comment"># Add a stepper control into the main layout</span><br>
				    stp <span class="token operator">=</span> ui<span class="token punctuation">.</span>addStepper<span class="token punctuation">(</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">"Vertical"</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Get the layout of the first step</span><br>
				    step1Lay <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><br>
				    step1Lay<span class="token punctuation">.</span>setChildMargins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add controls to the first step layout</span><br>
				    ui<span class="token punctuation">.</span>addText<span class="token punctuation">(</span>step1Lay<span class="token punctuation">,</span> <span class="token string">"This is a text content on step 1"</span><span class="token punctuation">)</span><br>
				    btnStep1Next <span class="token operator">=</span> ui<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>step1Lay<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				    btnStep1Next<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span><span class="token builtin">next</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Get the layout of the second step</span><br>
				    step2Lay <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><br>
				    step2Lay<span class="token punctuation">.</span>setChildMargins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add controls to the second step layout</span><br>
				    ui<span class="token punctuation">.</span>addText<span class="token punctuation">(</span>step2Lay<span class="token punctuation">,</span> <span class="token string">"This is a text content on step 2"</span><span class="token punctuation">)</span><br>
				    btnStep2Next <span class="token operator">=</span> ui<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>step2Lay<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				    btnStep2Next<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span><span class="token builtin">next</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Get the layout of the third step</span><br>
				    step3Lay <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><br>
				    step3Lay<span class="token punctuation">.</span>setChildMargins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.005</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add controls to the third step layout</span><br>
				    ui<span class="token punctuation">.</span>addText<span class="token punctuation">(</span>step3Lay<span class="token punctuation">,</span> <span class="token string">"This is a text content on step 3"</span><span class="token punctuation">)</span><br>
				    btnStep3Next <span class="token operator">=</span> ui<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>step3Lay<span class="token punctuation">,</span> <span class="token string">"Next"</span><span class="token punctuation">,</span> <span class="token string">"Raised,Primary"</span><span class="token punctuation">)</span><br>
				    btnStep3Next<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span><span class="token builtin">next</span><span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">next</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    stp<span class="token punctuation">.</span>nextStep<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    stp<span class="token punctuation">.</span>previousStep<span class="token punctuation">(</span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp2' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp2' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Mobile Stepper</h3>
			<div id="examp3" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a layout with objects verticaly centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				        <br>
				        <span class="token keyword">var</span> img1 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				        <span class="token keyword">var</span> img2 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				        <span class="token keyword">var</span> img3 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=80"</span><br>
				        <br>
				        <span class="token comment">// Add stepper control with `mobile` option</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addStepper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">"mobile"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// get the first layout on the stepper</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>lay1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// add an image control to the first layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lay1<span class="token punctuation">,</span> img1<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// get the second layout on the stepper</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>lay2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// add an image control to the second layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lay2<span class="token punctuation">,</span> img2<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// get the third layout on the stepper</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>lay3 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// add an image control to the third layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lay3<span class="token punctuation">,</span> img3<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when stepper layout changes</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">setOnChange</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onChange</span><span class="token punctuation">(</span> <span class="token parameter">index</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token string">"Layout index "</span> <span class="token operator">+</span> index <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp3" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token comment"># Creates a layout with objects verticaly centered</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    <br>
				    steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				    <br>
				    img1 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				    img2 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				    img3 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=80"</span><br>
				    <br>
				    <span class="token comment"># Add stepper control with `mobile` option</span><br>
				    stp <span class="token operator">=</span> ui<span class="token punctuation">.</span>addStepper<span class="token punctuation">(</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">"mobile"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># get the first layout on the stepper</span><br>
				    lay1 <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># add an image control to the first layout</span><br>
				    ui<span class="token punctuation">.</span>addImage<span class="token punctuation">(</span>lay1<span class="token punctuation">,</span> img1<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># get the second layout on the stepper</span><br>
				    lay2 <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># add an image control to the second layout</span><br>
				    ui<span class="token punctuation">.</span>addImage<span class="token punctuation">(</span>lay2<span class="token punctuation">,</span> img2<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># get the third layout on the stepper</span><br>
				    lay3 <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># add an image control to the third layout</span><br>
				    ui<span class="token punctuation">.</span>addImage<span class="token punctuation">(</span>lay3<span class="token punctuation">,</span> img3<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add a callback handler when stepper layout changes</span><br>
				    stp<span class="token punctuation">.</span>setOnChange<span class="token punctuation">(</span>onChange<span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">onChange</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span><span class="token string">"Layout index "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp3' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp3' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Autoswipe and Fraction Mobile Stepper</h3>
			<div id="examp4" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">setTheme</span><span class="token punctuation">(</span><span class="token string">"dark"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Creates a layout with objects verticaly centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				        <br>
				        <span class="token keyword">var</span> img1 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				        <span class="token keyword">var</span> img2 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				        <span class="token keyword">var</span> img3 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=80"</span><br>
				        <br>
				        <span class="token comment">// Add stepper control with `mobile` option</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addStepper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">"mobile,autoswipe,fraction"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Get the first layout on the stepper</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>lay1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// Add an image control to the first layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lay1<span class="token punctuation">,</span> img1<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Get the second layout on the stepper</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>lay2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// Add an image control to the second layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lay2<span class="token punctuation">,</span> img2<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Get the third layout on the stepper</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>lay3 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">getLayout</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><br>
				            <br>
				            <span class="token comment">// Add an image control to the third layout</span><br>
				            ui<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lay3<span class="token punctuation">,</span> img3<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when stepper layout changes</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>stp<span class="token punctuation">.</span><span class="token function">setOnChange</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onChange</span><span class="token punctuation">(</span> <span class="token parameter">index</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token string">"Layout index "</span> <span class="token operator">+</span> index <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp4" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    ui<span class="token punctuation">.</span>setTheme<span class="token punctuation">(</span><span class="token string">"dark"</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Creates a layout with objects verticaly centered</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    <br>
				    steps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Step 1"</span><span class="token punctuation">,</span> <span class="token string">"Step 2"</span><span class="token punctuation">,</span> <span class="token string">"Step 3"</span><span class="token punctuation">]</span><br>
				    <br>
				    img1 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				    img2 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=60"</span><br>
				    img3 <span class="token operator">=</span> <span class="token string">"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&amp;fit=crop&amp;w=400&amp;h=250&amp;q=80"</span><br>
				    <br>
				    <span class="token comment"># Add stepper control with `mobile` option</span><br>
				    stp <span class="token operator">=</span> ui<span class="token punctuation">.</span>addStepper<span class="token punctuation">(</span>main<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> <span class="token string">"mobile,autoswipe,fraction"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Get the first layout on the stepper</span><br>
				    lay1 <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add an image control to the first layout</span><br>
				    ui<span class="token punctuation">.</span>addImage<span class="token punctuation">(</span>lay1<span class="token punctuation">,</span> img1<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Get the second layout on the stepper</span><br>
				    lay2 <span class="token operator">=</span> stp<span class="token punctuation">.</span>getLayout<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add an image control to the second layout</span><br>
				    ui<span class="token punctuation">.</span>addImage<span class="token punctuation">(</span>lay2<span class="token punctuation">,</span> img2<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Get the third layout on the stepper</span><br>
				    lay3
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp4' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp4' )">      Run      </a>
			</div>
		</div>


		<h3>Properties</h3>
		<p>The following properties are available on the <strong>Stepper</strong> object:</p>

		<div class="samp"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">absHeight</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup">absLeft</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_003" data-transition="pop" data-rel="popup">absTop</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">absWidth</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_005" data-transition="pop" data-rel="popup">activeStep</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_007" data-transition="pop" data-rel="popup">backColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_008" data-transition="pop" data-rel="popup">backImage</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_009" data-transition="pop" data-rel="popup">border</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">borderColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">borderStyle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">cornerRadius</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">disabled</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_010" data-transition="pop" data-rel="popup">el</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_011" data-transition="pop" data-rel="popup">elevation</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_012" data-transition="pop" data-rel="popup">elStyle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_013" data-transition="pop" data-rel="popup">fontFile</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_018" data-transition="pop" data-rel="popup">height</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_01a" data-transition="pop" data-rel="popup">isVisible</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_01b" data-transition="pop" data-rel="popup">left</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_01c" data-transition="pop" data-rel="popup">margins</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_01e" data-transition="pop" data-rel="popup">opacity</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_01f" data-transition="pop" data-rel="popup">options</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_020" data-transition="pop" data-rel="popup">orientation</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_021" data-transition="pop" data-rel="popup">padding</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_022" data-transition="pop" data-rel="popup">parent</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_023" data-transition="pop" data-rel="popup">position</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_026" data-transition="pop" data-rel="popup">rotation</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_034" data-transition="pop" data-rel="popup">textColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_035" data-transition="pop" data-rel="popup">textSize</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_036" data-transition="pop" data-rel="popup">top</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_037" data-transition="pop" data-rel="popup">type</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_038" data-transition="pop" data-rel="popup">visibility</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_039" data-transition="pop" data-rel="popup">width</a> → <b>Number</b></div>

		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Stepper</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">animate</a>(
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">anim</a>,
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">duration</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup" class="baseFunc">bringForward</a>(
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup" class="baseFunc">destroy</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup">getLayout</a>(
			<a href="#pop_num_005" data-transition="pop" data-rel="popup">index</a> )
			→ <b>Object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup">getLayoutIndex</a>(
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">layout</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup" class="baseFunc">getPosition</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>ui object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup" class="baseFunc">gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup" class="baseFunc">hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01d" data-transition="pop" data-rel="popup">nextStep</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_024" data-transition="pop" data-rel="popup">previousStep</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_025" data-transition="pop" data-rel="popup">removeStep</a>(
			<a href="#pop_num_006" data-transition="pop" data-rel="popup">index</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_027" data-transition="pop" data-rel="popup" class="baseFunc">sendBackward</a>(
			<a href="#pop_num_007" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_028" data-transition="pop" data-rel="popup" class="baseFunc">setBorder</a>(
			<a href="#pop_num_008" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_009" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_00a" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_00b" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">clr</a>,
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">style</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_029" data-transition="pop" data-rel="popup" class="baseFunc">setCornerRadius</a>(
			<a href="#pop_num_00c" data-transition="pop" data-rel="popup">tl</a>,
			<a href="#pop_num_00d" data-transition="pop" data-rel="popup">tr</a>,
			<a href="#pop_num_00e" data-transition="pop" data-rel="popup">br</a>,
			<a href="#pop_num_00f" data-transition="pop" data-rel="popup">bl</a>,
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02a" data-transition="pop" data-rel="popup" class="baseFunc">setMargins</a>(
			<a href="#pop_num_010" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_011" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_012" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_013" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_007" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02b" data-transition="pop" data-rel="popup">setOnChange</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02c" data-transition="pop" data-rel="popup">setOnComplete</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02d" data-transition="pop" data-rel="popup" class="baseFunc">setOnContextMenu</a>(
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02e" data-transition="pop" data-rel="popup" class="baseFunc">setPadding</a>(
			<a href="#pop_num_014" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_015" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_016" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_015" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_008" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02f" data-transition="pop" data-rel="popup" class="baseFunc">setPosition</a>(
			<a href="#pop_num_018" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_019" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_str_008" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_030" data-transition="pop" data-rel="popup" class="baseFunc">setScale</a>(
			<a href="#pop_num_01a" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_01b" data-transition="pop" data-rel="popup">y</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_031" data-transition="pop" data-rel="popup" class="baseFunc">setSize</a>(
			<a href="#pop_num_018" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_019" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_00a" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_032" data-transition="pop" data-rel="popup">setTitleText</a>(
			<a href="#pop_num_01e" data-transition="pop" data-rel="popup">index</a>,
			<a href="#pop_str_00b" data-transition="pop" data-rel="popup">title</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_033" data-transition="pop" data-rel="popup" class="baseFunc">show</a>()
		</div>

	</div>

	<div data-role="popup" id="pop_num_001" class="ui-content"><b>Number:</b> Fraction of the parent width `[0-1]`.</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>Number:</b> Fraction of the parent height `[0-1]`.</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>Number:</b> The time in milliseconds.</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>Number:</b> The z-index. A negative value behaves like `sendBackward` method.</div>
	<div data-role="popup" id="pop_num_005" class="ui-content"><b>Number:</b> The index of the corresponing stepper layout</div>
	<div data-role="popup" id="pop_num_006" class="ui-content"><b>Number:</b> The index of the step to remove.</div>
	<div data-role="popup" id="pop_num_007" class="ui-content"><b>Number:</b> The z-index. A positve value behaves like `bringForward` method.</div>
	<div data-role="popup" id="pop_num_008" class="ui-content"><b>Number:</b> Border-left thickness in pixels.</div>
	<div data-role="popup" id="pop_num_009" class="ui-content"><b>Number:</b> Border-top thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00a" class="ui-content"><b>Number:</b> Border-right thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00b" class="ui-content"><b>Number:</b> Border-bottom thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00c" class="ui-content"><b>Number:</b> Top-Left border radius.</div>
	<div data-role="popup" id="pop_num_00d" class="ui-content"><b>Number:</b> Top-Right border radius.</div>
	<div data-role="popup" id="pop_num_00e" class="ui-content"><b>Number:</b> Bottom-Right border radius.</div>
	<div data-role="popup" id="pop_num_00f" class="ui-content"><b>Number:</b> Bottom-Left border radius.</div>
	<div data-role="popup" id="pop_num_010" class="ui-content"><b>Number:</b> Left margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_011" class="ui-content"><b>Number:</b> Top margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_012" class="ui-content"><b>Number:</b> Right margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_013" class="ui-content"><b>Number:</b> Bottom margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_014" class="ui-content"><b>Number:</b> Fraction of the component width.</div>
	<div data-role="popup" id="pop_num_015" class="ui-content"><b>Number:</b> Fraction of the component height. [0-1]</div>
	<div data-role="popup" id="pop_num_016" class="ui-content"><b>Number:</b> Fraction of the component width. [0-1]</div>
	<div data-role="popup" id="pop_num_018" class="ui-content"><b>Number:</b> Fraction of the parent width. [0-1]</div>
	<div data-role="popup" id="pop_num_019" class="ui-content"><b>Number:</b> Fraction of the parent height. [0-1]</div>
	<div data-role="popup" id="pop_num_01a" class="ui-content"><b>Number:</b> The x-scale of the component.Values less than `0` is smaller than the normal. While values greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_num_01b" class="ui-content"><b>Number:</b> The y-scale of the component. Values less than `1` is smaller than the normal. While vaues greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_num_01e" class="ui-content"><b>Number:</b> The index of the Stepper.</div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“A comma separated options.<br>`Vertical`”</docstr>, <docstr>“ `Horizontal`”</docstr>, <docstr>“ `Loop`”</docstr>, <docstr>“ `Mobile`”</docstr>, <docstr>“ `AlternativeLabel`.”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“The type of animation. Here are the available values<br>`bounce`”</docstr>, <docstr>“ `flash`”</docstr>, <docstr>“ `pulse`”</docstr>, <docstr>“ `rubberBand`”</docstr>, <docstr>“ `shakeX`”</docstr>, <docstr>“ `shakeY`”</docstr>, <docstr>“ `headShake`”</docstr>, <docstr>“ `swing`”</docstr>, <docstr>“ `tada`”</docstr>, <docstr>“ `wobble`”</docstr>, <docstr>“ `jello`”</docstr>, <docstr>“ `heartBeat`”</docstr>, <docstr>“<br>Back Entrances: `backInDown`”</docstr>, <docstr>“ `backInLeft`”</docstr>, <docstr>“ `backInRight`”</docstr>, <docstr>“ `backInUp`<br>Back Exits: `backOutDown`”</docstr>, <docstr>“ `backOutLeft`”</docstr>, <docstr>“ `backOutRight`”</docstr>, <docstr>“ `backOutUp`<br>Bouncing Entrances: `bounceIn`”</docstr>, <docstr>“ `bounceInDown`”</docstr>, <docstr>“ `bounceInLeft`”</docstr>, <docstr>“ `bounceInRight`”</docstr>, <docstr>“ `bounceInUp`<br>Bouncing exits: `bounceOut`”</docstr>, <docstr>“ `bounceOutDown`”</docstr>, <docstr>“ `bounceOutLeft`”</docstr>, <docstr>“ `bounceOutRight`”</docstr>, <docstr>“ `bounceOutUp`<br>Fading entrances: `fadeIn`”</docstr>, <docstr>“ `fadeInDown`”</docstr>, <docstr>“ `fadeInDownBig`”</docstr>, <docstr>“ `fadeInLeft`”</docstr>, <docstr>“ `fadeInLeftBig`”</docstr>, <docstr>“ `fadeInRight`”</docstr>, <docstr>“ `fadeInRightBig`”</docstr>, <docstr>“ `fadeInUp`”</docstr>, <docstr>“ `fadeInUpBig`”</docstr>, <docstr>“ `fadeInTopLeft`”</docstr>, <docstr>“ `fadeInTopRight`”</docstr>, <docstr>“ `fadeInBottomLeft`”</docstr>, <docstr>“ `fadeInBottomRight`<br>Fading exits: `fadeOut`”</docstr>, <docstr>“ `fadeOutDown`”</docstr>, <docstr>“ `fadeOutDownBig`”</docstr>, <docstr>“ `fadeOutLeft`”</docstr>, <docstr>“ `fadeOutLeftBig`”</docstr>, <docstr>“ `fadeOutRight`”</docstr>, <docstr>“ `fadeOutRightBig`”</docstr>, <docstr>“ `fadeOutUp`”</docstr>, <docstr>“ `fadeOutUpBig`”</docstr>, <docstr>“ `fadeOutTopLeft`”</docstr>, <docstr>“ `fadeOutTopRight`”</docstr>, <docstr>“ `fadeOutBottomRight`”</docstr>, <docstr>“ `fadeOutBottomLeft`<br>Flippers: `flip`”</docstr>, <docstr>“ `flipInX`”</docstr>, <docstr>“ `flipInY`”</docstr>, <docstr>“ `flipOutX`”</docstr>, <docstr>“ `flipOutY`<br>Lightspeed: `lightSpeedInRight`”</docstr>, <docstr>“ `lightSpeedInLeft`”</docstr>, <docstr>“ `lightSpeedOutRight`”</docstr>, <docstr>“ `lightSpeedOutLeft`<br>Rotating Entrances: `rotateIn`”</docstr>, <docstr>“ `rotateInDownLeft`”</docstr>, <docstr>“ `rotateInDownRight`”</docstr>, <docstr>“ `rotateInUpLeft`”</docstr>, <docstr>“ `rotateInUpRight`<br>Rotating Exits: `rotateOut`”</docstr>, <docstr>“ `rotateOutDownLeft`”</docstr>, <docstr>“ `rotateOutDownRight`”</docstr>, <docstr>“ `rotateOutUpLeft`”</docstr>, <docstr>“ `rotateOutUpRight`<br>Specials: `hinge`”</docstr>, <docstr>“ `jackInTheBox`”</docstr>, <docstr>“ `rollIn`”</docstr>, <docstr>“ `rollOut`<br>Zooming Entrances: `zoomIn`”</docstr>, <docstr>“ `zoomInDown`”</docstr>, <docstr>“ `zoomInLeft`”</docstr>, <docstr>“ `zoomInRight`”</docstr>, <docstr>“ `zoomInUp`<br>Zooming Exits: `zoomOut`”</docstr>, <docstr>“ `zoomOutDown`”</docstr>, <docstr>“ `zoomOutLeft`”</docstr>, <docstr>“ `zoomOutRight`”</docstr>, <docstr>“ `zoomOutUp`<br>Sliding Entrances: `slideInDown`”</docstr>, <docstr>“ `slideInLeft`”</docstr>, <docstr>“ `slideInRight`”</docstr>, <docstr>“ `slideInUp`<br>Sliding Exits: `slideOutDown`”</docstr>, <docstr>“ `slideOutLeft`”</docstr>, <docstr>“ `slideOutRight`”</docstr>, <docstr>“ `slideOutUp`”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“The mode of the measurements. Values can be `px` or `%`”</docstr></div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>String:</b> <docstr>“Border color in hexadecimal format `#rrggbb`.”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“Border-styles. Values can be `dotted`”</docstr>, <docstr>“ `dashed`”</docstr>, <docstr>“ `solid`”</docstr>, <docstr>“ `double`”</docstr>, <docstr>“ `groove`”</docstr>, <docstr>“ `ridge`”</docstr>, <docstr>“ `inset` and `outset`. Default is `solid`”</docstr></div>
	<div data-role="popup" id="pop_str_006" class="ui-content"><b>String:</b> <docstr>“Unit of measurement. Values are `px` `rem` or `%`.”</docstr></div>
	<div data-role="popup" id="pop_str_007" class="ui-content"><b>String:</b> <docstr>“Unit of measurement.<br>`rem` for root em.<br>`px` for pixels<br>`%` relative to its parent dimension.<br>`v` relative to viewport dimension.”</docstr></div>
	<div data-role="popup" id="pop_str_008" class="ui-content"><b>String:</b> <docstr>“Unit of measurement.<br>`rem` for root em.<br>`px` for pixels<br>`%` relative to its parent dimensions<br>`v` relative to viewport dimensions.”</docstr></div>
	<div data-role="popup" id="pop_str_00a" class="ui-content"><b>String:</b> <docstr>“Unit of measurment. Can be "px"”</docstr>, <docstr>“ "rem"”</docstr>, <docstr>“ "%"”</docstr>, <docstr>“ "v" for viewport width/height or any css supported unit.”</docstr></div>
	<div data-role="popup" id="pop_str_00b" class="ui-content"><b>String:</b> <docstr>“The new title text.”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> The parent layout of the Stepper.</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> The layout to check.</div>
	<div data-role="popup" id="pop_obj_003" class="ui-content"><b>Object:</b> The pointer event object.</div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>List:</b> An array of titles.</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('Number: The index of the active step.')">index </a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>(
		<a href="" onclick="switchPopup(this, '#pop_obj_003')" data-transition="pop" data-rel="popup">event </a>
	)</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>stp.absHeight</b><br>Returns the absolute height of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>stp.absLeft</b><br>Returns the absolute distance of the control from the left in pixels.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>stp.absTop</b><br>Returns the absolute distance of the control from the top in pixels.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>stp.absWidth</b><br>Returns the absolute width of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>stp.activeStep</b><br>Sets or returns the active step.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>stp.animate</b><br>Animate the component.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>stp.backColor</b><br>A hexadecimal color of the form <kbd>#rrggbb</kbd></div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>stp.backImage</b><br>The path to your image file.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>stp.border</b><br>Sets or returns the border thickness in pixels.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>stp.borderColor</b><br>Sets or returns the border color. Color is in hexadecimal form <kbd>#rrggbb</kbd></div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>stp.borderStyle</b><br>Sets or returns the border style. Values can be <kbd>dotted</kbd>, <kbd>dashed</kbd>, <kbd>solid</kbd>, <kbd>double</kbd>, <kbd>groove</kbd>, <kbd>ridge</kbd>, <kbd>inset</kbd> and <kbd>outset</kbd>. Default is <kbd>solid</kbd>.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>stp.bringForward</b><br><a href="aname.htm" data-ajax="false">aname</a> bringForward<br>Bring this component forward by a given z-index.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>stp.cornerRadius</b><br>Sets or returns the corner radius in pixels.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>stp.destroy</b><br>Destroy the component.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>stp.disabled</b><br>Sets or returns the <kbd>disabled</kbd> state of the control.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>stp.el</b><br>Returns the html container element for the control.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>stp.elevation</b><br>Sets or returns the elevation of the mobile stepper. Value ranges from <kbd>0</kbd> to <kbd>24</kbd>.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>stp.elStyle</b><br>Sets the style of the html container element.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>stp.fontFile</b><br>Sets or returns the <kbd>relative</kbd> path to the font-family use.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>stp.getLayout</b><br>Returns the layout of the corresponding step layout where you can add controls.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>stp.getLayoutIndex</b><br>Get the index of the corresponding layout.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>stp.getPosition</b><br>Returns the position of the component. The return object is of the form <kbd>{left, top, right, bottom}</kbd></div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>stp.gone</b><br>Destroy the component.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>stp.height</b><br>Sets or returns the height of the control as a fraction of the parent control.</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>stp.hide</b><br>Hide the component.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>stp.isVisible</b><br>Returns whether the control is visible or not.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>stp.left</b><br>Returns the distance of the control from the left.</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>stp.margins</b><br>Sets or returns the margin of the control. Works on controls with <kbd>Linear</kbd> parent only. You can also pass a number to set equal margins for all sides.</div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>stp.nextStep</b><br>Go to the next step.</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>stp.opacity</b><br>Sets or returns the opacity of the control.</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>stp.options</b><br>Sets or returns the <kbd>options</kbd> of the control.</div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>stp.orientation</b><br>Sets or returns the orientation of the Stepper. Values can be <kbd>Horizontal</kbd> or <kbd>Vertical</kbd>.</div>
	<div data-role="popup" id="pop_dsc_021" class="ui-content"><b>stp.padding</b><br>Sets or returns the padding of the control. You can also pass a number to set equal padding for all sides.</div>
	<div data-role="popup" id="pop_dsc_022" class="ui-content"><b>stp.parent</b><br>Returns the parent layout control.</div>
	<div data-role="popup" id="pop_dsc_023" class="ui-content"><b>stp.position</b><br>Returns the position of the control. The returned object has <kbd>left</kbd> <kbd>top</kbd> <kbd>right</kbd> and <kbd>bottom</kbd> props.</div>
	<div data-role="popup" id="pop_dsc_024" class="ui-content"><b>stp.previousStep</b><br>Go to the previous step.</div>
	<div data-role="popup" id="pop_dsc_025" class="ui-content"><b>stp.removeStep</b><br>Removes a corresponding step by its index.</div>
	<div data-role="popup" id="pop_dsc_026" class="ui-content"><b>stp.rotation</b><br>Sets or returns the angle of rotation in degrees.</div>
	<div data-role="popup" id="pop_dsc_027" class="ui-content"><b>stp.sendBackward</b><br>Bring this component backward by a given z-index.</div>
	<div data-role="popup" id="pop_dsc_028" class="ui-content"><b>stp.setBorder</b><br>Sets the border line for the component container.</div>
	<div data-role="popup" id="pop_dsc_029" class="ui-content"><b>stp.setCornerRadius</b><br>Sets the corner radius of the component.</div>
	<div data-role="popup" id="pop_dsc_02a" class="ui-content"><b>stp.setMargins</b><br>Sets the margin of the component.</div>
	<div data-role="popup" id="pop_dsc_02b" class="ui-content"><b>stp.setOnChange</b><br>Adds a callback function to be called when the stepper has changed step.</div>
	<div data-role="popup" id="pop_dsc_02c" class="ui-content"><b>stp.setOnComplete</b><br>Adds a callback function to be called when the stepper is complete. For mobile stepper, callback will be called upon showing the last step.</div>
	<div data-role="popup" id="pop_dsc_02d" class="ui-content"><b>stp.setOnContextMenu</b><br>Adds a callback function on right click.</div>
	<div data-role="popup" id="pop_dsc_02e" class="ui-content"><b>stp.setPadding</b><br>Sets the padding of the component's container.</div>
	<div data-role="popup" id="pop_dsc_02f" class="ui-content"><b>stp.setPosition</b><br>Sets the position of the component relative to its parent dimensions.</div>
	<div data-role="popup" id="pop_dsc_030" class="ui-content"><b>stp.setScale</b><br>Sets the x and y scaling of the component. This will ignore the positioning and flow of controls in the layout.</div>
	<div data-role="popup" id="pop_dsc_031" class="ui-content"><b>stp.setSize</b><br>Sets the size of the component.</div>
	<div data-role="popup" id="pop_dsc_032" class="ui-content"><b>stp.setTitleText</b><br>Sets a new title for the corresponding step by its index.</div>
	<div data-role="popup" id="pop_dsc_033" class="ui-content"><b>stp.show</b><br>Show the component.</div>
	<div data-role="popup" id="pop_dsc_034" class="ui-content"><b>stp.textColor</b><br>Sets or returns the color of the text.</div>
	<div data-role="popup" id="pop_dsc_035" class="ui-content"><b>stp.textSize</b><br>Sets or returns the size of the text within the control.</div>
	<div data-role="popup" id="pop_dsc_036" class="ui-content"><b>stp.top</b><br>Returns the distance of the control from the top.</div>
	<div data-role="popup" id="pop_dsc_037" class="ui-content"><b>stp.type</b><br>Returns the type of the control.</div>
	<div data-role="popup" id="pop_dsc_038" class="ui-content"><b>stp.visibility</b><br>Sets or returns the visibility of the control.</div>
	<div data-role="popup" id="pop_dsc_039" class="ui-content"><b>stp.width</b><br>Sets or returns the width of the control as a fraction of the parent control.</div>
</div>
</body>

</html>
