
<!DOCTYPE html>
<html>

<head>
	<title>addCard</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>addCard</h1>
		<div class="ui-btn-right" style="font-size:50%">
			<a class="code-js" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">JS</a>
			<a class="code-py" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">Py</a>
			<a data-icon="gear" data-role="button" data-inline="true" data-mini="true" data-iconpos="notext" onclick="tglTheme()"></a>
		</div>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Properties')">Properties</a><br>
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>They are surfaces in material design that display content and actions on a single topic.</p>

		<div class="samp">
		crd = ui.addCard(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">parent</a>,
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">content</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a>,
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">height</a> )
			→ <b>ui object:</b> Card
		</div>

		<h4>Content properties</h4>

		<div class="samp">
		<span class="token punctuation">{</span>
		<br><span style="display:inline-block;padding-left:1em;">
			<span class="token literal-property property">headerTitle</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// card header title</span><br>
			<span class="token literal-property property">headerSubtitle</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// card header subtitle or subheader</span><br>
			<span class="token literal-property property">headerAvatar</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// card header avatar. can be a single character or a path to an image</span><br>
			<span class="token literal-property property">headerAction</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// card header action. A material icon font</span><br>
			<span class="token literal-property property">media</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// path to an image</span><br>
			<span class="token literal-property property">bodyTitle</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// title of the card content</span><br>
			<span class="token literal-property property">bodyText</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// long description of the card</span><br>
			<span class="token literal-property property">actions</span><span class="token operator">:</span> array<span class="token punctuation">,</span> <span class="token comment">// list of icon buttons. can be a list of material-icon fonts if actionType is an "icon"</span><br>
			<span class="token literal-property property">actionType</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// type of action. can be a "button" or "icon"</span><br>
			<span class="token function-variable function">onAction</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">,</span> <span class="token comment">// callback when card actions are clicked. refer to setOnAction method for arguments</span><br>
			<span class="token function-variable function">onHeaderAction</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token comment">// callback when header action is clicked. refer to setOnHeaderAction method for arguments</span>
		</span><br>
		<span class="token punctuation">}</span>
		</div>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic Card</h3>
			<div id="examp1" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Create a fullscreen layout with objects vertically centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				        <br>
				        <span class="token comment">// initialize the content of the card</span><br>
				        <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				            <span class="token literal-property property">bodyTitle</span><span class="token operator">:</span> <span class="token string">"Lizard"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">bodyText</span><span class="token operator">:</span> <span class="token string">"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Read more"</span><span class="token punctuation">]</span><br>
				        <span class="token punctuation">}</span><span class="token punctuation">;</span><br>
				        <br>
				        <span class="token comment">// Create a card by passing the content object</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCard</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when the action is click</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onAction</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> text <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp1" class="code-py" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> extends App<br>
				    onStart<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				        <span class="token comment">#  Create a fullscreen layout with objects vertically centered</span><br>
				        this<span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">#  initialize the content of the card</span><br>
				        content <span class="token operator">=</span><br>
				            bodyTitle<span class="token punctuation">:</span> <span class="token string">"Lizard"</span><span class="token punctuation">,</span><br>
				            bodyText<span class="token punctuation">:</span> <span class="token string">"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica"</span><span class="token punctuation">,</span><br>
				            actions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"Read more"</span><span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">#  Create a card by passing the content object</span><br>
				        this<span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCard<span class="token punctuation">(</span>this<span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">#  Add a callback handler when the action is click</span><br>
				        this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>setOnAction<span class="token punctuation">(</span> this<span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				    <br>
				    onAction<span class="token punctuation">(</span>text<span class="token punctuation">,</span> i<span class="token punctuation">)</span><br>
				        ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span> text <span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp1' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp1' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Card with media</h3>
			<div id="examp2" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Create a fullscreen layout with objects vertically centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// initialize the content of the card</span><br>
				        <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				            <span class="token literal-property property">media</span><span class="token operator">:</span> <span class="token string">"https://picsum.photos/300/180"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">bodyTitle</span><span class="token operator">:</span> <span class="token string">"Card"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">bodyText</span><span class="token operator">:</span> <span class="token string">"They are surfaces in material design that display content and actions on a single topic. Elements, like text and images, should be placed on them in a way that clearly indicates hierarchy."</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"favorite"</span><span class="token punctuation">,</span> <span class="token string">"share"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">actionType</span><span class="token operator">:</span> <span class="token string">"icon"</span><br>
				        <span class="token punctuation">}</span><br>
				        <br>
				        <span class="token comment">// Create a card by passing the content object</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCard</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when the action is click</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onAction</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> text <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp2" class="code-py" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> extends App<br>
				    onStart<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				        <span class="token comment">#  Create a fullscreen layout with objects vertically centered</span><br>
				        this<span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">#  initialize the content of the card</span><br>
				        content <span class="token operator">=</span><br>
				            media<span class="token punctuation">:</span> <span class="token string">"https:# picsum.photos/300/180"</span><span class="token punctuation">,</span><br>
				            bodyTitle<span class="token punctuation">:</span> <span class="token string">"Card"</span><span class="token punctuation">,</span><br>
				            bodyText<span class="token punctuation">:</span> <span class="token string">"They are surfaces in material design that display content and actions on a single topic. Elements, like text and images, should be placed on them in a way that clearly indicates hierarchy."</span><span class="token punctuation">,</span><br>
				            actions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"favorite"</span><span class="token punctuation">,</span> <span class="token string">"share"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br>
				            actionType<span class="token punctuation">:</span> <span class="token string">"icon"</span><br>
				        <br>
				        <span class="token comment">#  Create a card by passing the content object</span><br>
				        this<span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCard<span class="token punctuation">(</span>this<span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">#  Add a callback handler when the action is click</span><br>
				        this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>setOnAction<span class="token punctuation">(</span> this<span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				    <br>
				    onAction<span class="token punctuation">(</span>text<span class="token punctuation">,</span> i<span class="token punctuation">)</span><br>
				        ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span> text <span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp2' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp2' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Card with header</h3>
			<div id="examp3" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				   <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				   <span class="token punctuation">{</span><br>
				       <span class="token comment">// Create a fullscreen layout with objects vertically centered</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY,ScrollY"</span><span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">// initialize the content of the card with header information</span><br>
				       <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				           <span class="token literal-property property">headerTitle</span><span class="token operator">:</span> <span class="token string">"DroidScript.org"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">headerSubtitle</span><span class="token operator">:</span> <span class="token string">"Posted on November 16, 2023"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">headerAvatar</span><span class="token operator">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">headerAction</span><span class="token operator">:</span> <span class="token string">"more_vert"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">media</span><span class="token operator">:</span> <span class="token string">"https://picsum.photos/300/180"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">bodyTitle</span><span class="token operator">:</span> <span class="token string">"Card"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">bodyText</span><span class="token operator">:</span> <span class="token string">"They are surfaces in material design that display content and actions on a single topic. Elements, like text and images, should be placed on them in a way that clearly indicates hierarchy."</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"favorite"</span><span class="token punctuation">,</span> <span class="token string">"share"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">actionType</span><span class="token operator">:</span> <span class="token string">"icon"</span><br>
				       <span class="token punctuation">}</span><br>
				       <br>
				       <span class="token comment">// Create a card by passing the content object</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCard</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.94</span><span class="token punctuation">)</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span>headerAvatarColor <span class="token operator">=</span> <span class="token string">"green"</span><br>
				       <br>
				       <span class="token comment">// Add a callback handler when the action is click</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">// Add a callback handler when header action is click</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span><span class="token function">setOnHeaderAction</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onHeaderAction <span class="token punctuation">)</span><br>
				   <span class="token punctuation">}</span><br>
				   <br>
				   <span class="token function">onAction</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span><br>
				   <span class="token punctuation">{</span><br>
				       ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> text <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				   <span class="token punctuation">}</span><br>
				   <br>
				   <span class="token function">onHeaderAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				   <span class="token punctuation">{</span><br>
				       ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token string">"Header action is click"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				   <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp3" class="code-py" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> extends App<br>
				   onStart<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				       <span class="token comment">#  Create a fullscreen layout with objects vertically centered</span><br>
				       this<span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY,ScrollY"</span><span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">#  initialize the content of the card with header information</span><br>
				       content <span class="token operator">=</span><br>
				           headerTitle<span class="token punctuation">:</span> <span class="token string">"DroidScript.org"</span><span class="token punctuation">,</span><br>
				           headerSubtitle<span class="token punctuation">:</span> <span class="token string">"Posted on November 16, 2023"</span><span class="token punctuation">,</span><br>
				           headerAvatar<span class="token punctuation">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span><br>
				           headerAction<span class="token punctuation">:</span> <span class="token string">"more_vert"</span><span class="token punctuation">,</span><br>
				           media<span class="token punctuation">:</span> <span class="token string">"https:# picsum.photos/300/180"</span><span class="token punctuation">,</span><br>
				           bodyTitle<span class="token punctuation">:</span> <span class="token string">"Card"</span><span class="token punctuation">,</span><br>
				           bodyText<span class="token punctuation">:</span> <span class="token string">"They are surfaces in material design that display content and actions on a single topic. Elements, like text and images, should be placed on them in a way that clearly indicates hierarchy."</span><span class="token punctuation">,</span><br>
				           actions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"favorite"</span><span class="token punctuation">,</span> <span class="token string">"share"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br>
				           actionType<span class="token punctuation">:</span> <span class="token string">"icon"</span><br>
				       <br>
				       <span class="token comment">#  Create a card by passing the content object</span><br>
				       this<span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCard<span class="token punctuation">(</span>this<span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.94</span><span class="token punctuation">)</span><br>
				       this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>headerAvatarColor <span class="token operator">=</span> <span class="token string">"green"</span><br>
				       <br>
				       <span class="token comment">#  Add a callback handler when the action is click</span><br>
				       this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>setOnAction<span class="token punctuation">(</span> this<span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">#  Add a callback handler when header action is click</span><br>
				       this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>setOnHeaderAction<span class="token punctuation">(</span> this<span class="token punctuation">.</span>onHeaderAction <span class="token punctuation">)</span><br>
				   <br>
				   onAction<span class="token punctuation">(</span>text<span class="token punctuation">,</span> i<span class="token punctuation">)</span><br>
				       ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span> text <span class="token punctuation">)</span><br>
				   <br>
				   onHeaderAction<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				       ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span> <span class="token string">"Header action is click"</span> <span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp3' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp3' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Card with additional controls</h3>
			<div id="examp4" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				   <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				   <span class="token punctuation">{</span><br>
				       <span class="token comment">// Create a fullscreen layout with objects vertically centered</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY,ScrollY"</span><span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">// initialize the content of the card with header information</span><br>
				       <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				           <span class="token literal-property property">headerTitle</span><span class="token operator">:</span> <span class="token string">"DroidScript.org"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">headerSubtitle</span><span class="token operator">:</span> <span class="token string">"Posted on November 16, 2023"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">headerAvatar</span><span class="token operator">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">headerAction</span><span class="token operator">:</span> <span class="token string">"more_vert"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">media</span><span class="token operator">:</span> <span class="token string">"https://picsum.photos/300/180"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">bodyTitle</span><span class="token operator">:</span> <span class="token string">"UI Components"</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">bodyText</span><span class="token operator">:</span> <span class="token string">"This is a card with additional UI Components as content."</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"favorite"</span><span class="token punctuation">,</span> <span class="token string">"share"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br>
				           <span class="token literal-property property">actionType</span><span class="token operator">:</span> <span class="token string">"icon"</span><br>
				       <span class="token punctuation">}</span><br>
				       <br>
				       <span class="token comment">// Create a card by passing the content object</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCard</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.96</span><span class="token punctuation">)</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span>headerAvatarColor <span class="token operator">=</span> <span class="token string">"green"</span><br>
				       <br>
				       <span class="token comment">// Add a callback handler when the action is click</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">// Add a callback handler when header action is click</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span><span class="token function">setOnHeaderAction</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onHeaderAction <span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">// Add a UI Button</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>btn <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span>layout<span class="token punctuation">,</span> <span class="token string">"Button"</span><span class="token punctuation">,</span> <span class="token string">"Primary"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>btn<span class="token punctuation">.</span>margins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"1rem"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"1rem"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br>
				       <br>
				       <span class="token comment">// Add a text component</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>txt <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span>layout<span class="token punctuation">,</span> <span class="token string">"This is a UI component text added to a card layout. Below is a checkbox component."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				       <br>
				       <span class="token comment">// Add a checkboxgroup component</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>ckb <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCheckboxGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>crd<span class="token punctuation">.</span>layout<span class="token punctuation">,</span> <span class="token string">"Mango,Apple,Orange"</span><span class="token punctuation">,</span> <span class="token string">"Left,Secondary"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				       <span class="token keyword">this</span><span class="token punctuation">.</span>ckb<span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">"Select fruits"</span><br>
				   <span class="token punctuation">}</span><br>
				   <br>
				   <span class="token function">onAction</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span><br>
				   <span class="token punctuation">{</span><br>
				       ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> text <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				   <span class="token punctuation">}</span><br>
				   <br>
				   <span class="token function">onHeaderAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				   <span class="token punctuation">{</span><br>
				       ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token string">"Header action is click"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				   <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp4" class="code-py" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> extends App<br>
				   onStart<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				       <span class="token comment">#  Create a fullscreen layout with objects vertically centered</span><br>
				       this<span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY,ScrollY"</span><span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">#  initialize the content of the card with header information</span><br>
				       content <span class="token operator">=</span><br>
				           headerTitle<span class="token punctuation">:</span> <span class="token string">"DroidScript.org"</span><span class="token punctuation">,</span><br>
				           headerSubtitle<span class="token punctuation">:</span> <span class="token string">"Posted on November 16, 2023"</span><span class="token punctuation">,</span><br>
				           headerAvatar<span class="token punctuation">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span><br>
				           headerAction<span class="token punctuation">:</span> <span class="token string">"more_vert"</span><span class="token punctuation">,</span><br>
				           media<span class="token punctuation">:</span> <span class="token string">"https:# picsum.photos/300/180"</span><span class="token punctuation">,</span><br>
				           bodyTitle<span class="token punctuation">:</span> <span class="token string">"UI Components"</span><span class="token punctuation">,</span><br>
				           bodyText<span class="token punctuation">:</span> <span class="token string">"This is a card with additional UI Components as content."</span><span class="token punctuation">,</span><br>
				           actions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"favorite"</span><span class="token punctuation">,</span> <span class="token string">"share"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br>
				           actionType<span class="token punctuation">:</span> <span class="token string">"icon"</span><br>
				       <br>
				       <span class="token comment">#  Create a card by passing the content object</span><br>
				       this<span class="token punctuation">.</span>crd <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCard<span class="token punctuation">(</span>this<span class="token punctuation">.</span>main<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">"primary"</span><span class="token punctuation">,</span> <span class="token number">0.96</span><span class="token punctuation">)</span><br>
				       this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>headerAvatarColor <span class="token operator">=</span> <span class="token string">"green"</span><br>
				       <br>
				       <span class="token comment">#  Add a callback handler when the action is click</span><br>
				       this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>setOnAction<span class="token punctuation">(</span> this<span class="token punctuation">.</span>onAction <span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">#  Add a callback handler when header action is click</span><br>
				       this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>setOnHeaderAction<span class="token punctuation">(</span> this<span class="token punctuation">.</span>onHeaderAction <span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">#  Add a UI Button</span><br>
				       this<span class="token punctuation">.</span>btn <span class="token operator">=</span> ui<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>layout<span class="token punctuation">,</span> <span class="token string">"Button"</span><span class="token punctuation">,</span> <span class="token string">"Primary"</span><span class="token punctuation">)</span><br>
				       this<span class="token punctuation">.</span>btn<span class="token punctuation">.</span>margins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"1rem"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"1rem"</span><span class="token punctuation">]</span><br>
				       <br>
				       <span class="token comment">#  Add a text component</span><br>
				       this<span class="token punctuation">.</span>txt <span class="token operator">=</span> ui<span class="token punctuation">.</span>addText<span class="token punctuation">(</span>this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>layout<span class="token punctuation">,</span> <span class="token string">"This is a UI component text added to a card layout. Below is a checkbox component."</span><span class="token punctuation">)</span><br>
				       <br>
				       <span class="token comment">#  Add a checkboxgroup component</span><br>
				       this<span class="token punctuation">.</span>ckb <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCheckboxGroup<span class="token punctuation">(</span>this<span class="token punctuation">.</span>crd<span class="token punctuation">.</span>layout<span class="token punctuation">,</span> <span class="token string">"Mango,Apple,Orange"</span><span class="token punctuation">,</span> <span class="token string">"Left,Secondary"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><br>
				       this<span class="token punctuation">.</span>ckb<span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">"Select fruits"</span><br>
				   <br>
				   onAction<span class="token punctuation">(</span>text<span class="token punctuation">,</span> i<span class="token punctuation">)</span><br>
				       ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span> text <span class="token punctuation">)</span><br>
				   <br>
				   onHeaderAction<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				       ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span> <span class="token string">"Header action is click"</span> <span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp4' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp4' )">      Run      </a>
			</div>
		</div>


		<h3>Properties</h3>
		<p>The following properties are available on the <strong>Card</strong> object:</p>

		<div class="samp"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">absHeight</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup">absLeft</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_003" data-transition="pop" data-rel="popup">absTop</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">absWidth</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_005" data-transition="pop" data-rel="popup">actions</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_006" data-transition="pop" data-rel="popup">actionType</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">backColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">backImage</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">bodyText</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">bodyTitle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00e" data-transition="pop" data-rel="popup">border</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">borderColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_010" data-transition="pop" data-rel="popup">borderStyle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_012" data-transition="pop" data-rel="popup">cornerRadius</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_014" data-transition="pop" data-rel="popup">disabled</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_015" data-transition="pop" data-rel="popup">el</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_016" data-transition="pop" data-rel="popup">elevation</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_017" data-transition="pop" data-rel="popup">elStyle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_018" data-transition="pop" data-rel="popup">fontFile</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_01b" data-transition="pop" data-rel="popup">headerAction</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_01c" data-transition="pop" data-rel="popup">headerAvatar</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_01d" data-transition="pop" data-rel="popup">headerAvatarColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_01e" data-transition="pop" data-rel="popup">headerSubtitle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_01f" data-transition="pop" data-rel="popup">headerTitle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_020" data-transition="pop" data-rel="popup">height</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_022" data-transition="pop" data-rel="popup">isVisible</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_023" data-transition="pop" data-rel="popup">layout</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_024" data-transition="pop" data-rel="popup">left</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_025" data-transition="pop" data-rel="popup">margins</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_026" data-transition="pop" data-rel="popup">media</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_027" data-transition="pop" data-rel="popup">opacity</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_028" data-transition="pop" data-rel="popup">options</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_029" data-transition="pop" data-rel="popup">padding</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_02a" data-transition="pop" data-rel="popup">parent</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_02b" data-transition="pop" data-rel="popup">position</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_02c" data-transition="pop" data-rel="popup">rotation</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_039" data-transition="pop" data-rel="popup">textColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_03a" data-transition="pop" data-rel="popup">textSize</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_03b" data-transition="pop" data-rel="popup">top</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_03c" data-transition="pop" data-rel="popup">type</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_03d" data-transition="pop" data-rel="popup">visibility</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_03e" data-transition="pop" data-rel="popup">width</a> → <b>Number</b></div>

		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Card</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">addBodyItems</a>(
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">text</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">addHeaderItems</a>(
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">subtitle</a>,
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">avatar</a>,
			<a href="#pop_str_007" data-transition="pop" data-rel="popup">action</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup" class="baseFunc">animate</a>(
			<a href="#pop_str_008" data-transition="pop" data-rel="popup">anim</a>,
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">duration</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup" class="baseFunc">bringForward</a>(
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup" class="baseFunc">destroy</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup" class="baseFunc">getPosition</a>(
			<a href="#pop_str_009" data-transition="pop" data-rel="popup">options</a> )
			→ <b>ui object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup" class="baseFunc">gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_021" data-transition="pop" data-rel="popup" class="baseFunc">hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_02d" data-transition="pop" data-rel="popup" class="baseFunc">sendBackward</a>(
			<a href="#pop_num_005" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02e" data-transition="pop" data-rel="popup" class="baseFunc">setBorder</a>(
			<a href="#pop_num_006" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_007" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_008" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_009" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_00a" data-transition="pop" data-rel="popup">clr</a>,
			<a href="#pop_str_00b" data-transition="pop" data-rel="popup">style</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02f" data-transition="pop" data-rel="popup" class="baseFunc">setCornerRadius</a>(
			<a href="#pop_num_00a" data-transition="pop" data-rel="popup">tl</a>,
			<a href="#pop_num_00b" data-transition="pop" data-rel="popup">tr</a>,
			<a href="#pop_num_00c" data-transition="pop" data-rel="popup">br</a>,
			<a href="#pop_num_00d" data-transition="pop" data-rel="popup">bl</a>,
			<a href="#pop_str_00c" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_030" data-transition="pop" data-rel="popup" class="baseFunc">setMargins</a>(
			<a href="#pop_num_00e" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_00f" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_010" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_011" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_00d" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_031" data-transition="pop" data-rel="popup">setOnAction</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">cb</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_032" data-transition="pop" data-rel="popup" class="baseFunc">setOnContextMenu</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_033" data-transition="pop" data-rel="popup">setOnHeaderAction</a>(
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">cb</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_034" data-transition="pop" data-rel="popup" class="baseFunc">setPadding</a>(
			<a href="#pop_num_012" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_013" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_014" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_013" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_00e" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_035" data-transition="pop" data-rel="popup" class="baseFunc">setPosition</a>(
			<a href="#pop_num_016" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_017" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_str_00e" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_036" data-transition="pop" data-rel="popup" class="baseFunc">setScale</a>(
			<a href="#pop_num_018" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_019" data-transition="pop" data-rel="popup">y</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_037" data-transition="pop" data-rel="popup" class="baseFunc">setSize</a>(
			<a href="#pop_num_016" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_017" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_010" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_038" data-transition="pop" data-rel="popup" class="baseFunc">show</a>()
		</div>

	</div>

	<div data-role="popup" id="pop_num_001" class="ui-content"><b>Number:</b> Fraction of the parent width.</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>Number:</b> Fraction of the parent height.</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>Number:</b> The time in milliseconds.</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>Number:</b> The z-index. A negative value behaves like `sendBackward` method.</div>
	<div data-role="popup" id="pop_num_005" class="ui-content"><b>Number:</b> The z-index. A positve value behaves like `bringForward` method.</div>
	<div data-role="popup" id="pop_num_006" class="ui-content"><b>Number:</b> Border-left thickness in pixels.</div>
	<div data-role="popup" id="pop_num_007" class="ui-content"><b>Number:</b> Border-top thickness in pixels.</div>
	<div data-role="popup" id="pop_num_008" class="ui-content"><b>Number:</b> Border-right thickness in pixels.</div>
	<div data-role="popup" id="pop_num_009" class="ui-content"><b>Number:</b> Border-bottom thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00a" class="ui-content"><b>Number:</b> Top-Left border radius.</div>
	<div data-role="popup" id="pop_num_00b" class="ui-content"><b>Number:</b> Top-Right border radius.</div>
	<div data-role="popup" id="pop_num_00c" class="ui-content"><b>Number:</b> Bottom-Right border radius.</div>
	<div data-role="popup" id="pop_num_00d" class="ui-content"><b>Number:</b> Bottom-Left border radius.</div>
	<div data-role="popup" id="pop_num_00e" class="ui-content"><b>Number:</b> Left margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_00f" class="ui-content"><b>Number:</b> Top margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_010" class="ui-content"><b>Number:</b> Right margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_011" class="ui-content"><b>Number:</b> Bottom margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_012" class="ui-content"><b>Number:</b> Fraction of the component width.</div>
	<div data-role="popup" id="pop_num_013" class="ui-content"><b>Number:</b> Fraction of the component height. [0-1]</div>
	<div data-role="popup" id="pop_num_014" class="ui-content"><b>Number:</b> Fraction of the component width. [0-1]</div>
	<div data-role="popup" id="pop_num_016" class="ui-content"><b>Number:</b> Fraction of the parent width. [0-1]</div>
	<div data-role="popup" id="pop_num_017" class="ui-content"><b>Number:</b> Fraction of the parent height. [0-1]</div>
	<div data-role="popup" id="pop_num_018" class="ui-content"><b>Number:</b> The x-scale of the component.Values less than `0` is smaller than the normal. While values greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_num_019" class="ui-content"><b>Number:</b> The y-scale of the component. Values less than `1` is smaller than the normal. While vaues greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“A comma separated option for the card.”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“The title of the content of the card.”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“The description of the card.”</docstr></div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>String:</b> <docstr>“The title of the card.”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“The subheader of the card.”</docstr></div>
	<div data-role="popup" id="pop_str_006" class="ui-content"><b>String:</b> <docstr>“Can be a char or a path to an image.”</docstr></div>
	<div data-role="popup" id="pop_str_007" class="ui-content"><b>String:</b> <docstr>“Material icon font.”</docstr></div>
	<div data-role="popup" id="pop_str_008" class="ui-content"><b>String:</b> <docstr>“The type of animation. Here are the available values<br>`bounce`”</docstr>, <docstr>“ `flash`”</docstr>, <docstr>“ `pulse`”</docstr>, <docstr>“ `rubberBand`”</docstr>, <docstr>“ `shakeX`”</docstr>, <docstr>“ `shakeY`”</docstr>, <docstr>“ `headShake`”</docstr>, <docstr>“ `swing`”</docstr>, <docstr>“ `tada`”</docstr>, <docstr>“ `wobble`”</docstr>, <docstr>“ `jello`”</docstr>, <docstr>“ `heartBeat`”</docstr>, <docstr>“<br>Back Entrances: `backInDown`”</docstr>, <docstr>“ `backInLeft`”</docstr>, <docstr>“ `backInRight`”</docstr>, <docstr>“ `backInUp`<br>Back Exits: `backOutDown`”</docstr>, <docstr>“ `backOutLeft`”</docstr>, <docstr>“ `backOutRight`”</docstr>, <docstr>“ `backOutUp`<br>Bouncing Entrances: `bounceIn`”</docstr>, <docstr>“ `bounceInDown`”</docstr>, <docstr>“ `bounceInLeft`”</docstr>, <docstr>“ `bounceInRight`”</docstr>, <docstr>“ `bounceInUp`<br>Bouncing exits: `bounceOut`”</docstr>, <docstr>“ `bounceOutDown`”</docstr>, <docstr>“ `bounceOutLeft`”</docstr>, <docstr>“ `bounceOutRight`”</docstr>, <docstr>“ `bounceOutUp`<br>Fading entrances: `fadeIn`”</docstr>, <docstr>“ `fadeInDown`”</docstr>, <docstr>“ `fadeInDownBig`”</docstr>, <docstr>“ `fadeInLeft`”</docstr>, <docstr>“ `fadeInLeftBig`”</docstr>, <docstr>“ `fadeInRight`”</docstr>, <docstr>“ `fadeInRightBig`”</docstr>, <docstr>“ `fadeInUp`”</docstr>, <docstr>“ `fadeInUpBig`”</docstr>, <docstr>“ `fadeInTopLeft`”</docstr>, <docstr>“ `fadeInTopRight`”</docstr>, <docstr>“ `fadeInBottomLeft`”</docstr>, <docstr>“ `fadeInBottomRight`<br>Fading exits: `fadeOut`”</docstr>, <docstr>“ `fadeOutDown`”</docstr>, <docstr>“ `fadeOutDownBig`”</docstr>, <docstr>“ `fadeOutLeft`”</docstr>, <docstr>“ `fadeOutLeftBig`”</docstr>, <docstr>“ `fadeOutRight`”</docstr>, <docstr>“ `fadeOutRightBig`”</docstr>, <docstr>“ `fadeOutUp`”</docstr>, <docstr>“ `fadeOutUpBig`”</docstr>, <docstr>“ `fadeOutTopLeft`”</docstr>, <docstr>“ `fadeOutTopRight`”</docstr>, <docstr>“ `fadeOutBottomRight`”</docstr>, <docstr>“ `fadeOutBottomLeft`<br>Flippers: `flip`”</docstr>, <docstr>“ `flipInX`”</docstr>, <docstr>“ `flipInY`”</docstr>, <docstr>“ `flipOutX`”</docstr>, <docstr>“ `flipOutY`<br>Lightspeed: `lightSpeedInRight`”</docstr>, <docstr>“ `lightSpeedInLeft`”</docstr>, <docstr>“ `lightSpeedOutRight`”</docstr>, <docstr>“ `lightSpeedOutLeft`<br>Rotating Entrances: `rotateIn`”</docstr>, <docstr>“ `rotateInDownLeft`”</docstr>, <docstr>“ `rotateInDownRight`”</docstr>, <docstr>“ `rotateInUpLeft`”</docstr>, <docstr>“ `rotateInUpRight`<br>Rotating Exits: `rotateOut`”</docstr>, <docstr>“ `rotateOutDownLeft`”</docstr>, <docstr>“ `rotateOutDownRight`”</docstr>, <docstr>“ `rotateOutUpLeft`”</docstr>, <docstr>“ `rotateOutUpRight`<br>Specials: `hinge`”</docstr>, <docstr>“ `jackInTheBox`”</docstr>, <docstr>“ `rollIn`”</docstr>, <docstr>“ `rollOut`<br>Zooming Entrances: `zoomIn`”</docstr>, <docstr>“ `zoomInDown`”</docstr>, <docstr>“ `zoomInLeft`”</docstr>, <docstr>“ `zoomInRight`”</docstr>, <docstr>“ `zoomInUp`<br>Zooming Exits: `zoomOut`”</docstr>, <docstr>“ `zoomOutDown`”</docstr>, <docstr>“ `zoomOutLeft`”</docstr>, <docstr>“ `zoomOutRight`”</docstr>, <docstr>“ `zoomOutUp`<br>Sliding Entrances: `slideInDown`”</docstr>, <docstr>“ `slideInLeft`”</docstr>, <docstr>“ `slideInRight`”</docstr>, <docstr>“ `slideInUp`<br>Sliding Exits: `slideOutDown`”</docstr>, <docstr>“ `slideOutLeft`”</docstr>, <docstr>“ `slideOutRight`”</docstr>, <docstr>“ `slideOutUp`”</docstr></div>
	<div data-role="popup" id="pop_str_009" class="ui-content"><b>String:</b> <docstr>“The mode of the measurements. Values can be `px` or `%`”</docstr></div>
	<div data-role="popup" id="pop_str_00a" class="ui-content"><b>String:</b> <docstr>“Border color in hexadecimal format `#rrggbb`.”</docstr></div>
	<div data-role="popup" id="pop_str_00b" class="ui-content"><b>String:</b> <docstr>“Border-styles. Values can be `dotted`”</docstr>, <docstr>“ `dashed`”</docstr>, <docstr>“ `solid`”</docstr>, <docstr>“ `double`”</docstr>, <docstr>“ `groove`”</docstr>, <docstr>“ `ridge`”</docstr>, <docstr>“ `inset` and `outset`. Default is `solid`”</docstr></div>
	<div data-role="popup" id="pop_str_00c" class="ui-content"><b>String:</b> <docstr>“Unit of measurement. Values are `px` `rem` or `%`.”</docstr></div>
	<div data-role="popup" id="pop_str_00d" class="ui-content"><b>String:</b> <docstr>“Unit of measurement.<br>`rem` for root em.<br>`px` for pixels<br>`%` relative to its parent dimension.<br>`v` relative to viewport dimension.”</docstr></div>
	<div data-role="popup" id="pop_str_00e" class="ui-content"><b>String:</b> <docstr>“Unit of measurement.<br>`rem` for root em.<br>`px` for pixels<br>`%` relative to its parent dimensions<br>`v` relative to viewport dimensions.”</docstr></div>
	<div data-role="popup" id="pop_str_010" class="ui-content"><b>String:</b> <docstr>“Unit of measurment. Can be "px"”</docstr>, <docstr>“ "rem"”</docstr>, <docstr>“ "%"”</docstr>, <docstr>“ "v" for viewport width/height or any css supported unit.”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> The layout where to add the card.</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> A JSON object representing the contents of the card. Passing the card contents on initialization makes your app layout loads faster than setting each property individually.</div>
	<div data-role="popup" id="pop_obj_003" class="ui-content"><b>Object:</b> The pointer event object.</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String: “Material icon.”')">icon </a>,
		<a href="" onclick="app.ShowPopup('Number: The index of the action.')">index </a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>(
		<a href="" onclick="switchPopup(this, '#pop_obj_003')" data-transition="pop" data-rel="popup">event </a>
	)</div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>crd.absHeight</b><br>Returns the absolute height of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>crd.absLeft</b><br>Returns the absolute distance of the control from the left in pixels.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>crd.absTop</b><br>Returns the absolute distance of the control from the top in pixels.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>crd.absWidth</b><br>Returns the absolute width of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>crd.actions</b><br>Sets or returns the list of card actions. If <kbd>actionType</kbd> is an <kbd>"icon"</kbd>, provide a list of material icon fonts.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>crd.actionType</b><br>Sets or returns the type of actions in the card. Values can be <kbd>"button"</kbd> or <kbd>"icon"</kbd>. If <kbd>"icon"</kbd> please provide a material icon actions.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>crd.addBodyItems</b><br>Add card body items. Using this method is faster than setting the individual.</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>crd.addHeaderItems</b><br>Add header items to the card. Using this method is faster than setting the individual header property.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>crd.animate</b><br>Animate the component.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>crd.backColor</b><br>A hexadecimal color of the form <kbd>#rrggbb</kbd></div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>crd.backImage</b><br>The path to your image file.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>crd.bodyText</b><br>Sets or returns the text of the card content.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>crd.bodyTitle</b><br>Sets or returns the title of the card content.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>crd.border</b><br>Sets or returns the border thickness in pixels.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>crd.borderColor</b><br>Sets or returns the border color. Color is in hexadecimal form <kbd>#rrggbb</kbd></div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>crd.borderStyle</b><br>Sets or returns the border style. Values can be <kbd>dotted</kbd>, <kbd>dashed</kbd>, <kbd>solid</kbd>, <kbd>double</kbd>, <kbd>groove</kbd>, <kbd>ridge</kbd>, <kbd>inset</kbd> and <kbd>outset</kbd>. Default is <kbd>solid</kbd>.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>crd.bringForward</b><br><a href="aname.htm" data-ajax="false">aname</a> bringForward<br>Bring this component forward by a given z-index.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>crd.cornerRadius</b><br>Sets or returns the corner radius in pixels.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>crd.destroy</b><br>Destroy the component.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>crd.disabled</b><br>Sets or returns the <kbd>disabled</kbd> state of the control.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>crd.el</b><br>Returns the html container element for the control.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>crd.elevation</b><br>Sets or returns the elevation of the card.</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>crd.elStyle</b><br>Sets the style of the html container element.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>crd.fontFile</b><br>Sets or returns the <kbd>relative</kbd> path to the font-family use.</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>crd.getPosition</b><br>Returns the position of the component. The return object is of the form <kbd>{left, top, right, bottom}</kbd></div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>crd.gone</b><br>Destroy the component.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>crd.headerAction</b><br>Sets or returns the card header action.</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>crd.headerAvatar</b><br>Sets or returns the card header avatar. Can be a character or a path to an image.</div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>crd.headerAvatarColor</b><br>Sets or returns the card header avatar color in css supported color format.</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>crd.headerSubtitle</b><br>Sets or returns the card header subheader or subtitle.</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>crd.headerTitle</b><br>Sets or returns the card header title.</div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>crd.height</b><br>Sets or returns the height of the control as a fraction of the parent control.</div>
	<div data-role="popup" id="pop_dsc_021" class="ui-content"><b>crd.hide</b><br>Hide the component.</div>
	<div data-role="popup" id="pop_dsc_022" class="ui-content"><b>crd.isVisible</b><br>Returns whether the control is visible or not.</div>
	<div data-role="popup" id="pop_dsc_023" class="ui-content"><b>crd.layout</b><br>Returns the div element of the card content. It is useful when you want to add ui components into the content of the card.</div>
	<div data-role="popup" id="pop_dsc_024" class="ui-content"><b>crd.left</b><br>Returns the distance of the control from the left.</div>
	<div data-role="popup" id="pop_dsc_025" class="ui-content"><b>crd.margins</b><br>Sets or returns the margin of the control. Works on controls with <kbd>Linear</kbd> parent only. You can also pass a number to set equal margins for all sides.</div>
	<div data-role="popup" id="pop_dsc_026" class="ui-content"><b>crd.media</b><br>Sets or returns the card media.</div>
	<div data-role="popup" id="pop_dsc_027" class="ui-content"><b>crd.opacity</b><br>Sets or returns the opacity of the control.</div>
	<div data-role="popup" id="pop_dsc_028" class="ui-content"><b>crd.options</b><br>Sets or returns the <kbd>options</kbd> of the control.</div>
	<div data-role="popup" id="pop_dsc_029" class="ui-content"><b>crd.padding</b><br>Sets or returns the padding of the control. You can also pass a number to set equal padding for all sides.</div>
	<div data-role="popup" id="pop_dsc_02a" class="ui-content"><b>crd.parent</b><br>Returns the parent layout control.</div>
	<div data-role="popup" id="pop_dsc_02b" class="ui-content"><b>crd.position</b><br>Returns the position of the control. The returned object has <kbd>left</kbd> <kbd>top</kbd> <kbd>right</kbd> and <kbd>bottom</kbd> props.</div>
	<div data-role="popup" id="pop_dsc_02c" class="ui-content"><b>crd.rotation</b><br>Sets or returns the angle of rotation in degrees.</div>
	<div data-role="popup" id="pop_dsc_02d" class="ui-content"><b>crd.sendBackward</b><br>Bring this component backward by a given z-index.</div>
	<div data-role="popup" id="pop_dsc_02e" class="ui-content"><b>crd.setBorder</b><br>Sets the border line for the component container.</div>
	<div data-role="popup" id="pop_dsc_02f" class="ui-content"><b>crd.setCornerRadius</b><br>Sets the corner radius of the component.</div>
	<div data-role="popup" id="pop_dsc_030" class="ui-content"><b>crd.setMargins</b><br>Sets the margin of the component.</div>
	<div data-role="popup" id="pop_dsc_031" class="ui-content"><b>crd.setOnAction</b><br>Add a callback function to be called when a card action is click.</div>
	<div data-role="popup" id="pop_dsc_032" class="ui-content"><b>crd.setOnContextMenu</b><br>Adds a callback function on right click.</div>
	<div data-role="popup" id="pop_dsc_033" class="ui-content"><b>crd.setOnHeaderAction</b><br>Add a callback function to be called when the header action icon is click.</div>
	<div data-role="popup" id="pop_dsc_034" class="ui-content"><b>crd.setPadding</b><br>Sets the padding of the component's container.</div>
	<div data-role="popup" id="pop_dsc_035" class="ui-content"><b>crd.setPosition</b><br>Sets the position of the component relative to its parent dimensions.</div>
	<div data-role="popup" id="pop_dsc_036" class="ui-content"><b>crd.setScale</b><br>Sets the x and y scaling of the component. This will ignore the positioning and flow of controls in the layout.</div>
	<div data-role="popup" id="pop_dsc_037" class="ui-content"><b>crd.setSize</b><br>Sets the size of the component.</div>
	<div data-role="popup" id="pop_dsc_038" class="ui-content"><b>crd.show</b><br>Show the component.</div>
	<div data-role="popup" id="pop_dsc_039" class="ui-content"><b>crd.textColor</b><br>Sets or returns the color of the text.</div>
	<div data-role="popup" id="pop_dsc_03a" class="ui-content"><b>crd.textSize</b><br>Sets or returns the size of the text within the control.</div>
	<div data-role="popup" id="pop_dsc_03b" class="ui-content"><b>crd.top</b><br>Returns the distance of the control from the top.</div>
	<div data-role="popup" id="pop_dsc_03c" class="ui-content"><b>crd.type</b><br>Returns the type of the control.</div>
	<div data-role="popup" id="pop_dsc_03d" class="ui-content"><b>crd.visibility</b><br>Sets or returns the visibility of the control.</div>
	<div data-role="popup" id="pop_dsc_03e" class="ui-content"><b>crd.width</b><br>Sets or returns the width of the control as a fraction of the parent control.</div>
</div>
</body>

</html>
