
<!DOCTYPE html>
<html>

<head>
	<title>addCheckboxGroup</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>addCheckboxGroup</h1>
		<div class="ui-btn-right" style="font-size:50%">
			<a class="code-js" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">JS</a>
			<a class="code-py" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">Py</a>
			<a data-icon="gear" data-role="button" data-inline="true" data-mini="true" data-iconpos="notext" onclick="tglTheme()"></a>
		</div>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Properties')">Properties</a><br>
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>A checkbox group in UI development is a collection of checkboxes grouped together for related selections or options.</p>

		<div class="samp">
		ckb = ui.addCheckboxGroup(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">parent</a>,
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">list?</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options?</a>,
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">width?</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">height?</a> )
			→ <b>ui object:</b> CheckboxGroup
		</div>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic</h3>
			<div id="examp1" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Initialize checkbox items</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 3"</span><br>
				        <span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">// Add a checkbox group to the main layout.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCheckboxGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler for `onTouch` event</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTouch <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Value of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> value <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp1" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token comment"># Creates a fullscreen layout with objects vertically centered.</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Initialize checkbox items</span><br>
				    items <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				        <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 3"</span><br>
				    <span class="token punctuation">]</span><br>
				    <br>
				    <span class="token comment"># Add a checkbox group to the main layout.</span><br>
				    ckg <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCheckboxGroup<span class="token punctuation">(</span>main<span class="token punctuation">,</span> items<span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add a callback handler for `onTouch` event</span><br>
				    ckg<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span>onTouch<span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">onTouch</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Value of </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp1' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp1' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Colors</h3>
			<div id="examp2" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span>childSpacing <span class="token operator">=</span> <span class="token string">"evenly"</span><br>
				        <br>
				        <span class="token comment">// Initialize the checkbox items</span><br>
				        <span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 3"</span><br>
				        <span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">// Add a default CheckboxGroup to the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg1 <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCheckboxGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> list<span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg1<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTouch <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a primary CheckboxGroup to the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg2 <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCheckboxGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> list<span class="token punctuation">,</span> <span class="token string">"Primary"</span><span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg2<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTouch <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a secondary CheckboxGroup to the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg3 <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCheckboxGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> list<span class="token punctuation">,</span> <span class="token string">"Secondary"</span><span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg3<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTouch <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Value of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> value <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp2" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token comment"># Creates a fullscreen layout with objects vertically centered.</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    main<span class="token punctuation">.</span>childSpacing <span class="token operator">=</span> <span class="token string">"evenly"</span><br>
				    <br>
				    <span class="token comment"># Initialize the checkbox items</span><br>
				    <span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				        <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 3"</span><br>
				    <span class="token punctuation">]</span><br>
				    <br>
				    <span class="token comment"># Add a default CheckboxGroup to the main layout</span><br>
				    ckg1 <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCheckboxGroup<span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><br>
				    ckg1<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span>onTouch<span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add a primary CheckboxGroup to the main layout</span><br>
				    ckg2 <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCheckboxGroup<span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token string">"Primary"</span><span class="token punctuation">)</span><br>
				    ckg2<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span>onTouch<span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Add a secondary CheckboxGroup to the main layout</span><br>
				    ckg3 <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCheckboxGroup<span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token string">"Secondary"</span><span class="token punctuation">)</span><br>
				    ckg3<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span>onTouch<span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">onTouch</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Value of </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp2' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp2' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Elevated</h3>
			<div id="examp3" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Initialize the checkbox list items</span><br>
				        <span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 3"</span><br>
				        <span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">// Add an elevated checkbox group to the main layout.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCheckboxGroup</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> list<span class="token punctuation">,</span> <span class="token string">"Elevated,Secondary"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Set the label of the CheckboxGroup</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg<span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">"Select as many as you can"</span><br>
				        <br>
				        <span class="token comment">// Set the elevation of the CheckboxGroup container</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg<span class="token punctuation">.</span>elevation <span class="token operator">=</span> <span class="token number">4</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler for `onTouch` event</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTouch <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Value of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> value <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp3" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token comment"># Creates a fullscreen layout with objects vertically centered.</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Initialize the checkbox list items</span><br>
				    <span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				        <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 3"</span><br>
				    <span class="token punctuation">]</span><br>
				    <br>
				    <span class="token comment"># Add an elevated checkbox group to the main layout.</span><br>
				    ckg <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCheckboxGroup<span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token string">"Elevated,Secondary"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Set the label of the CheckboxGroup</span><br>
				    ckg<span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">"Select as many as you can"</span><br>
				    <br>
				    <span class="token comment"># Set the elevation of the CheckboxGroup container</span><br>
				    ckg<span class="token punctuation">.</span>elevation <span class="token operator">=</span> <span class="token number">4</span><br>
				    <br>
				    <span class="token comment"># Add a callback handler for `onTouch` event</span><br>
				    ckg<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span>onTouch<span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">onTouch</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Value of </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp3' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp3' )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Outlined</h3>
			<div id="examp4" class="code-js" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Initialize the checkbox items</span><br>
				        <span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"Checkbox item 3"</span><br>
				        <span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">// Add an outlined checkbox group to the main layout.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addCheckboxGroup</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> list<span class="token punctuation">,</span> <span class="token string">"Outlined,Secondary"</span><span class="token punctuation">,</span> <span class="token number">0.9</span> <span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg<span class="token punctuation">.</span><span class="token function">setOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTouch <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Set the label of the CheckboxGroup items</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg<span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">"Select as many as you can"</span><br>
				        <br>
				        <span class="token comment">// Set the cornerRadius to `20`</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>ckg<span class="token punctuation">.</span>cornerRadius <span class="token operator">=</span> <span class="token number">20</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Value of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> value <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp4" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> hybrid <span class="token keyword">import</span> ui<br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token comment"># Creates a fullscreen layout with objects vertically centered.</span><br>
				    main <span class="token operator">=</span> ui<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Initialize the checkbox items</span><br>
				    <span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				        <span class="token string">"Checkbox item 1"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 2"</span><span class="token punctuation">,</span><br>
				        <span class="token string">"Checkbox item 3"</span><br>
				    <span class="token punctuation">]</span><br>
				    <br>
				    <span class="token comment"># Add an outlined checkbox group to the main layout.</span><br>
				    ckg <span class="token operator">=</span> ui<span class="token punctuation">.</span>addCheckboxGroup<span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token string">"Outlined,Secondary"</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">)</span><br>
				    ckg<span class="token punctuation">.</span>setOnTouch<span class="token punctuation">(</span>onTouch<span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment"># Set the label of the CheckboxGroup items</span><br>
				    ckg<span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">"Select as many as you can"</span><br>
				    <br>
				    <span class="token comment"># Set the cornerRadius to `20`</span><br>
				    ckg<span class="token punctuation">.</span>cornerRadius <span class="token operator">=</span> <span class="token number">20</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">onTouch</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    ui<span class="token punctuation">.</span>showPopup<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Value of </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp4' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp4' )">      Run      </a>
			</div>
		</div>


		<h3>Properties</h3>
		<p>The following properties are available on the <strong>CheckboxGroup</strong> object:</p>

		<div class="samp"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">absHeight</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup">absLeft</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_003" data-transition="pop" data-rel="popup">absTop</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">absWidth</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_007" data-transition="pop" data-rel="popup">backColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_008" data-transition="pop" data-rel="popup">backImage</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_009" data-transition="pop" data-rel="popup">border</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">borderColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">borderStyle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">checkIcon</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00e" data-transition="pop" data-rel="popup">color</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">cornerRadius</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_011" data-transition="pop" data-rel="popup">disabled</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_012" data-transition="pop" data-rel="popup">el</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_013" data-transition="pop" data-rel="popup">elevation</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_014" data-transition="pop" data-rel="popup">elStyle</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_015" data-transition="pop" data-rel="popup">fontFile</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_01f" data-transition="pop" data-rel="popup">height</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_021" data-transition="pop" data-rel="popup">iconColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_022" data-transition="pop" data-rel="popup">iconSize</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_023" data-transition="pop" data-rel="popup">isVisible</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_024" data-transition="pop" data-rel="popup">itemPadding</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_025" data-transition="pop" data-rel="popup">label</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_026" data-transition="pop" data-rel="popup">left</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_027" data-transition="pop" data-rel="popup">list</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_028" data-transition="pop" data-rel="popup">margins</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_029" data-transition="pop" data-rel="popup">opacity</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_02a" data-transition="pop" data-rel="popup">options</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_02b" data-transition="pop" data-rel="popup">orientation</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_02c" data-transition="pop" data-rel="popup">outlined</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_02d" data-transition="pop" data-rel="popup">padding</a> → <b>List</b></div>
		<div class="samp"><a href="#pop_dsc_02e" data-transition="pop" data-rel="popup">parent</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_030" data-transition="pop" data-rel="popup">position</a> → <b>Object</b></div>
		<div class="samp"><a href="#pop_dsc_033" data-transition="pop" data-rel="popup">rotation</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_04a" data-transition="pop" data-rel="popup">sizeVariant</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_04b" data-transition="pop" data-rel="popup">spaceBetween</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_04c" data-transition="pop" data-rel="popup">textColor</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_04d" data-transition="pop" data-rel="popup">textSize</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_04e" data-transition="pop" data-rel="popup">top</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_04f" data-transition="pop" data-rel="popup">type</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_050" data-transition="pop" data-rel="popup">uncheckIcon</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_051" data-transition="pop" data-rel="popup">visibility</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_052" data-transition="pop" data-rel="popup">width</a> → <b>Number</b></div>

		<h3>Methods</h3>
		<p>The following methods are available on the <strong>CheckboxGroup</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">addItem</a>(
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">text</a>,
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">index</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">animate</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">anim</a>,
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">duration</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup" class="baseFunc">bringForward</a>(
			<a href="#pop_num_005" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup" class="baseFunc">destroy</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup">getCheckedByIndex</a>(
			<a href="#pop_num_006" data-transition="pop" data-rel="popup">index</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup">getCheckedByName</a>(
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">name</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup">getCheckedItems</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup">getEnabled</a>(
			<a href="#pop_num_007" data-transition="pop" data-rel="popup">index</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup">getEnabledByName</a>(
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">name</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01b" data-transition="pop" data-rel="popup">getIcon</a>() → <b>Object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01c" data-transition="pop" data-rel="popup" class="baseFunc">getPosition</a>(
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">options</a> )
			→ <b>ui object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01d" data-transition="pop" data-rel="popup">getText</a>(
			<a href="#pop_num_008" data-transition="pop" data-rel="popup">index</a> )
			→ <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01e" data-transition="pop" data-rel="popup" class="baseFunc">gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_020" data-transition="pop" data-rel="popup" class="baseFunc">hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_02f" data-transition="pop" data-rel="popup">popItem</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_031" data-transition="pop" data-rel="popup">removeItemByIndex</a>(
			<a href="#pop_num_009" data-transition="pop" data-rel="popup">index</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_032" data-transition="pop" data-rel="popup">removeItemByName</a>(
			<a href="#pop_str_007" data-transition="pop" data-rel="popup">title</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_034" data-transition="pop" data-rel="popup" class="baseFunc">sendBackward</a>(
			<a href="#pop_num_00a" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_035" data-transition="pop" data-rel="popup" class="baseFunc">setBorder</a>(
			<a href="#pop_num_00b" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_00c" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_00d" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_00e" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_008" data-transition="pop" data-rel="popup">clr</a>,
			<a href="#pop_str_009" data-transition="pop" data-rel="popup">style</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_036" data-transition="pop" data-rel="popup">setCheckedByIndex</a>(
			<a href="#pop_num_00f" data-transition="pop" data-rel="popup">item</a>,
			<a href="#pop_bin_001" data-transition="pop" data-rel="popup">bool</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_037" data-transition="pop" data-rel="popup">setCheckedByName</a>(
			<a href="#pop_str_00a" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_bin_001" data-transition="pop" data-rel="popup">bool</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_038" data-transition="pop" data-rel="popup" class="baseFunc">setCornerRadius</a>(
			<a href="#pop_num_010" data-transition="pop" data-rel="popup">tl?</a>,
			<a href="#pop_num_011" data-transition="pop" data-rel="popup">tr?</a>,
			<a href="#pop_num_012" data-transition="pop" data-rel="popup">bl?</a>,
			<a href="#pop_num_013" data-transition="pop" data-rel="popup">br?</a>,
			<a href="#pop_str_00b" data-transition="pop" data-rel="popup">mode='px'</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_039" data-transition="pop" data-rel="popup">setEnabled</a>(
			<a href="#pop_num_007" data-transition="pop" data-rel="popup">index</a>,
			<a href="#pop_bin_003" data-transition="pop" data-rel="popup">value</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03a" data-transition="pop" data-rel="popup">setEnabledByName</a>(
			<a href="#pop_str_00c" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_bin_004" data-transition="pop" data-rel="popup">value</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03b" data-transition="pop" data-rel="popup">setIcon</a>(
			<a href="#pop_str_00d" data-transition="pop" data-rel="popup">checked</a>,
			<a href="#pop_str_00d" data-transition="pop" data-rel="popup">unchecked</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03c" data-transition="pop" data-rel="popup">setItemPadding</a>(
			<a href="#pop_num_015" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_016" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_017" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_018" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_00f" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03d" data-transition="pop" data-rel="popup">setList</a>(
			<a href="#pop_lst_002" data-transition="pop" data-rel="popup">list</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03e" data-transition="pop" data-rel="popup" class="baseFunc">setMargins</a>(
			<a href="#pop_num_019" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_01a" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_01b" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_01c" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_010" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03f" data-transition="pop" data-rel="popup">setOnChange</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_040" data-transition="pop" data-rel="popup" class="baseFunc">setOnContextMenu</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_041" data-transition="pop" data-rel="popup">setOnTouch</a>(
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_042" data-transition="pop" data-rel="popup" class="baseFunc">setPadding</a>(
			<a href="#pop_num_01d" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_01e" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_01f" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_01e" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_011" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_043" data-transition="pop" data-rel="popup" class="baseFunc">setPosition</a>(
			<a href="#pop_num_021" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_022" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_str_011" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_044" data-transition="pop" data-rel="popup" class="baseFunc">setScale</a>(
			<a href="#pop_num_023" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_024" data-transition="pop" data-rel="popup">y</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_045" data-transition="pop" data-rel="popup" class="baseFunc">setSize</a>(
			<a href="#pop_num_021" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_022" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_013" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_046" data-transition="pop" data-rel="popup">setTextByIndex</a>(
			<a href="#pop_num_027" data-transition="pop" data-rel="popup">index</a>,
			<a href="#pop_str_014" data-transition="pop" data-rel="popup">val</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_047" data-transition="pop" data-rel="popup">setTextByName</a>(
			<a href="#pop_str_015" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_str_016" data-transition="pop" data-rel="popup">val</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_048" data-transition="pop" data-rel="popup">shiftItem</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_049" data-transition="pop" data-rel="popup" class="baseFunc">show</a>()
		</div>

	</div>

	<div data-role="popup" id="pop_bin_001" class="ui-content"><b>Boolean:</b> The item value. Can be `true` or `false`.</div>
	<div data-role="popup" id="pop_bin_003" class="ui-content"><b>Boolean:</b> Values can be `true` or `false`.</div>
	<div data-role="popup" id="pop_bin_004" class="ui-content"><b>Boolean:</b> Values can be `true` or `false`</div>
	<div data-role="popup" id="pop_num_001" class="ui-content"><b>Number:</b> Fraction of the parent width `[0-1]`.</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>Number:</b> Fraction of the parent height `[0-1]`.</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>Number:</b> The index in which to insert the item.</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>Number:</b> The time in milliseconds.</div>
	<div data-role="popup" id="pop_num_005" class="ui-content"><b>Number:</b> The z-index. A negative value behaves like `sendBackward` method.</div>
	<div data-role="popup" id="pop_num_006" class="ui-content"><b>Number:</b> The index of the corresponding item.</div>
	<div data-role="popup" id="pop_num_007" class="ui-content"><b>Number:</b> The index of the checkbox item.</div>
	<div data-role="popup" id="pop_num_008" class="ui-content"><b>Number:</b> The index of the list</div>
	<div data-role="popup" id="pop_num_009" class="ui-content"><b>Number:</b> The index of the corresponding item to remove.</div>
	<div data-role="popup" id="pop_num_00a" class="ui-content"><b>Number:</b> The z-index. A positve value behaves like `bringForward` method.</div>
	<div data-role="popup" id="pop_num_00b" class="ui-content"><b>Number:</b> Border-left thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00c" class="ui-content"><b>Number:</b> Border-top thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00d" class="ui-content"><b>Number:</b> Border-right thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00e" class="ui-content"><b>Number:</b> Border-bottom thickness in pixels.</div>
	<div data-role="popup" id="pop_num_00f" class="ui-content"><b>Number:</b> The item or index of the item.</div>
	<div data-role="popup" id="pop_num_010" class="ui-content"><b>Number:</b> Top-left corner radius.</div>
	<div data-role="popup" id="pop_num_011" class="ui-content"><b>Number:</b> Top-right corner radius.</div>
	<div data-role="popup" id="pop_num_012" class="ui-content"><b>Number:</b> Bottom-left corner radius.</div>
	<div data-role="popup" id="pop_num_013" class="ui-content"><b>Number:</b> Bottom-right corner radius.</div>
	<div data-role="popup" id="pop_num_015" class="ui-content"><b>Number:</b> Left padding of the checkbox item.</div>
	<div data-role="popup" id="pop_num_016" class="ui-content"><b>Number:</b> Top padding of the checkbox item.</div>
	<div data-role="popup" id="pop_num_017" class="ui-content"><b>Number:</b> Right padding of the checkbox item.</div>
	<div data-role="popup" id="pop_num_018" class="ui-content"><b>Number:</b> Bottom padding of the checkbox item.</div>
	<div data-role="popup" id="pop_num_019" class="ui-content"><b>Number:</b> Left margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_01a" class="ui-content"><b>Number:</b> Top margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_01b" class="ui-content"><b>Number:</b> Right margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_01c" class="ui-content"><b>Number:</b> Bottom margin. You can also pass string e.g. `12rem`</div>
	<div data-role="popup" id="pop_num_01d" class="ui-content"><b>Number:</b> Fraction of the component width.</div>
	<div data-role="popup" id="pop_num_01e" class="ui-content"><b>Number:</b> Fraction of the component height. [0-1]</div>
	<div data-role="popup" id="pop_num_01f" class="ui-content"><b>Number:</b> Fraction of the component width. [0-1]</div>
	<div data-role="popup" id="pop_num_021" class="ui-content"><b>Number:</b> Fraction of the parent width. [0-1]</div>
	<div data-role="popup" id="pop_num_022" class="ui-content"><b>Number:</b> Fraction of the parent height. [0-1]</div>
	<div data-role="popup" id="pop_num_023" class="ui-content"><b>Number:</b> The x-scale of the component.Values less than `0` is smaller than the normal. While values greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_num_024" class="ui-content"><b>Number:</b> The y-scale of the component. Values less than `1` is smaller than the normal. While vaues greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_num_027" class="ui-content"><b>Number:</b> The index of the item.</div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“A comma separated options.<br>Theme Color: `Default`”</docstr>, <docstr>“ `Primary`”</docstr>, <docstr>“ `Secondary`<br>Sizes: `Small`”</docstr>, <docstr>“ `Medium`<br>Icon Position: `Left`”</docstr>, <docstr>“ `Right`<br>Container: `Elevated`”</docstr>, <docstr>“ `Outlined`<br>Corners : `Square`”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“The text label for the checkbox.”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“The type of animation. Here are the available values<br>`bounce`”</docstr>, <docstr>“ `flash`”</docstr>, <docstr>“ `pulse`”</docstr>, <docstr>“ `rubberBand`”</docstr>, <docstr>“ `shakeX`”</docstr>, <docstr>“ `shakeY`”</docstr>, <docstr>“ `headShake`”</docstr>, <docstr>“ `swing`”</docstr>, <docstr>“ `tada`”</docstr>, <docstr>“ `wobble`”</docstr>, <docstr>“ `jello`”</docstr>, <docstr>“ `heartBeat`”</docstr>, <docstr>“<br>Back Entrances: `backInDown`”</docstr>, <docstr>“ `backInLeft`”</docstr>, <docstr>“ `backInRight`”</docstr>, <docstr>“ `backInUp`<br>Back Exits: `backOutDown`”</docstr>, <docstr>“ `backOutLeft`”</docstr>, <docstr>“ `backOutRight`”</docstr>, <docstr>“ `backOutUp`<br>Bouncing Entrances: `bounceIn`”</docstr>, <docstr>“ `bounceInDown`”</docstr>, <docstr>“ `bounceInLeft`”</docstr>, <docstr>“ `bounceInRight`”</docstr>, <docstr>“ `bounceInUp`<br>Bouncing exits: `bounceOut`”</docstr>, <docstr>“ `bounceOutDown`”</docstr>, <docstr>“ `bounceOutLeft`”</docstr>, <docstr>“ `bounceOutRight`”</docstr>, <docstr>“ `bounceOutUp`<br>Fading entrances: `fadeIn`”</docstr>, <docstr>“ `fadeInDown`”</docstr>, <docstr>“ `fadeInDownBig`”</docstr>, <docstr>“ `fadeInLeft`”</docstr>, <docstr>“ `fadeInLeftBig`”</docstr>, <docstr>“ `fadeInRight`”</docstr>, <docstr>“ `fadeInRightBig`”</docstr>, <docstr>“ `fadeInUp`”</docstr>, <docstr>“ `fadeInUpBig`”</docstr>, <docstr>“ `fadeInTopLeft`”</docstr>, <docstr>“ `fadeInTopRight`”</docstr>, <docstr>“ `fadeInBottomLeft`”</docstr>, <docstr>“ `fadeInBottomRight`<br>Fading exits: `fadeOut`”</docstr>, <docstr>“ `fadeOutDown`”</docstr>, <docstr>“ `fadeOutDownBig`”</docstr>, <docstr>“ `fadeOutLeft`”</docstr>, <docstr>“ `fadeOutLeftBig`”</docstr>, <docstr>“ `fadeOutRight`”</docstr>, <docstr>“ `fadeOutRightBig`”</docstr>, <docstr>“ `fadeOutUp`”</docstr>, <docstr>“ `fadeOutUpBig`”</docstr>, <docstr>“ `fadeOutTopLeft`”</docstr>, <docstr>“ `fadeOutTopRight`”</docstr>, <docstr>“ `fadeOutBottomRight`”</docstr>, <docstr>“ `fadeOutBottomLeft`<br>Flippers: `flip`”</docstr>, <docstr>“ `flipInX`”</docstr>, <docstr>“ `flipInY`”</docstr>, <docstr>“ `flipOutX`”</docstr>, <docstr>“ `flipOutY`<br>Lightspeed: `lightSpeedInRight`”</docstr>, <docstr>“ `lightSpeedInLeft`”</docstr>, <docstr>“ `lightSpeedOutRight`”</docstr>, <docstr>“ `lightSpeedOutLeft`<br>Rotating Entrances: `rotateIn`”</docstr>, <docstr>“ `rotateInDownLeft`”</docstr>, <docstr>“ `rotateInDownRight`”</docstr>, <docstr>“ `rotateInUpLeft`”</docstr>, <docstr>“ `rotateInUpRight`<br>Rotating Exits: `rotateOut`”</docstr>, <docstr>“ `rotateOutDownLeft`”</docstr>, <docstr>“ `rotateOutDownRight`”</docstr>, <docstr>“ `rotateOutUpLeft`”</docstr>, <docstr>“ `rotateOutUpRight`<br>Specials: `hinge`”</docstr>, <docstr>“ `jackInTheBox`”</docstr>, <docstr>“ `rollIn`”</docstr>, <docstr>“ `rollOut`<br>Zooming Entrances: `zoomIn`”</docstr>, <docstr>“ `zoomInDown`”</docstr>, <docstr>“ `zoomInLeft`”</docstr>, <docstr>“ `zoomInRight`”</docstr>, <docstr>“ `zoomInUp`<br>Zooming Exits: `zoomOut`”</docstr>, <docstr>“ `zoomOutDown`”</docstr>, <docstr>“ `zoomOutLeft`”</docstr>, <docstr>“ `zoomOutRight`”</docstr>, <docstr>“ `zoomOutUp`<br>Sliding Entrances: `slideInDown`”</docstr>, <docstr>“ `slideInLeft`”</docstr>, <docstr>“ `slideInRight`”</docstr>, <docstr>“ `slideInUp`<br>Sliding Exits: `slideOutDown`”</docstr>, <docstr>“ `slideOutLeft`”</docstr>, <docstr>“ `slideOutRight`”</docstr>, <docstr>“ `slideOutUp`”</docstr></div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>String:</b> <docstr>“The index of the corresponding item.”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“The checkbox item.”</docstr></div>
	<div data-role="popup" id="pop_str_006" class="ui-content"><b>String:</b> <docstr>“The mode of the measurements. Values can be `px` or `%`”</docstr></div>
	<div data-role="popup" id="pop_str_007" class="ui-content"><b>String:</b> <docstr>“The title text of the corresponding checkbox item.”</docstr></div>
	<div data-role="popup" id="pop_str_008" class="ui-content"><b>String:</b> <docstr>“Border color in hexadecimal format `#rrggbb`.”</docstr></div>
	<div data-role="popup" id="pop_str_009" class="ui-content"><b>String:</b> <docstr>“Border-styles. Values can be `dotted`”</docstr>, <docstr>“ `dashed`”</docstr>, <docstr>“ `solid`”</docstr>, <docstr>“ `double`”</docstr>, <docstr>“ `groove`”</docstr>, <docstr>“ `ridge`”</docstr>, <docstr>“ `inset` and `outset`. Default is `solid`”</docstr></div>
	<div data-role="popup" id="pop_str_00a" class="ui-content"><b>String:</b> <docstr>“The item or index of the item.”</docstr></div>
	<div data-role="popup" id="pop_str_00b" class="ui-content"><b>String:</b> <docstr>“Unit. Values are `px` `rem` or `%`.”</docstr></div>
	<div data-role="popup" id="pop_str_00c" class="ui-content"><b>String:</b> <docstr>“The name of the checkbox item.”</docstr></div>
	<div data-role="popup" id="pop_str_00d" class="ui-content"><b>String:</b> <docstr>“Material icon font”</docstr></div>
	<div data-role="popup" id="pop_str_00f" class="ui-content"><b>String:</b> <docstr>“Unit of measurement. Can be `rem`”</docstr>, <docstr>“ `px`”</docstr>, <docstr>“ `%`”</docstr>, <docstr>“ or `v` for viewport.”</docstr></div>
	<div data-role="popup" id="pop_str_010" class="ui-content"><b>String:</b> <docstr>“Unit of measurement.<br>`rem` for root em.<br>`px` for pixels<br>`%` relative to its parent dimension.<br>`v` relative to viewport dimension.”</docstr></div>
	<div data-role="popup" id="pop_str_011" class="ui-content"><b>String:</b> <docstr>“Unit of measurement.<br>`rem` for root em.<br>`px` for pixels<br>`%` relative to its parent dimensions<br>`v` relative to viewport dimensions.”</docstr></div>
	<div data-role="popup" id="pop_str_013" class="ui-content"><b>String:</b> <docstr>“Unit of measurment. Can be "px"”</docstr>, <docstr>“ "rem"”</docstr>, <docstr>“ "%"”</docstr>, <docstr>“ "v" for viewport width/height or any css supported unit.”</docstr></div>
	<div data-role="popup" id="pop_str_014" class="ui-content"><b>String:</b> <docstr>“The new text to replace.”</docstr></div>
	<div data-role="popup" id="pop_str_015" class="ui-content"><b>String:</b> <docstr>“The name of the item”</docstr></div>
	<div data-role="popup" id="pop_str_016" class="ui-content"><b>String:</b> <docstr>“The new text to replace”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> The parent layout where to add the CheckboxGroup.</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> The position of the touch event.</div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>List:</b> The items to be displayed.</div>
	<div data-role="popup" id="pop_lst_002" class="ui-content"><b>List:</b> The new list items for the checkbox group.</div>
	<div data-role="popup" id="pop_lst_003" class="ui-content"><b>List:</b> An array of indexes corresponding to the checked checkbox items.</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="switchPopup(this, '#pop_lst_003')" data-transition="pop" data-rel="popup">values </a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String: “The checkbox item label text.”')">label </a>,
		<a href="" onclick="app.ShowPopup('Number: The index of the corresponding item.')">index </a>,
		<a href="" onclick="switchPopup(this, '#pop_obj_002')" data-transition="pop" data-rel="popup">pos </a>
	)</div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('Boolean: The checked state of the checkbox item.')">value </a>,
		<a href="" onclick="app.ShowPopup('String: “The checkbox label text.”')">text </a>,
		<a href="" onclick="app.ShowPopup('Number: The index of the corresponding checkbox.')">index </a>,
		<a href="" onclick="switchPopup(this, '#pop_obj_002')" data-transition="pop" data-rel="popup">pos </a>
	)</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>ckb.absHeight</b><br>Returns the absolute height of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>ckb.absLeft</b><br>Returns the absolute distance of the control from the left in pixels.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>ckb.absTop</b><br>Returns the absolute distance of the control from the top in pixels.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>ckb.absWidth</b><br>Returns the absolute width of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>ckb.addItem</b><br>Add or insert an item in the checkbox group.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>ckb.animate</b><br>Animate the component.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>ckb.backColor</b><br>A hexadecimal color of the form <kbd>#rrggbb</kbd></div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>ckb.backImage</b><br>The path to your image file.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>ckb.border</b><br>Sets or returns the border thickness in pixels.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>ckb.borderColor</b><br>Sets or returns the border color. Color is in hexadecimal form <kbd>#rrggbb</kbd></div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>ckb.borderStyle</b><br>Sets or returns the border style. Values can be <kbd>dotted</kbd>, <kbd>dashed</kbd>, <kbd>solid</kbd>, <kbd>double</kbd>, <kbd>groove</kbd>, <kbd>ridge</kbd>, <kbd>inset</kbd> and <kbd>outset</kbd>. Default is <kbd>solid</kbd>.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>ckb.bringForward</b><br><a href="aname.htm" data-ajax="false">aname</a> bringForward<br>Bring this component forward by a given z-index.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>ckb.checkIcon</b><br>Sets or returns the material icon font for check stated.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>ckb.color</b><br>Sets or returns the theme color use for the checkbox. Values can be <kbd>Default</kbd> <kbd>Primary</kbd> or <kbd>Secondary</kbd>.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>ckb.cornerRadius</b><br>Sets or returns the corner radius in pixels.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>ckb.destroy</b><br>Destroy the component.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>ckb.disabled</b><br>Sets or returns the <kbd>disabled</kbd> state of the control.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>ckb.el</b><br>Returns the html container element for the control.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>ckb.elevation</b><br>Sets or returns the depth of the container.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>ckb.elStyle</b><br>Sets the style of the html container element.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>ckb.fontFile</b><br>Sets or returns the <kbd>relative</kbd> path to the font-family use.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>ckb.getCheckedByIndex</b><br>Get the current value of the item in the list.</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>ckb.getCheckedByName</b><br>Get the current value of the item in the list.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>ckb.getCheckedItems</b><br>Get the list of all checked items.</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>ckb.getEnabled</b><br>Get the enabled state of a checkbox item.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>ckb.getEnabledByName</b><br>Get the enabled state of a checkbox item by its name.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>ckb.getIcon</b><br>Get the checked and unchecked icon of the checkbox group.</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>ckb.getPosition</b><br>Returns the position of the component. The return object is of the form <kbd>{left, top, right, bottom}</kbd></div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>ckb.getText</b><br>Get the text of the item in a given index.</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>ckb.gone</b><br>Destroy the component.</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>ckb.height</b><br>Sets or returns the height of the control as a fraction of the parent control.</div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>ckb.hide</b><br>Hide the component.</div>
	<div data-role="popup" id="pop_dsc_021" class="ui-content"><b>ckb.iconColor</b><br>Sets or returns the color of the checkbox icon.</div>
	<div data-role="popup" id="pop_dsc_022" class="ui-content"><b>ckb.iconSize</b><br>Sets or returns the size of the checkbox icon.</div>
	<div data-role="popup" id="pop_dsc_023" class="ui-content"><b>ckb.isVisible</b><br>Returns whether the control is visible or not.</div>
	<div data-role="popup" id="pop_dsc_024" class="ui-content"><b>ckb.itemPadding</b><br>Sets or returns the padding of each list item. See also <kbd>setItemPadding</kbd> method.</div>
	<div data-role="popup" id="pop_dsc_025" class="ui-content"><b>ckb.label</b><br>Sets or returns the label text.</div>
	<div data-role="popup" id="pop_dsc_026" class="ui-content"><b>ckb.left</b><br>Returns the distance of the control from the left.</div>
	<div data-role="popup" id="pop_dsc_027" class="ui-content"><b>ckb.list</b><br>Sets or returns the list items.</div>
	<div data-role="popup" id="pop_dsc_028" class="ui-content"><b>ckb.margins</b><br>Sets or returns the margin of the control. Works on controls with <kbd>Linear</kbd> parent only. You can also pass a number to set equal margins for all sides.</div>
	<div data-role="popup" id="pop_dsc_029" class="ui-content"><b>ckb.opacity</b><br>Sets or returns the opacity of the control.</div>
	<div data-role="popup" id="pop_dsc_02a" class="ui-content"><b>ckb.options</b><br>Sets or returns the <kbd>options</kbd> of the control.</div>
	<div data-role="popup" id="pop_dsc_02b" class="ui-content"><b>ckb.orientation</b><br>Sets or returns the orientation of the list. Can be "Vertical" or "Horizontal".</div>
	<div data-role="popup" id="pop_dsc_02c" class="ui-content"><b>ckb.outlined</b><br>Sets or returns whether the container is outlined or elevated.</div>
	<div data-role="popup" id="pop_dsc_02d" class="ui-content"><b>ckb.padding</b><br>Sets or returns the padding of the control. You can also pass a number to set equal padding for all sides.</div>
	<div data-role="popup" id="pop_dsc_02e" class="ui-content"><b>ckb.parent</b><br>Returns the parent layout control.</div>
	<div data-role="popup" id="pop_dsc_02f" class="ui-content"><b>ckb.popItem</b><br>Removes the last item in the checkbox group. This will return the item being removed.</div>
	<div data-role="popup" id="pop_dsc_030" class="ui-content"><b>ckb.position</b><br>Returns the position of the control. The returned object has <kbd>left</kbd> <kbd>top</kbd> <kbd>right</kbd> and <kbd>bottom</kbd> props.</div>
	<div data-role="popup" id="pop_dsc_031" class="ui-content"><b>ckb.removeItemByIndex</b><br>Removes an item in the checkbox group by its corresponding index.</div>
	<div data-role="popup" id="pop_dsc_032" class="ui-content"><b>ckb.removeItemByName</b><br>Removes an item in the checkbox group by its title name.</div>
	<div data-role="popup" id="pop_dsc_033" class="ui-content"><b>ckb.rotation</b><br>Sets or returns the angle of rotation in degrees.</div>
	<div data-role="popup" id="pop_dsc_034" class="ui-content"><b>ckb.sendBackward</b><br>Bring this component backward by a given z-index.</div>
	<div data-role="popup" id="pop_dsc_035" class="ui-content"><b>ckb.setBorder</b><br>Sets the border line for the component container.</div>
	<div data-role="popup" id="pop_dsc_036" class="ui-content"><b>ckb.setCheckedByIndex</b><br>Checked or unchecked a given item by its index.</div>
	<div data-role="popup" id="pop_dsc_037" class="ui-content"><b>ckb.setCheckedByName</b><br>Checked or unchecked a given item by its name.</div>
	<div data-role="popup" id="pop_dsc_038" class="ui-content"><b>ckb.setCornerRadius</b><br>Sets the corner radius of the checkbox group.</div>
	<div data-role="popup" id="pop_dsc_039" class="ui-content"><b>ckb.setEnabled</b><br>Enable or disable an item in the checkbox group.</div>
	<div data-role="popup" id="pop_dsc_03a" class="ui-content"><b>ckb.setEnabledByName</b><br>Enable or disable a checkbox item by its name.</div>
	<div data-role="popup" id="pop_dsc_03b" class="ui-content"><b>ckb.setIcon</b><br>Sets the checked icon and unchecked icon</div>
	<div data-role="popup" id="pop_dsc_03c" class="ui-content"><b>ckb.setItemPadding</b><br>Sets the padding of the checkbox item. See <kbd>itemPadding</kbd> property for equivalent setter/getter property.</div>
	<div data-role="popup" id="pop_dsc_03d" class="ui-content"><b>ckb.setList</b><br>Sets a new list of item in the checkbox group.</div>
	<div data-role="popup" id="pop_dsc_03e" class="ui-content"><b>ckb.setMargins</b><br>Sets the margin of the component.</div>
	<div data-role="popup" id="pop_dsc_03f" class="ui-content"><b>ckb.setOnChange</b><br>Adds a callback function to be called whent there is a change of value.</div>
	<div data-role="popup" id="pop_dsc_040" class="ui-content"><b>ckb.setOnContextMenu</b><br>Adds a callback function on right click.</div>
	<div data-role="popup" id="pop_dsc_041" class="ui-content"><b>ckb.setOnTouch</b><br>Sets a callback function when the checkbox item is touch.</div>
	<div data-role="popup" id="pop_dsc_042" class="ui-content"><b>ckb.setPadding</b><br>Sets the padding of the component's container.</div>
	<div data-role="popup" id="pop_dsc_043" class="ui-content"><b>ckb.setPosition</b><br>Sets the position of the component relative to its parent dimensions.</div>
	<div data-role="popup" id="pop_dsc_044" class="ui-content"><b>ckb.setScale</b><br>Sets the x and y scaling of the component. This will ignore the positioning and flow of controls in the layout.</div>
	<div data-role="popup" id="pop_dsc_045" class="ui-content"><b>ckb.setSize</b><br>Sets the size of the component.</div>
	<div data-role="popup" id="pop_dsc_046" class="ui-content"><b>ckb.setTextByIndex</b><br>Sets a new text to a given item by its index.</div>
	<div data-role="popup" id="pop_dsc_047" class="ui-content"><b>ckb.setTextByName</b><br>Sets a new text to a given item by its name.</div>
	<div data-role="popup" id="pop_dsc_048" class="ui-content"><b>ckb.shiftItem</b><br>Removes the first item in the checkbox group. This will return the item being removed.</div>
	<div data-role="popup" id="pop_dsc_049" class="ui-content"><b>ckb.show</b><br>Show the component.</div>
	<div data-role="popup" id="pop_dsc_04a" class="ui-content"><b>ckb.sizeVariant</b><br>Sets or returns the size variant of the Checkbox. Values can be <kbd>small</kbd> or <kbd>medium</kbd>.</div>
	<div data-role="popup" id="pop_dsc_04b" class="ui-content"><b>ckb.spaceBetween</b><br>Sets or returns the space between the checkbox icon and the text.</div>
	<div data-role="popup" id="pop_dsc_04c" class="ui-content"><b>ckb.textColor</b><br>Sets or returns the color of the text.</div>
	<div data-role="popup" id="pop_dsc_04d" class="ui-content"><b>ckb.textSize</b><br>Sets or returns the size of the text within the control.</div>
	<div data-role="popup" id="pop_dsc_04e" class="ui-content"><b>ckb.top</b><br>Returns the distance of the control from the top.</div>
	<div data-role="popup" id="pop_dsc_04f" class="ui-content"><b>ckb.type</b><br>Returns the type of the control.</div>
	<div data-role="popup" id="pop_dsc_050" class="ui-content"><b>ckb.uncheckIcon</b><br>Sets or returns the material icon font for uncheck state.</div>
	<div data-role="popup" id="pop_dsc_051" class="ui-content"><b>ckb.visibility</b><br>Sets or returns the visibility of the control.</div>
	<div data-role="popup" id="pop_dsc_052" class="ui-content"><b>ckb.width</b><br>Sets or returns the width of the control as a fraction of the parent control.</div>
</div>
</body>

</html>
