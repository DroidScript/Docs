
<!DOCTYPE html>
<html>

<head>
	<title>Coding Features</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>Coding Features</h1>
		<div class="ui-btn-right" style="font-size:50%">
			<a class="code-js" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">JS</a>
			<a class="code-py" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">Py</a>
			<a data-icon="gear" data-role="button" data-inline="true" data-mini="true" data-iconpos="notext" onclick="tglTheme()"></a>
		</div>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:1em;">
			• <a href="" onclick="jumpTo('The cfg object')">The cfg object</a><br>
			• <a href="" onclick="jumpTo('app.eventSource')">app.eventSource</a><br>
			• <a href="" onclick="jumpTo('Function Shortcuts')">Function Shortcuts</a><br>
			• <a href="" onclick="jumpTo('Permissions')">Permissions</a><br>
			• <a href="" onclick="jumpTo('Translations: T()')">Translations: T()</a><br>
			• <a href="" onclick="jumpTo('Unique Callbacks: I()')">Unique Callbacks: I()</a><br>
			<span style="display:inline-block;padding-left:1em;">
				- <a href="" onclick="jumpTo('Custom Contexts: M()')">Custom Contexts: M()</a><br>
				- <a href="" onclick="jumpTo('obj.data')">obj.data</a><br>
			</span><br>
		</span><br>
		</div>

		<p>DroidScript provides some methods and flags in the sourcecode which are not available in regular JavaScript code but are interpreted internally by DroidScript.<br>
		You don't necessarily need to use these features but they are still pretty useful in some cases.</p>
		<h2>The cfg object</h2>
		<p>The cfg object can be used to apply app options to your app before it is launched.<br>
		They should be placed at the very top of your main source script.</p>
		<h4>cfg.Portrait/Landscape</h4>
		<p>Defines the initial screen orientation your app will launch in</p>
		<h4>cfg.Holo cfg.Light cfg.Dark</h4>
		<p>These settings will change the look of all your controls. Holo was the default theme until DS 1.90 beta, where cfg.Light and cfg.Dark were added and cfg.Dark became the dark theme.<br>
		Note that only Light and Dark theme can be exchanged securely, Holo might cause broken UI in some cases when switching to Light or Dark.</p>
		<h4>cfg.Node</h4>
		<p>Runs the app in NodeJS mode.</p>
		<h4>cfg.MUI</h4>
		<p>Enables builtin material component support through the MUI object.<br>
		<div class='premHint'><strong>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</strong></div></p>
		<h4>cfg.Game</h4>
		<p>The <kbd>Game</kbd> configuration will let your app immediately run in <a href="../app/CreateGameView.htm" data-ajax="false">GameView</a> mode. This way you can write your game code directly in the main script without bothering about creating the GameView container.</p>
		<h4>cfg.Transparent</h4>
		<p>This will let your app run transparently on the HomeScreen and it will stay on top of everything even if the user launches an other app.<br>
		<div class='premHint'><strong>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</strong></div></p>
		<h4>cfg.Serv</h4>
		<p>The <kbd>Serv</kbd> flag will serve any HTML or Hybrid app over a builtin HTTP server on port <kbd>3033</kbd>.</p>
		<h4>cfg.Console</h4>
		<p>This will show the console as main page instead of the GUI. Drawers will still work with this config.<br>
		<br>
		<!--</p>
		<h4>cfg.NoSwapify</h4>
		<p>This option prevents function name swapping during obfuscation</p>
		<h4>cfg.Legacy</h4>
		<p>Enables various legacy transparent app behaviour<br>
		--></p>
		<h4>cfg.Fast</h4>
		<p>The Fast config will make use of <a href="https://github.com/eclipsesource/j2v8" onclick="return OpenUrl(this.href);">the J2V8 engine</a> which increases the apps execution speed roughly by a factor of 3. Specifically it will increase the speed of app.* calls, which is quite useful for tween animations or when creating and modifying a huge amount of app controls.<br>
		<br>
		The drawback of this method is that all default WebView DOM objects are not available any more.<br>
		This includes methods like setInterval and setTimeout which should be converted to <b>app.<a href="../app/Animate.htm" data-ajax="false">Animate</a></b> respectively.<br>
		<br>
		<strong>Note:</strong> The same effect can be observed when running in a Node.js environment (using the <kbd>cfg.Node</kbd> flag)</p>
		<h2>app.eventSource</h2>
		<p>In callback functions of controls you can use app<span class="token punctuation">.</span>eventSource to access the callee control object without having to assign the control to a specific variable. Previously this could be achieved by using the <span class="token keyword">this</span> keyword. This allows you to create multiple controls with the same behaviour without having to redefine callback functions for different controls:</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Use Case of this</h3>
			<div id="examp1" class="code-js" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"FillXY,VCenter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">SetChildMargins</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.03</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">var</span> btn <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">AddButton</span><span class="token punctuation">(</span>lay<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				        btn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span>btnN_OnTouch<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">btnN_OnTouch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token comment">// app.eventSource == this</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span><span class="token string">"Hello "</span> <span class="token operator">+</span> app<span class="token punctuation">.</span>eventSource<span class="token punctuation">.</span><span class="token function">GetText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp1" class="code-py" style="font-size:70%">
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateLayout<span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"FillXY,VCenter"</span><span class="token punctuation">)</span><br>
				    lay<span class="token punctuation">.</span>SetChildMargins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.03</span><span class="token punctuation">)</span><br>
				    <br>
				    <span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">+</span><span class="token operator">+</span><span class="token punctuation">:</span><br>
				        btn <span class="token operator">=</span> app<span class="token punctuation">.</span>AddButton<span class="token punctuation">(</span>lay<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				        btn<span class="token punctuation">.</span>SetOnTouch<span class="token punctuation">(</span>btnN_OnTouch<span class="token punctuation">)</span><br>
				    app<span class="token punctuation">.</span>AddLayout<span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">btnN_OnTouch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token comment">#  app.eventSource == this</span><br>
				    app<span class="token punctuation">.</span>ShowPopup<span class="token punctuation">(</span><span class="token string">"Hello "</span> <span class="token operator">+</span> app<span class="token punctuation">.</span>eventSource<span class="token punctuation">.</span>GetText<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp1' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp1' )">      Run      </a>
			</div>
		</div>

		<h2>Function Shortcuts</h2>
		<p>There are shortcuts to certain functions, which are<br>
		<span class="token constant">DW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> => app<span class="token punctuation">.</span><span class="token function">GetDisplayWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
		<span class="token constant">DH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> => app<span class="token punctuation">.</span><span class="token function">GetDisplayHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
		<span class="token constant">TW</span><span class="token punctuation">(</span>
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">txt</a><span class="token punctuation">,</span> size<span class="token punctuation">)</span> => app<span class="token punctuation">.</span><span class="token function">GetTextBounds</span><span class="token punctuation">(</span>
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">txt</a><span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width<br>
		_<span class="token function"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">PlaySound</span></a><span class="token punctuation">(</span>
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a><span class="token punctuation">)</span><br>
		_<span class="token function"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup">GetRandomColor</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a><br>
		<a href="#pop_dsc_003" data-transition="pop" data-rel="popup"><span class="token constant">RGB</span><span class="token function"></span></a><span class="token punctuation">(</span>
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">r</a><span class="token punctuation">,</span>
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">g</a><span class="token punctuation">,</span>
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">b</a><span class="token punctuation">)</span>:
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a><br>
		<span class="token function"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">atob2</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span>:
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">base64</a> .</p>
		<h2>Permissions</h2>
		<p>These methods can force DroidScript to add or remove specific permissions from your app.<br>
		See also: <a href="../app/GetPermission.htm" data-ajax="false">GetPermission</a>, <a href="../app/CheckPermission.htm" data-ajax="false">CheckPermission</a></p>
		<h2>Translations: T()</h2>
		<p>Converts a keyword into the translated text using a <a href="FileStructure.htm#lang.json" data-ajax="false">lang.json</a> file.</p>
		<h2>Unique Callbacks: I()</h2>
		<p>DroidScript checks if a callback function already exists and uses it instead of creating a new instance.<br>
		This can cause issues when referring to other local variables in private scopes.<br>
		Therefore you can wrap your callback functions in an I() clause to force DroidScript to create a new callback instance for that scope.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Using I()</h3>
			<div id="examp2" class="code-js" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token function">NewButton</span><span class="token punctuation">(</span><span class="token string">"Button 1"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token function">NewButton</span><span class="token punctuation">(</span><span class="token string">"Button 2"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token function">NewButton2</span><span class="token punctuation">(</span><span class="token string">"Button 1"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token function">NewButton2</span><span class="token punctuation">(</span><span class="token string">"Button 2"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">NewButton</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> lay</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token keyword">var</span> btn <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">AddButton</span><span class="token punctuation">(</span> lay<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span> <span class="token string">"red"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    btn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">NewButton2</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> lay</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token keyword">var</span> btn <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">AddButton</span><span class="token punctuation">(</span> name<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span> <span class="token string">"green"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip2" class="code-js" style="font-size:100%">btn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> <span class="token constant">I</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp2" class="code-py" style="font-size:70%">
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateLayout<span class="token punctuation">(</span> <span class="token string">"linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><br>
				    <br>
				    NewButton<span class="token punctuation">(</span><span class="token string">"Button 1"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><br>
				    NewButton<span class="token punctuation">(</span><span class="token string">"Button 2"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><br>
				    <br>
				    NewButton2<span class="token punctuation">(</span><span class="token string">"Button 1"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><br>
				    NewButton2<span class="token punctuation">(</span><span class="token string">"Button 2"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span>AddLayout<span class="token punctuation">(</span> lay <span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">NewButton</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span>AddButton<span class="token punctuation">(</span> lay<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetMargins<span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span> <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetTextColor<span class="token punctuation">(</span> <span class="token string">"red"</span> <span class="token punctuation">)</span><br>
				    <br>
				    btn<span class="token punctuation">.</span>SetOnTouch<span class="token punctuation">(</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				        app<span class="token punctuation">.</span>ShowPopup<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">NewButton2</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span>AddButton<span class="token punctuation">(</span> name<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetTextColor<span class="token punctuation">(</span> <span class="token string">"green"</span> <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetMargins<span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span> <span class="token punctuation">)</span><br>
				    <br>
				    <b id="snip2" class="code-py" style="font-size:100%">btn<span class="token punctuation">.</span>SetOnTouch<span class="token punctuation">(</span> I<span class="token punctuation">(</span>function<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				        app<span class="token punctuation">.</span>ShowPopup<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></b>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'snip2' )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp2' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp2' )">      Run      </a>
			</div>
		</div>

		<h3>Custom Contexts: M()</h3>
		<p>The M() macro is equivalent to the I() macro, except that it accepts a custom '<span class="token keyword">this</span>' context as first argument.</p>
		<h3>obj.data</h3>
		<p>Alternatively you can make use of the controls <strong>data</strong> property and the <strong>this</strong> keyword in callbacks.<br>
		This way you can assign variables to the object they belong to and you still make use of the callback optimization by DroidScript:</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Using this.data</h3>
			<div id="examp3" class="code-js" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token function">NewButton2</span><span class="token punctuation">(</span><span class="token string">"Button 1"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token function">NewButton2</span><span class="token punctuation">(</span><span class="token string">"Button 2"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">NewButton2</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> lay</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">AddButton</span><span class="token punctuation">(</span> lay<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span> <span class="token string">"green"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip3" class="code-js" style="font-size:100%">btn<span class="token punctuation">.</span>data<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><br>
				    <br>
				    btn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp3" class="code-py" style="font-size:70%">
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateLayout<span class="token punctuation">(</span> <span class="token string">"linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><br>
				    <br>
				    NewButton2<span class="token punctuation">(</span><span class="token string">"Button 1"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><br>
				    NewButton2<span class="token punctuation">(</span><span class="token string">"Button 2"</span><span class="token punctuation">,</span> lay<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span>AddLayout<span class="token punctuation">(</span> lay <span class="token punctuation">)</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">NewButton2</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> lay<span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span>AddButton<span class="token punctuation">(</span> lay<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetTextColor<span class="token punctuation">(</span> <span class="token string">"green"</span> <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetMargins<span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span> <span class="token punctuation">)</span><br>
				    <br>
				    <b id="snip3" class="code-py" style="font-size:100%">btn<span class="token punctuation">.</span>data<span class="token punctuation">.</span>name <span class="token operator">=</span> name<br>
				    <br>
				    btn<span class="token punctuation">.</span>SetOnTouch<span class="token punctuation">(</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				        app<span class="token punctuation">.</span>ShowPopup<span class="token punctuation">(</span>this<span class="token punctuation">.</span>data<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span></b>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'snip3' )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp3' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp3' )">      Run      </a>
			</div>
		</div>


	</div>

	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>Number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_str_col" class="ui-content"><b>String:</b> <i><br>  hexadecimal: <docstr>“#rrggbb”</docstr>, <docstr>“#aarrggbb”</docstr><br>  colourName: <docstr>“red”</docstr>, <docstr>“green”</docstr>, ...</i></div>
	<div data-role="popup" id="pop_str_pth" class="ui-content"><b>String:</b> <i>path to file or folder ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content">Uses a dummy player to play a file</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content">Returns a random hexadecimal color string</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content">Make a color using fraction values</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content">atob equivalent</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content">str_b64</div>
</div>
</body>

</html>
