
<!DOCTYPE html>
<html>

<head>
	<title>Writing DS Plugins</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>Writing DS Plugins</h1>
		<div class="ui-btn-right" style="font-size:50%">
			<a class="code-js" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">JS</a>
			<a class="code-py" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">Py</a>
			<a data-icon="gear" data-role="button" data-inline="true" data-mini="true" data-iconpos="notext" onclick="tglTheme()"></a>
		</div>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:1em;">
			• <a href="" onclick="jumpTo('JavaScript Plugins')">JavaScript Plugins</a><br>
			• <a href="" onclick="jumpTo('Java Plugins')">Java Plugins</a><br>
			<span style="display:inline-block;padding-left:1em;">
				- <a href="" onclick="jumpTo('Structure')">Structure</a><br>
				- <a href="" onclick="jumpTo('Compile and Install')">Compile and Install</a><br>
				- <a href="" onclick="jumpTo('Communicate with your Java code')">Communicate with your Java code</a><br>
			</span><br>
		</span><br>
		</div>

		<p>DroidScript can't do everything imaginable. But you can help it to come closer to that by writing plugins.<br>
		<br>
		There are basically two types of plugins: <strong>JavaScript</strong> plugins which will behave like an extra included JS source script and<br>
		<strong>Java</strong> plugins, which have a second compiled part written in java.</p>
		<h2>JavaScript Plugins</h2>
		<p>A basic JS plugin consists of 2 parts:<br>
		<span style="display:inline-block;padding-left:1em;">
			- a <i>MyPlugin.inc</i> file containing the main JS source code<br>
			- a <i>MyPlugin.html</i> file containing the main page of your plugin documentation.<br>
		</span><br>
		However you can add as many resources to it as you want.<br>
		<br>
		There is a generator available which can create, debug and install plugins on the fly. you can even debug your plugin directly from that app.<br>
		<a href="https://ds.justplayer.de/uploads/11" onclick="return OpenUrl(this.href);">Download it from the dspk store</a></p>
		<h2>Java Plugins</h2>
		<p>Writing java plugins is a bit tricky but once you get used to it you can get almost everything working.</p>
		<h3>Structure</h3>
		<p>There are two types of Java plugin packages:<br>
		1. The standard zip file:<br>
		<span style="display:inline-block;padding-left:1em;">
			- contains a <i>MyPlugin.inc</i> and a <i>MyPlugin.html</i> file as JS plugins<br>
			- a <i>MyPlugin.jar</i> file which contains the compiled <i>classes.dex</i> file.<br>
		</span><br>
		2. An APK file:<br>
		<span style="display:inline-block;padding-left:1em;">
			- an <i>assets/</i> folder containing the MyPlugin.inc and the MyPlugin.html file<br>
			- a compiled <i>classes.dex</i> file<br>
		</span><br>
		<br>
		APK files are typically exported by AndroidStudio, AIDE and others.<br>
		That leads us to the ways how you can write and more importantly compile java plugins.</p>
		<h3>Compile and Install</h3>
		<p>1. The android app 'AIDE'<br>
		<span style="display:inline-block;padding-left:1em;">
			- <a href="https://play.google.com/store/apps/details?id=com.aide.ui" onclick="return OpenUrl(this.href);">Download AIDE from PlayStore</a><br>
			- Create a new AIDE project using the DroidScript SDK in the DS menu<br>
			- Modify, Build, Install and Run the plugin app. A <a href="" onclick="app.ShowPopup('Plugin installed. Please restart DroidScript.')">popup</a> will appear once the plugin is ready to be installed on the next DroidScript restart<br>
		</span><br>
		<br>
		2. AndroidStudio<br>
		<span style="display:inline-block;padding-left:1em;">
			- There is a <a href="https://github.com/DroidScript/Plugin-Java" onclick="return OpenUrl(this.href);">UserPlugin template</a> available on <a href="https://github.com/DroidScript" onclick="return OpenUrl(this.href);">DroidScript's GitHub page</a><br>
			- Follow the instructions in <a href="https://symbroson.blogspot.com/2018/02/ds-java-plugins-android-studio.html" onclick="return OpenUrl(this.href);">this BlogSpot guide</a><br>
		</span><br>
		<br>
		It may be possible with other IDE's as well (ie. IntelliJ even has a AndroidSDK Plugin), but this has not been tested before or just couldn't be made to work.</p>
		<h3>Communicate with your Java code</h3>
		<p>In order to use the defined Java functions you have to call them from the JS part somehow.<br>
		For this purpose DroidScript provides a <b>_CreatePlugin</b> component:</p>

		<div class="samp">
		<span class="token keyword">var</span> plg <span class="token operator">=</span> <span class="token function">_CreatePlugin</span><span class="token punctuation">(</span>
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">classpath</a><span class="token punctuation">,</span>
			<a href="#pop_str_com" data-transition="pop" data-rel="popup">options</a> <span class="token punctuation">)</span>
		</div>


		<div class="samp">
		<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">plg<span class="token punctuation">.</span><span class="token function">Destroy</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span>
		</div>


		<div class="samp">
		<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">plg<span class="token punctuation">.</span><span class="token function">GetType</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span> → <strong>string<span class="token operator">:</span></strong> <i><docstr>“Plugin”</docstr></i>
		</div>


		<div class="samp">
		<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">plg<span class="token punctuation">.</span><span class="token function">Send</span></a><span class="token punctuation">(</span>
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p1</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p2</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p3</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p4</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p5</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p6</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p7</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p8</a> <span class="token punctuation">)</span> → <strong>string</strong>
		</div>


		<div class="samp">
		<a href="#pop_dsc_004" data-transition="pop" data-rel="popup">plg<span class="token punctuation">.</span><span class="token function">SendObj</span></a><span class="token punctuation">(</span>
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a><span class="token punctuation">,</span>
			<a href="#pop_std_dso" data-transition="pop" data-rel="popup">obj</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p1</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p2</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p3</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p4</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p5</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p6</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p7</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p8</a> <span class="token punctuation">)</span> → <strong>string</strong>
		</div>


		<div class="samp">
		<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">plg<span class="token punctuation">.</span><span class="token function">CreateObj</span></a><span class="token punctuation">(</span>
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">type</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p1</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p2</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p3</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p4</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p5</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p6</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p7</a><span class="token punctuation">,</span>
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">p8</a> <span class="token punctuation">)</span> → <strong>string<span class="token operator">:</span></strong> <i><docstr>“#id”</docstr></i>
		</div>


		<div class="samp">
		<a href="#pop_dsc_006" data-transition="pop" data-rel="popup">plg<span class="token punctuation">.</span><span class="token function">SendImg</span></a><span class="token punctuation">(</span>
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a><span class="token punctuation">,</span>
			<a href="#pop_dso_001" data-transition="pop" data-rel="popup">img</a><span class="token punctuation">,</span>
			<a href="#pop_num_pxl" data-transition="pop" data-rel="popup">width</a><span class="token punctuation">,</span>
			<a href="#pop_num_pxl" data-transition="pop" data-rel="popup">height</a> <span class="token punctuation">)</span> → <strong>string</strong>
		</div>


		<div class="samp">
		<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">plg<span class="token punctuation">.</span><span class="token function">SendCam</span></a><span class="token punctuation">(</span>
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a><span class="token punctuation">,</span>
			<a href="#pop_dso_002" data-transition="pop" data-rel="popup">cam</a> <span class="token punctuation">)</span> → <strong>string</strong>
		</div>

		<p>On the Java side following functions in <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyPlugin</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> will get called by DroidScript:</p>

		<div class="samp">
		<span class="token keyword">public</span>
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup"><span class="token class-name">MyPlugin</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span>
		</div>


		<div class="samp">
		<span class="token keyword">public</span> <span class="token keyword">void</span>
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup"><span class="token class-name">Init</span></a><span class="token punctuation">(</span> <span class="token class-name">Context</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Object</span> parent <span class="token punctuation">)</span>
		</div>


		<div class="samp">
		<span class="token keyword">public</span> <span class="token keyword">void</span>
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup"><span class="token class-name">Release</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span>
		</div>


		<div class="samp">
		<span class="token keyword">public</span> <span class="token class-name">String</span>
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup"><span class="token class-name">CallPlugin</span></a><span class="token punctuation">(</span> <span class="token class-name">Bundle</span>
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">b</a> <span class="token punctuation">)</span>
		</div>


		<div class="samp">
		<span class="token keyword">public</span> <span class="token class-name">String</span>
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup"><span class="token class-name">CallPlugin</span></a><span class="token punctuation">(</span> <span class="token class-name">Bundle</span>
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">b</a><span class="token punctuation">,</span> <span class="token class-name">Object</span> obj <span class="token punctuation">)</span>
		</div>


		<div class="samp">
		<span class="token keyword">public</span> <span class="token class-name">Object</span>
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup"><span class="token class-name">CreateObject</span></a><span class="token punctuation">(</span> <span class="token class-name">Bundle</span>
			<a href="#pop_obj_003" data-transition="pop" data-rel="popup">b</a> <span class="token punctuation">)</span>
		</div>

		<p><!--java noinl>public void CallScript(Bundle b, String webViewId)</java--></p>

	</div>

	<div data-role="popup" id="pop_std_dso" class="ui-content"><b>app object</b></div>
	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
	<div data-role="popup" id="pop_num_pxl" class="ui-content"><b>Number:</b> <i>pixel</i></div>
	<div data-role="popup" id="pop_str_com" class="ui-content"><b>String:</b> <i>comma <docstr>“,”</docstr> separated</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“com.mycompany.plugins.user”</docstr></div>
	<div data-role="popup" id="pop_mul_001" class="ui-content"><b>String</b><br><b>Number</b><br><b>Boolean</b></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('String')">cmd</a>, <a href="" onclick="app.ShowPopup('byte[\]')">img</a>, <a href="" onclick="app.ShowPopup('any')">p1</a>, <a href="" onclick="app.ShowPopup('any')">p2</a>, <a href="" onclick="app.ShowPopup('any')">p3</a>, <a href="" onclick="app.ShowPopup('any')">p4</a>, <a href="" onclick="app.ShowPopup('any')">p5</a>, <a href="" onclick="app.ShowPopup('any')">p6</a>, <a href="" onclick="app.ShowPopup('any')">p7</a>, <a href="" onclick="app.ShowPopup('any')">p8</a> }</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('String')">cmd</a>, <a href="" onclick="app.ShowPopup('any')">p1</a>, <a href="" onclick="app.ShowPopup('any')">p2</a>, <a href="" onclick="app.ShowPopup('any')">p3</a>, <a href="" onclick="app.ShowPopup('any')">p4</a>, <a href="" onclick="app.ShowPopup('any')">p5</a>, <a href="" onclick="app.ShowPopup('any')">p6</a>, <a href="" onclick="app.ShowPopup('any')">p7</a>, <a href="" onclick="app.ShowPopup('any')">p8</a> }</div>
	<div data-role="popup" id="pop_obj_003" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('String')">type</a>, <a href="" onclick="app.ShowPopup('any')">p1</a>, <a href="" onclick="app.ShowPopup('any')">p2</a>, <a href="" onclick="app.ShowPopup('any')">p3</a>, <a href="" onclick="app.ShowPopup('any')">p4</a>, <a href="" onclick="app.ShowPopup('any')">p5</a>, <a href="" onclick="app.ShowPopup('any')">p6</a>, <a href="" onclick="app.ShowPopup('any')">p7</a>, <a href="" onclick="app.ShowPopup('any')">p8</a> }</div>
	<div data-role="popup" id="pop_dso_001" class="ui-content"><b>app object:</b> <a href="../app/CreateImage.htm" data-ajax="false">Image</a></div>
	<div data-role="popup" id="pop_dso_002" class="ui-content"><b>app object:</b> <a href="../app/CreateCameraView.htm" data-ajax="false">CameraView</a></div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content">Calls Release()</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content">Returns the component class name</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content">Calls <span class="token class-name">CallPlugin</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span><span class="token punctuation">)</span><java></div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><span class="token class-name">Calls</span> <java nobox><span class="token class-name">CallPlugin</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">)</span></div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content">Calls <span class="token class-name">CreateObject</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span><span class="token punctuation">)</span> with a String on <docstr>“type”</docstr></div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content">Calls <span class="token class-name">CallPlugin</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span><span class="token punctuation">)</span> with a <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> on <docstr>“img”</docstr></div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content">Calls <span class="token class-name">CallPlugin</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span><span class="token punctuation">)</span> with a <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> on <docstr>“cam”</docstr></div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content">Called when a new plugin instance was created</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content">Called by DroidScript passing the app context/activity and the parent object</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content">Called when java gets rid of your plugin</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content">Called by plg.Send and plg.SendImg</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content">Called by plg.SendObj</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content">Called by plg.CreateObj</div>
</div>
</body>

</html>
