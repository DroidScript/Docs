
<!DOCTYPE html>
<html>

<head>
	<title>SendMessage</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>SendMessage</h1>
		<div class="ui-btn-right" style="font-size:50%">
			<a class="code-js" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">JS</a>
			<a class="code-py" data-role="button" data-inline="true" data-mini="true" onclick="tglMode()">Py</a>
			<a data-icon="gear" data-role="button" data-inline="true" data-mini="true" data-iconpos="notext" onclick="tglTheme()"></a>
		</div>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">
		<p>Send a message from a Service to the main app.</p>

		<div class="samp">
		app.SendMessage(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">message</a> )
		</div>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Services</h3>
			<div id="examp1" class="code-js" style="font-size:70%">
				<span class="token comment">//our Service.js code.</span><br>
				<span class="token comment">//In regular usage move this code to a separate Service.js file</span><br>
				<span class="token keyword">var</span> servicejs <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"><br>
				//Init variables.<br>
				var count = 0;<br>
				var diff = 1;<br>
				<br>
				//Called when service is started.<br>
				function OnStart()<br>
				{<br>
				    app.ShowPopup( "Hello from Service!" );<br>
				    <br>
				    //Start a timer to do some regular work.<br>
				    setInterval( DoWork, 500 );<br>
				}<br>
				<br>
				//Called when we get a message from main app.<br>
				function OnMessage( msg )<br>
				{<br>
				    app.Debug( msg );<br>
				    <br>
				    //Handle commands from main App.<br>
				    if( msg == "change" ) diff = (diff > 0 ? -1 : 1);<br>
				}<br>
				<br>
				//This is where we do some regular background task<br>
				//(here we just modify a counter and send it back to the app, if its running).<br>
				function DoWork()<br>
				{<br>
				    count += diff;<br>
				    <b id="snip1" class="code-js" style="font-size:100%">app.SendMessage( count );</b><br>
				}</span><span class="token template-punctuation string">`</span></span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token comment">//Create the Service.js file</span><br>
				    <span class="token comment">//(In regular usage create the file yourself)</span><br>
				    app<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span><span class="token string">"Service.js"</span><span class="token punctuation">,</span> servicejs <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">//Create a layout.</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">//Create text control to display data from the service.</span><br>
				    txt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateText</span><span class="token punctuation">(</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.4</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">SetTextSize</span><span class="token punctuation">(</span> <span class="token number">22</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> txt <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">//Create an 'Send Message' button.</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateButton</span><span class="token punctuation">(</span> <span class="token string">"Send Message to Service"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> btn <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> svc<span class="token punctuation">.</span><span class="token function">SendMessage</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">//Create a 'Stop Service' button.</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateButton</span><span class="token punctuation">(</span> <span class="token string">"Stop Service"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> btn <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> svc<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">//Add layout to app.</span><br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">//Start/connect to our service.</span><br>
				    svc <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateService</span><span class="token punctuation">(</span> <span class="token string">"this"</span><span class="token punctuation">,</span> <span class="token string">"this"</span><span class="token punctuation">,</span> OnServiceReady <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    svc<span class="token punctuation">.</span><span class="token function">SetOnMessage</span><span class="token punctuation">(</span> OnServiceMessage <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">//This will cause your service to start at boot.</span><br>
				    <span class="token comment">//(Set it to "none" if you need to stop it starting)</span><br>
				    <span class="token comment">//app.SetAutoBoot( "Service" );</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token comment">//Called after our service has started.</span><br>
				<span class="token keyword">function</span> <span class="token function">OnServiceReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span> <span class="token string">"Service Ready"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token comment">//Called when messages comes from our service.</span><br>
				<span class="token keyword">function</span> <span class="token function">OnServiceMessage</span><span class="token punctuation">(</span> <span class="token parameter">msg</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">SetText</span><span class="token punctuation">(</span> <span class="token string">"Count: "</span> <span class="token operator">+</span> msg <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div id="examp1" class="code-py" style="font-size:70%">
				<span class="token keyword">from</span> native <span class="token keyword">import</span> app<br>
				<br>
				servicejs <span class="token operator">=</span> <span class="token triple-quoted-string string">"""<br>
				#Init variables.<br>
				count = 0<br>
				diff = 1<br>
				<br>
				#Called when service is started.<br>
				def OnStart():<br>
				    app.ShowPopup( "Hello from Service!" )<br>
				    <br>
				    #Start a timer to do some regular work.<br>
				    setInterval( DoWork, 500 )<br>
				<br>
				#Called when we get a message from main app.<br>
				def OnMessage( msg ):<br>
				    global diff<br>
				    app.Debug( msg )<br>
				    <br>
				    #Handle commands from main App.<br>
				    if msg == "change":<br>
				        diff = -1 if diff > 0 else 1<br>
				<br>
				#This is where we do some regular background task<br>
				#(here we just modify a counter and send it back to the app, if its running).<br>
				def DoWork():<br>
				    count += diff<br>
				    app.SendMessage( count )<br>
				"""</span><br>
				<br>
				<span class="token keyword">def</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    <span class="token keyword">global</span> txt<br>
				    <span class="token comment">#Create the Service.js file</span><br>
				    <span class="token comment">#(In regular usage create the file yourself)</span><br>
				    app<span class="token punctuation">.</span>WriteFile<span class="token punctuation">(</span><span class="token string">"Service.js"</span><span class="token punctuation">,</span> servicejs <span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment">#Create a layout.</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateLayout<span class="token punctuation">(</span> <span class="token string">"linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment">#Create text control to display data from the service.</span><br>
				    txt <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateText<span class="token punctuation">(</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.4</span> <span class="token punctuation">)</span><br>
				    txt<span class="token punctuation">.</span>SetTextSize<span class="token punctuation">(</span> <span class="token number">22</span> <span class="token punctuation">)</span><br>
				    lay<span class="token punctuation">.</span>AddChild<span class="token punctuation">(</span> txt <span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment">#Create an 'Send Message' button.</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateButton<span class="token punctuation">(</span> <span class="token string">"Send Message to Service"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><br>
				    lay<span class="token punctuation">.</span>AddChild<span class="token punctuation">(</span> btn <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetOnTouch<span class="token punctuation">(</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> svc<span class="token punctuation">.</span>SendMessage<span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment">#Create a 'Stop Service' button.</span><br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateButton<span class="token punctuation">(</span> <span class="token string">"Stop Service"</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><br>
				    lay<span class="token punctuation">.</span>AddChild<span class="token punctuation">(</span> btn <span class="token punctuation">)</span><br>
				    btn<span class="token punctuation">.</span>SetOnTouch<span class="token punctuation">(</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> svc<span class="token punctuation">.</span>Stop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment">#Add layout to app.</span><br>
				    app<span class="token punctuation">.</span>AddLayout<span class="token punctuation">(</span> lay <span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment">#Start/connect to our service.</span><br>
				    svc <span class="token operator">=</span> app<span class="token punctuation">.</span>CreateService<span class="token punctuation">(</span> <span class="token string">"this"</span><span class="token punctuation">,</span> <span class="token string">"this"</span><span class="token punctuation">,</span> OnServiceReady <span class="token punctuation">)</span><br>
				    svc<span class="token punctuation">.</span>SetOnMessage<span class="token punctuation">(</span> OnServiceMessage <span class="token punctuation">)</span><br>
				    <br>
				    <span class="token comment">#This will cause your service to start at boot.</span><br>
				    <span class="token comment">#(Set it to "none" if you need to stop it starting)</span><br>
				    <span class="token comment">#app.SetAutoBoot( "Service" )</span><br>
				<br>
				<span class="token comment">#Called after our service has started.</span><br>
				<span class="token keyword">def</span> <span class="token function">OnServiceReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    app<span class="token punctuation">.</span>Debug<span class="token punctuation">(</span> <span class="token string">"Service Ready"</span> <span class="token punctuation">)</span><br>
				<br>
				<span class="token comment">#Called when messages comes from our service.</span><br>
				<span class="token keyword">def</span> <span class="token function">OnServiceMessage</span><span class="token punctuation">(</span> msg <span class="token punctuation">)</span><span class="token punctuation">:</span><br>
				    txt<span class="token punctuation">.</span>SetText<span class="token punctuation">(</span> <span class="token string">"Count: "</span> <span class="token operator">+</span> msg <span class="token punctuation">)</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'snip1' )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( 'examp1' )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( 'examp1' )">      Run      </a>
			</div>
		</div>



	</div>

	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
</div>
</body>

</html>
