
<!DOCTYPE html>
<html>

<head>
	<title>CreateList</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-default.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/default.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-default.min.css"/>

	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateList</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="setTheme(getTheme() == 'default' ? 'dark' : 'default')"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">
		<p>If you want to display many dataset of the same structure you might consider using the <b>List</b> object.</p>

		<div class="samp">
		lst = app.CreateList(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">list</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>app object:</b> List
		</div>

		<p>The List object supports multi-line list items and can show icons. Multi-line items are created by dividing each list item up using the <docstr>“:”</docstr> (colon) character. If you need to use a colon character in your item text then use this character sequence: <docstr>“^c^”</docstr>.<br>
		You can have one icon and some body text using the following formats:<br>
		<br>
		<docstr>“title”</docstr><br>
		<docstr>“title:icon”</docstr><br>
		<docstr>“title:body:icon”</docstr><br>
		<br>
		Alternatively you can use the <b>AddItem</b> method which accepts <i>title</i>, <i>body</i> and <i>icon</i> as parameters to generically build up your list.<br>
		<br>
		You can specify your own icon file for example <docstr>“Img/MyIcon.png”</docstr>, or one of the special built-in icons using the following key words: <docstr>“audio”</docstr>, <docstr>“photo”</docstr>, <docstr>“video”</docstr>, <docstr>“folder”</docstr>, <docstr>“audiofolder”</docstr>, <docstr>“photofolder”</docstr>, <docstr>“videofolder”</docstr> and <docstr>“playlist”</docstr>.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Title + Icon</h3>
			<div id="examp3" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip3" style="font-size:100%"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">"Folder:folder,Audio:audio,Photo:photo,Video:video"</span><span class="token punctuation">;</span><br>
				    lst <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateList</span><span class="token punctuation">(</span> data<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> lst_OnTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> lst <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">lst_OnTouch</span><span class="token punctuation">(</span> <span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> type<span class="token punctuation">,</span> index</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Touched Item = "</span> <span class="token operator">+</span> title <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip3 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp3 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp3 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Title + Body</h3>
			<div id="examp4" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip4" style="font-size:100%"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">"The Hobbit:Author^c^ J.R.R. Tolkien:null"</span><span class="token punctuation">;</span><br>
				    data <span class="token operator">+=</span> <span class="token string">",Watership Down:Author^c^ Richard Adams:null"</span><span class="token punctuation">;</span><br>
				    lst <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateList</span><span class="token punctuation">(</span> data<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> lst_OnTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> lst <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">lst_OnTouch</span><span class="token punctuation">(</span> <span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> type<span class="token punctuation">,</span> index</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Touched Item = "</span> <span class="token operator">+</span> title <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip4 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp4 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp4 )">      Run      </a>
			</div>
		</div>

		<p>You can use the <b>SetOnTouch</b> and <b>SetOnLongTouch</b> methods to define a function you want to be called when a list item is selected. The selected item title, body, type and index are passed into your OnTouch callback function as parameters.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Simple</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip1" style="font-size:100%">lst <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateList</span><span class="token punctuation">(</span> <span class="token string">"Fred,Bill,Jim"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> lst_OnTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetOnLongTouch</span><span class="token punctuation">(</span> lst_OnLongTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> lst <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">lst_OnTouch</span><span class="token punctuation">(</span> <span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> type<span class="token punctuation">,</span> index</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Item = "</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">", Index = "</span> <span class="token operator">+</span> index<span class="token punctuation">,</span> <span class="token string">"Short"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">lst_OnLongTouch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Long Touch Item = "</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">", Index = "</span> <span class="token operator">+</span> index<span class="token punctuation">,</span> <span class="token string">"Short"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip1 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>

		<p>You can change the look of a List using the <b>SetBackColor</b> and <b>SetTextColor</b> functions on the list object. You can also set a background image/pattern or background gradient for the List using the <b>SetBackground</b> and <b>SetBackGradient</b> functions.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Gray on White</h3>
			<div id="examp2" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip2" style="font-size:100%">lst <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateList</span><span class="token punctuation">(</span> <span class="token string">"Fred,Bill,Jim"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span> <span class="token string">"#ff666666"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetBackColor</span><span class="token punctuation">(</span> <span class="token string">"#ffffffff"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> lst_OnTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> lst <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">lst_OnTouch</span><span class="token punctuation">(</span> <span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> type<span class="token punctuation">,</span> index</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Touched Item = "</span> <span class="token operator">+</span> title <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip2 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>

		<p>You can also create lists items that look like buttons by using one of the following options: <docstr>“AlumButton”</docstr>, <docstr>“GreenButton”</docstr>, <docstr>“OrangeButton”</docstr>.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Orange Buttons</h3>
			<div id="examp5" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip5" style="font-size:100%"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">"Button 1,Button 2,Button 3,Button 4"</span><span class="token punctuation">;</span><br>
				    lst <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateList</span><span class="token punctuation">(</span> data<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token string">"OrangeButton"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetBackColor</span><span class="token punctuation">(</span> <span class="token string">"#ffffff"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetPadding</span><span class="token punctuation">(</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> lst_OnTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> lst <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">lst_OnTouch</span><span class="token punctuation">(</span> <span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> type<span class="token punctuation">,</span> index</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Touched Item = "</span> <span class="token operator">+</span> title <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip5 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp5 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp5 )">      Run      </a>
			</div>
		</div>

		<p>Or create lists with Gradient backgrounds like this:</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Gradient Background</h3>
			<div id="examp6" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip6" style="font-size:100%"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><br>
				    <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">30</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">if</span><span class="token punctuation">(</span> i <span class="token operator">></span> <span class="token number">1</span> <span class="token punctuation">)</span> data <span class="token operator">+=</span> <span class="token string">","</span><span class="token punctuation">;</span><br>
				        data <span class="token operator">+=</span> <span class="token string">"Item "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">":Details for item "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">":null"</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><br>
				    lst <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateList</span><span class="token punctuation">(</span> data<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"WhiteGrad"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetTextColor1</span><span class="token punctuation">(</span> <span class="token string">"#ff555558"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetTextColor2</span><span class="token punctuation">(</span> <span class="token string">"#ff555558"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetTextMargins</span><span class="token punctuation">(</span> <span class="token number">0.04</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> lst_OnTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> lst <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">lst_OnTouch</span><span class="token punctuation">(</span> <span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> type<span class="token punctuation">,</span> index</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Touched Item = "</span> <span class="token operator">+</span> title <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip6 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp6 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp6 )">      Run      </a>
			</div>
		</div>

		<p>The following methods are available on the <b>List</b> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">AddItem</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">image</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup" class="baseFunc">AdjustColor</a>(
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">hue</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">saturation</a>,
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">brightness</a>,
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">contrast</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup" class="baseFunc">ClearFocus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup" class="baseFunc">Focus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsHeight</a>() → <b>number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsWidth</a>() → <b>number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup" class="baseFunc">GetHeight</a>(
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">options</a> )
			→ <b>number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">GetItem</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a> )
			→ <b>object:</b> {
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">image</a> }
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">GetItemByIndex</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )
			→ <b>object:</b> {
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">image</a> }
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup" class="baseFunc">GetLeft</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">GetLength</a>() → <b>number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">GetList</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">delim</a> )
			→ <b>list:</b> [{
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">image</a> }]
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup" class="baseFunc">GetParent</a>() → <b>app object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup" class="baseFunc">GetPosition</a>(
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">options</a> )
			→ <b>object:</b> {
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">bottom</a> }
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">GetTextSize</a>(
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">mode</a> )
			→ <b>number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup" class="baseFunc">GetTop</a>(
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">options</a> )
			→ <b>number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup">GetType</a>() → <b>string:</b> <docstr>“List”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup" class="baseFunc">GetVisibility</a>() → <b>string:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup" class="baseFunc">GetWidth</a>(
			<a href="#pop_str_007" data-transition="pop" data-rel="popup">options</a> )
			→ <b>number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup" class="baseFunc">Gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup" class="baseFunc">Hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup">InsertItem</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">image</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup" class="baseFunc">IsEnabled</a>() → <b>boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup">IsOverlap</a>(
			<a href="#pop_std_dso" data-transition="pop" data-rel="popup">obj</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">depth</a> )
			→ <b>boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup" class="baseFunc">IsVisible</a>() → <b>boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup" class="premHint">Method</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">types</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )
			→ <b>all types</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01b" data-transition="pop" data-rel="popup">RemoveAll</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01c" data-transition="pop" data-rel="popup">RemoveItem</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01d" data-transition="pop" data-rel="popup">RemoveItemByIndex</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01e" data-transition="pop" data-rel="popup">ScrollToItem</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01f" data-transition="pop" data-rel="popup">ScrollToItemByIndex</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_020" data-transition="pop" data-rel="popup">SelectItem</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">scroll</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_021" data-transition="pop" data-rel="popup">SelectItemByIndex</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">scroll</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_022" data-transition="pop" data-rel="popup" class="baseFunc">SetBackAlpha</a>(
			<a href="#pop_num_005" data-transition="pop" data-rel="popup">alpha</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_023" data-transition="pop" data-rel="popup" class="baseFunc">SetBackColor</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_024" data-transition="pop" data-rel="popup" class="baseFunc">SetBackGradient</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>,
			<a href="#pop_std_ukn" data-transition="pop" data-rel="popup">color3</a>,
			<a href="#pop_str_008" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_025" data-transition="pop" data-rel="popup" class="baseFunc">SetBackGradientRadial</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">y</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">radius</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>,
			<a href="#pop_std_ukn" data-transition="pop" data-rel="popup">color3</a>,
			<a href="#pop_std_ukn" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_026" data-transition="pop" data-rel="popup" class="baseFunc">SetBackground</a>(
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a>,
			<a href="#pop_str_009" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_027" data-transition="pop" data-rel="popup" class="baseFunc">SetColorFilter</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a>,
			<a href="#pop_str_00a" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_028" data-transition="pop" data-rel="popup">SetColumnWidths</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">icon</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">body</a>,
			<a href="#pop_str_00b" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_029" data-transition="pop" data-rel="popup">SetDivider</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02a" data-transition="pop" data-rel="popup">SetEllipsize</a>(
			<a href="#pop_str_00c" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02b" data-transition="pop" data-rel="popup">SetEllipsize1</a>(
			<a href="#pop_str_00d" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02c" data-transition="pop" data-rel="popup">SetEllipsize2</a>(
			<a href="#pop_str_00e" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02d" data-transition="pop" data-rel="popup" class="baseFunc">SetEnabled</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">enable</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02e" data-transition="pop" data-rel="popup">SetFontFile</a>(
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02f" data-transition="pop" data-rel="popup">SetHiTextColor1</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_030" data-transition="pop" data-rel="popup">SetHiTextColor2</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_031" data-transition="pop" data-rel="popup">SetIconMargins</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_00f" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_032" data-transition="pop" data-rel="popup">SetIconSize</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">size</a>,
			<a href="#pop_str_010" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_033" data-transition="pop" data-rel="popup">SetItem</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">newTitle</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">newBody</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">newImage</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_034" data-transition="pop" data-rel="popup">SetItemByIndex</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">newTitle</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">newBody</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">newImage</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_035" data-transition="pop" data-rel="popup">SetList</a>(
			<a href="#pop_str_011" data-transition="pop" data-rel="popup">list</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">delim</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_036" data-transition="pop" data-rel="popup" class="baseFunc">SetMargins</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_012" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_037" data-transition="pop" data-rel="popup">SetOnLongTouch</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_038" data-transition="pop" data-rel="popup">SetOnTouch</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_039" data-transition="pop" data-rel="popup" class="baseFunc">SetPadding</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_013" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03a" data-transition="pop" data-rel="popup" class="baseFunc">SetPosition</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_014" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03b" data-transition="pop" data-rel="popup" class="baseFunc">SetScale</a>(
			<a href="#pop_num_fac" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_fac" data-transition="pop" data-rel="popup">y</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03c" data-transition="pop" data-rel="popup" class="baseFunc">SetSize</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_015" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03d" data-transition="pop" data-rel="popup">SetTextColor</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03e" data-transition="pop" data-rel="popup">SetTextColor1</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03f" data-transition="pop" data-rel="popup">SetTextColor2</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_040" data-transition="pop" data-rel="popup" class="baseFunc">SetMargins</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_016" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_041" data-transition="pop" data-rel="popup">SetTextShadow</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">radius</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">dx</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">dy</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_042" data-transition="pop" data-rel="popup">SetTextShadow1</a>(
			<a href="#pop_num_deg" data-transition="pop" data-rel="popup">radius</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">dx</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">dy</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_043" data-transition="pop" data-rel="popup">SetTextShadow2</a>(
			<a href="#pop_num_deg" data-transition="pop" data-rel="popup">radius</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">dx</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">dy</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_044" data-transition="pop" data-rel="popup">SetTextSize</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">size</a>,
			<a href="#pop_str_017" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_045" data-transition="pop" data-rel="popup">SetTextSize1</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">size</a>,
			<a href="#pop_str_018" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_046" data-transition="pop" data-rel="popup">SetTextSize2</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">size</a>,
			<a href="#pop_str_019" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_047" data-transition="pop" data-rel="popup" class="baseFunc">SetVisibility</a>(
			<a href="#pop_str_01a" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_048" data-transition="pop" data-rel="popup" class="baseFunc">Show</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_049" data-transition="pop" data-rel="popup" class="baseFunc">Tween</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">target</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">duration</a>,
			<a href="#pop_str_01b" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">repeat</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">yoyo</a>,
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>
	<br>
	</div>

	<div data-role="popup" id="pop_std_str" class="ui-content"><b>string</b></div>
	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>string:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“<a href="" onclick="app.ShowPopup('Expand list to full height inside scrollers')">Expand</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('applies various settings to make the list appear like an in-app menu')">Menu</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('makes title and body text flow horizontally')">Horiz</a>”</docstr>, <docstr>“html”</docstr>, <docstr>“FontAwesome”</docstr>, <docstr>“Normal”</docstr>, <docstr>“WhiteGrad”</docstr> or <docstr>“AlumButton”</docstr> or <docstr>“GreenButton”</docstr> or <docstr>“OrangeButton”</docstr>, <docstr>“NoSound”</docstr></div>

	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>lst.AddItem</b><br>Adds an entry to the list.</div>
	<div data-role="popup" id="pop_str_pth" class="ui-content"><b>string:</b> <i>path to file or folder ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>

	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>lst.AdjustColor</b><br>Adjust the visual color effect of the control by setting the Hue (by angle in degrees in a color circle), the saturation, brightness and contrast of the control.</div>
	<div data-role="popup" id="pop_num_001" class="ui-content"><b>number:</b> -180..180</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>number:</b> -100..100</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>number:</b> -100..100</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>number:</b> 0..100</div>

	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>lst.ClearFocus</b><br>Removes the focus of the control so that the user no longer has immediate access to it.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>lst.Focus</b><br>Set the focus to the control so that the user can interact with it immediately.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>lst.GetAbsHeight</b><br>Get the absolute height of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>lst.GetAbsWidth</b><br>Get the absolute width of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>lst.GetHeight</b><br>Get the height of the control as screen height relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>string:</b> <docstr>“px”</docstr></div>

	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>lst.GetItem</b><br>Returns item data of an item with a specific title.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>lst.GetItemByIndex</b><br>Returns item data of an item on a specific index.</div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>number:</b> <i>integer</i></div>

	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>lst.GetLeft</b><br>Get the distance from the control to the left parent border as width relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>string:</b> <docstr>“px”</docstr></div>

	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>lst.GetLength</b><br>Returns the amount of items in the lists.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>lst.GetList</b><br>Returns the full list data as an object.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>lst.GetParent</b><br>Returns the parent control object where the object was added to - commonly a layout.</div>
	<div data-role="popup" id="pop_std_num" class="ui-content"><b>number</b></div>

	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>lst.GetPosition</b><br>Returns data about the position and size of the control.<br>If the <b>screen</b> option is given the position on the screen will be returned. Otherwise relative to the parent control.<br>The <b>px</b> options turns the relative values into pixels.</div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>string:</b> <docstr>“screen”</docstr>, <docstr>“px”</docstr></div>

	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>lst.GetTextSize</b><br>Returns the current size of the contained text. If the <b>px</b> option is given the size will be retured in pixels.</div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>string:</b> <docstr>“px”</docstr></div>

	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>lst.GetTop</b><br>Get the distance from the control to the upper parent border as height relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_str_006" class="ui-content"><b>string:</b> <docstr>“px”</docstr></div>

	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>lst.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>lst.GetVisibility</b><br>Returns the current visibility state of the control. The Values are:<br><b>Show</b>: visible<br><b>Hide</b>: invisible but still consuming space<br><b>Gone</b>: invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>lst.GetWidth</b><br>Get the width of the control as screen width relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_str_007" class="ui-content"><b>string:</b> <docstr>“px”</docstr></div>

	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>lst.Gone</b><br>Hides the control without consuming any more layout space as if it were never there.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>lst.Hide</b><br>Hide the control but keep the layout space free.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>lst.InsertItem</b><br>Inserts an item at s specific index in the list.</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>lst.IsEnabled</b><br>Returns whether the control is currently useable by the user.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>lst.IsOverlap</b><br>Returns whether the control overlaps with another by a given distance.</div>
	<div data-role="popup" id="pop_std_dso" class="ui-content"><b>app object</b></div>

	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>lst.IsVisible</b><br>Returns whether the control is currently visible to the user, ignoring overlaying controls.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>lst.Method</b><br>Allows access to other functions defined on the object in Java via reflection.<br><br><div class='premHint'><b>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</b></div></div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>list:</b> boolean,char,byte,short,int,long,float,double,String,CharSequence,...</div>

	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>lst.RemoveAll</b><br>Removes all entries of the list.</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>lst.RemoveItem</b><br>Removes an item with a specific title from the list.</div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>lst.RemoveItemByIndex</b><br>Removes an item on a specific index from the list</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>lst.ScrollToItem</b><br>Scrolls the list to an item with a specific title.</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>lst.ScrollToItemByIndex</b><br>Scrolls the list to an item on a specific index.</div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>lst.SelectItem</b><br>Highlights an item with a specific title.</div>
	<div data-role="popup" id="pop_std_bin" class="ui-content"><b>boolean</b></div>

	<div data-role="popup" id="pop_dsc_021" class="ui-content"><b>lst.SelectItemByIndex</b><br>Highlights an item on a specific index.</div>
	<div data-role="popup" id="pop_dsc_022" class="ui-content"><b>lst.SetBackAlpha</b><br>Set the transparency of the background by an alpha value between <b>0</b> (<i>no transparency</i>) and <b>0.99</b> (<i>full transparent</i>) or <b>1</b> (<i>no transparency</i>) and <b>256</b> (<i>full transparent</i>)</div>
	<div data-role="popup" id="pop_num_005" class="ui-content"><b>number:</b> 0..0.99 or 1..256</div>

	<div data-role="popup" id="pop_dsc_023" class="ui-content"><b>lst.SetBackColor</b><br>Changes the background color of the control.</div>
	<div data-role="popup" id="pop_str_col" class="ui-content"><b>string:</b> <i><br>  hexadecimal: <docstr>“#rrggbb”</docstr>, <docstr>“#aarrggbb”</docstr><br>  colourName: <docstr>“red”</docstr>, <docstr>“green”</docstr>, ...</i></div>

	<div data-role="popup" id="pop_dsc_024" class="ui-content"><b>lst.SetBackGradient</b><br>Define the background color of the control with a gradient. The default gradient direction is from top to bottom, but you can change it from left to right and the reversed versions of course.</div>
	<div data-role="popup" id="pop_std_ukn" class="ui-content"><b>unknown</b></div>
	<div data-role="popup" id="pop_str_008" class="ui-content"><b>string:</b> <docstr>“left-right”</docstr> or <docstr>“right-left”</docstr> or <docstr>“top-bottom”</docstr> or <docstr>“bottom-top”</docstr> or <docstr>“bl-tr”</docstr> or <docstr>“br-tl”</docstr> or <docstr>“tl-br”</docstr> or <docstr>“tr-bl”</docstr></div>

	<div data-role="popup" id="pop_dsc_025" class="ui-content"><b>lst.SetBackGradientRadial</b><br>Define a radial color gradient for the background of control.</div>
	<div data-role="popup" id="pop_dsc_026" class="ui-content"><b>lst.SetBackground</b><br>Changes the background to an image which can be repeated using the <b>repeat</b> option.<br>An image which is often used with that option is '/res/drawable/pattern_carbon' - try it out!</div>
	<div data-role="popup" id="pop_str_009" class="ui-content"><b>string:</b> <docstr>“repeat”</docstr></div>

	<div data-role="popup" id="pop_dsc_027" class="ui-content"><b>lst.SetColorFilter</b><br>Adjust the visual color effect with a color and a given BlendMode. More information about BlendMode can be found in the <a href="https://developer.android.com/reference/android/graphics/BlendMode.html" onclick="return OpenUrl(this.href);">Android Developer page</a>.</div>
	<div data-role="popup" id="pop_str_00a" class="ui-content"><b>string:</b> <docstr>“Add”</docstr> or <docstr>“Multiply”</docstr> or <docstr>“clear”</docstr> or <docstr>“darken”</docstr> or <docstr>“lighten”</docstr> or <docstr>“overlay”</docstr> or <docstr>“screen”</docstr> or <docstr>“xor”</docstr> or <docstr>“src_in”</docstr> or <docstr>“src_out”</docstr> or <docstr>“src_atop”</docstr> or <docstr>“src_over”</docstr> or <docstr>“dst_in”</docstr> or <docstr>“dst_out”</docstr> or <docstr>“dst_atop”</docstr> or <docstr>“dst_over”</docstr></div>

	<div data-role="popup" id="pop_dsc_028" class="ui-content"><b>lst.SetColumnWidths</b><br>Changes the coloumn withs for title, body and icon. Often used with the <docstr>“Horiz”</docstr> option.</div>
	<div data-role="popup" id="pop_str_00b" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_029" class="ui-content"><b>lst.SetDivider</b><br>Changes the item divider height and color.</div>
	<div data-role="popup" id="pop_dsc_02a" class="ui-content"><b>lst.SetEllipsize</b><br>Will cause the inner text to be broken with ... at the start or the end if it cannot fit in the control.</div>
	<div data-role="popup" id="pop_str_00c" class="ui-content"><b>string:</b> <docstr>“start”</docstr> or <docstr>“middle”</docstr> or <docstr>“end”</docstr></div>

	<div data-role="popup" id="pop_dsc_02b" class="ui-content"><b>lst.SetEllipsize1</b><br>Will cause the element titles to be broken with ... at the start or the end if it cannot fit in the control.</div>
	<div data-role="popup" id="pop_str_00d" class="ui-content"><b>string:</b> <docstr>“start”</docstr> or <docstr>“middle”</docstr> or <docstr>“end”</docstr></div>

	<div data-role="popup" id="pop_dsc_02c" class="ui-content"><b>lst.SetEllipsize2</b><br>Will cause the element bodies to be broken with ... at the start or the end if it cannot fit in the control.</div>
	<div data-role="popup" id="pop_str_00e" class="ui-content"><b>string:</b> <docstr>“start”</docstr> or <docstr>“middle”</docstr> or <docstr>“end”</docstr></div>

	<div data-role="popup" id="pop_dsc_02d" class="ui-content"><b>lst.SetEnabled</b><br>En/Disable the control physically and visually so that the user can/can not access the control. Events like OnTouch will still be fired.</div>
	<div data-role="popup" id="pop_dsc_02e" class="ui-content"><b>lst.SetFontFile</b><br>Change the font style by defining a font file.</div>
	<div data-role="popup" id="pop_dsc_02f" class="ui-content"><b>lst.SetHiTextColor1</b><br>Change the highlight color of titles when selected.</div>
	<div data-role="popup" id="pop_dsc_030" class="ui-content"><b>lst.SetHiTextColor2</b><br>Change the highlight color of bodies when selected.</div>
	<div data-role="popup" id="pop_dsc_031" class="ui-content"><b>lst.SetIconMargins</b><br>Change the outer icon border distance.</div>
	<div data-role="popup" id="pop_str_00f" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_032" class="ui-content"><b>lst.SetIconSize</b><br>Changes the icon size.</div>
	<div data-role="popup" id="pop_str_010" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_033" class="ui-content"><b>lst.SetItem</b><br>Change the content of an element with a specific title.</div>
	<div data-role="popup" id="pop_dsc_034" class="ui-content"><b>lst.SetItemByIndex</b><br>Change the content of an element on a specific index.</div>
	<div data-role="popup" id="pop_dsc_035" class="ui-content"><b>lst.SetList</b><br>Set the content of the whole list.</div>
	<div data-role="popup" id="pop_str_011" class="ui-content"><b>string:</b> <i>separated:</i> <docstr>“title”</docstr> or <docstr>“title:icon”</docstr> or <docstr>“title:body:icon”</docstr></div>

	<div data-role="popup" id="pop_dsc_036" class="ui-content"><b>lst.SetMargins</b><br>Define a distance to other controls on each side of the control.</div>
	<div data-role="popup" id="pop_str_012" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_037" class="ui-content"><b>lst.SetOnLongTouch</b><br>Define a callback function which is called when the object has been long pressed.</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('app object')">src</a>
	)</div>

	<div data-role="popup" id="pop_dsc_038" class="ui-content"><b>lst.SetOnTouch</b><br>Define a callback function that is called when the user touches the control.</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>()</div>

	<div data-role="popup" id="pop_dsc_039" class="ui-content"><b>lst.SetPadding</b><br>Define distances that elements within the control are to maintain from the control borders.</div>
	<div data-role="popup" id="pop_str_013" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_03a" class="ui-content"><b>lst.SetPosition</b><br>Defines the position and size for the control if the parent is an absolute layout.</div>
	<div data-role="popup" id="pop_str_014" class="ui-content"><b>string:</b> <docstr>“px”</docstr></div>

	<div data-role="popup" id="pop_dsc_03b" class="ui-content"><b>lst.SetScale</b><br>Scales the control along with its contents by the factors passed to the function.</div>
	<div data-role="popup" id="pop_num_fac" class="ui-content"><b>number:</b> <i>factor</i></div>

	<div data-role="popup" id="pop_dsc_03c" class="ui-content"><b>lst.SetSize</b><br>Change the size of the control in either screen relative values or in pixels if the <b>px</b> option was given.</div>
	<div data-role="popup" id="pop_str_015" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“dp”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_03d" class="ui-content"><b>lst.SetTextColor</b><br>Change the text color of the contained text.</div>
	<div data-role="popup" id="pop_dsc_03e" class="ui-content"><b>lst.SetTextColor1</b><br>Change the default text color of titles.</div>
	<div data-role="popup" id="pop_dsc_03f" class="ui-content"><b>lst.SetTextColor2</b><br>Change the default text color of bodies.</div>
	<div data-role="popup" id="pop_dsc_040" class="ui-content"><b>lst.SetMargins</b><br>Define a distance to other controls on each side of the control.</div>
	<div data-role="popup" id="pop_str_016" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_041" class="ui-content"><b>lst.SetTextShadow</b><br>Define a shadow displayed around the control.<br>The sun is always shining so there has to be one. Always.</div>
	<div data-role="popup" id="pop_dsc_042" class="ui-content"><b>lst.SetTextShadow1</b><br>Apply text shadows to titles.</div>
	<div data-role="popup" id="pop_num_deg" class="ui-content"><b>number:</b> <i>angle in degrees (0..360)</i></div>

	<div data-role="popup" id="pop_dsc_043" class="ui-content"><b>lst.SetTextShadow2</b><br>Apply text shadows to bodies.</div>
	<div data-role="popup" id="pop_dsc_044" class="ui-content"><b>lst.SetTextSize</b><br>Change the size of the contained text.</div>
	<div data-role="popup" id="pop_str_017" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“dip”</docstr> or <docstr>“sp”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('scales text in proportion with device resolution')">pl</a>”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('scales text in proportion with device resolution')">ps</a>”</docstr></div>

	<div data-role="popup" id="pop_dsc_045" class="ui-content"><b>lst.SetTextSize1</b><br>Change the text size for titles.</div>
	<div data-role="popup" id="pop_str_018" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_046" class="ui-content"><b>lst.SetTextSize2</b><br>Change the text size for bodies.</div>
	<div data-role="popup" id="pop_str_019" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_047" class="ui-content"><b>lst.SetVisibility</b><br>Change the visibility of the control to one of the available modes:<br><b>Show:</b> visible<br><b>Hide:</b> invisible but still consuming space<br><b>Gone:</b> invisible and not consuming space</div>
	<div data-role="popup" id="pop_str_01a" class="ui-content"><b>string:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr></div>

	<div data-role="popup" id="pop_dsc_048" class="ui-content"><b>lst.Show</b><br>Set the visibility of the control to <docstr>“Show”</docstr>.</div>
	<div data-role="popup" id="pop_dsc_049" class="ui-content"><b>lst.Tween</b><br>Performs an animation on the control.<br>The <b>target</b> object is for the position, size and rotation that the control has at the end of the animation.<br><br>The <b>type</b> specifies the behavior and the speed of the animation. Separated by a dot, you must also specify whether you want to apply this behavior to the beginning (In), end (Out), or to both (InOut) times of the animation.<br><br>With the amount of <b>repeat</b>s you can control how many times you want to play the animation.<br><br>If you have <b>jojo</b> activated, the animation will alternate between forward and backward playback, so that if the repetition value is odd, the control will be at the start position again at the end of the animation.<br><br>Finally the <b>callback</b> function will be called after the animation has finished. Well, it's about time!</div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>object:</b> { <a href="" onclick="app.ShowPopup('number: fraction (0..1)')">x</a>, <a href="" onclick="app.ShowPopup('number: fraction (0..1)')">y</a>, <a href="" onclick="app.ShowPopup('number: fraction (0..1)')">sw</a>, <a href="" onclick="app.ShowPopup('number: fraction (0..1)')">sh</a>, <a href="" onclick="app.ShowPopup('number: angle in degrees (0..360)')">rot</a> }</div>
	<div data-role="popup" id="pop_num_mls" class="ui-content"><b>number:</b> <i>milliseconds</i></div>
	<div data-role="popup" id="pop_str_01b" class="ui-content"><b>string:</b> <docstr>“Linear.None”</docstr> or <docstr>“Quadratic.In/Out”</docstr> or <docstr>“Cubic.In/Out”</docstr> or <docstr>“Quartic.In/Out”</docstr> or <docstr>“Quintic.In/Out”</docstr> or <docstr>“Sinusoidal.In/Out”</docstr> or <docstr>“Exponential.In/Out”</docstr> or <docstr>“Circular.In/Out”</docstr> or <docstr>“Elastic.In/Out”</docstr> or <docstr>“Back.In/Out”</docstr> or <docstr>“Bounce.In/Out”</docstr></div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>()</div>
</div>
</body>

</html>
