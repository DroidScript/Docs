
<!DOCTYPE html>
<html>

<head>
	<title>CreateSpeechRec</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-default.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-default.css"/>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
	<div data-role="page" data-theme="a">

		<div data-role="header" data-position="fixed">
			<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
			<h1>CreateSpeechRec</h1>
		</div>

		<div data-role="content">
			<p>The <b>SpeechRec</b> object can be used to listen for and recognize speech.</p>

			<div class="samp">
			spr = app.CreateSpeechRec( <a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> ) → <b>app object:</b> SpeechRec
			</div>

			<p>Use the <b>Recognize</b> method of the SpeechRec object to tell it to start listening:</p>

			<div class="samp">
			speech.Recognize();
			</div>

			<p>When the SpeechRec object has started listening, the <b>OnReady</b> callback function will be called. Use the <b>SetOnReady</b> method to set the name of your OnReady callback function.<br>
			<br>
			If the SpeechRec object recognizes speech, the <b>OnResult</b> callback function will be called. The results are passed to the OnResult callback function as an array, with the most probable result at the front. Use the <b>SetOnResult</b> method to set the name of your OnResult callback function.<br>
			<br>
			If the SpeechRec object does not recognize anything, the <b>OnError</b> callback function will be called. Use the <b>SetOnError</b> method to set the name of your OnError callback function.</p>
			<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
				<h3>Example - Example</h3>
				<div id="examp0" style="font-size:70%">
					function OnStart()<br>
				{<br>
				&#160;&#160;&#160;&#160;lay = app.CreateLayout( &quot;linear&quot;, &quot;VCenter,FillXY&quot; );<br>
				<br>
				&#160;&#160;&#160;&#160;btn = app.CreateButton( &quot;Talk To Me&quot;, 0.3, 0.1 );<br>
				&#160;&#160;&#160;&#160;btn.SetOnTouch( btn_OnTouch );<br>
				&#160;&#160;&#160;&#160;lay.AddChild( btn );<br>
				<br>
				&#160;&#160;&#160;&#160;app.AddLayout( lay );<br>
				<br>
				<b id = "snip0"  style = "font-size:100%">&#160;&#160;&#160;&#160;speech = app.CreateSpeechRec();<br>
				&#160;&#160;&#160;&#160;speech.SetOnReady( speech_OnReady );<br>
				&#160;&#160;&#160;&#160;speech.SetOnResult( speech_OnResult );<br>
				&#160;&#160;&#160;&#160;speech.SetOnError( speech_OnError );<br>
				</b>}<br>
				<br>
				function btn_OnTouch()<br>
				{<br>
				&#160;&#160;&#160;&#160;speech.Recognize();<br>
				}<br>
				<br>
				function speech_OnReady()<br>
				{<br>
				&#160;&#160;&#160;&#160;app.ShowPopup( &quot;Listening...&quot;, &quot;Short&quot; );<br>
				}<br>
				<br>
				function speech_OnResult( results )<br>
				{<br>
				&#160;&#160;&#160;&#160;app.ShowPopup( results[0] );<br>
				}<br>
				<br>
				function speech_OnError()<br>
				{<br>
				&#160;&#160;&#160;&#160;app.ShowPopup( &quot;Please speak more clearly!&quot; );<br>
				}
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip0 )">&#160;&#160;&#160;&#160;Copy&#160;&#160;&#160;&#160;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp0 )">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp0 )">&#160;&#160;&#160;&#160;&#160;&#160;Run&#160;&#160;&#160;&#160;&#160;&#160;</a>
				</div>
			</div>

			
			<p><br>The following methods are available on the <b>SpeechRec</b> object:</p>

			<div class="samp"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">Cancel</a>()</div>
			<div class="samp"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup">GetRMS</a>() → <b>number:</b> <i>float</i></div>
			<div class="samp"><a href="#pop_dsc_003" data-transition="pop" data-rel="popup">GetType</a>() → <b>string:</b> “SpeechRec”</div>
			<div class="samp"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">IsListening</a>() → <b>boolean</b></div>
			<div class="samp"><a href="#pop_dsc_005" data-transition="pop" data-rel="popup">Method</a>( <a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>, <a href="#pop_str_002" data-transition="pop" data-rel="popup">types</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )</div>
			<div class="samp"><a href="#pop_dsc_006" data-transition="pop" data-rel="popup">Recognize</a>()</div>
			<div class="samp"><a href="#pop_dsc_007" data-transition="pop" data-rel="popup">SetOnError</a>( <a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )</div>
			<div class="samp"><a href="#pop_dsc_008" data-transition="pop" data-rel="popup">SetOnReady</a>( <a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )</div>
			<div class="samp"><a href="#pop_dsc_009" data-transition="pop" data-rel="popup">SetOnResult</a>( <a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )</div>
			<div class="samp"><a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">Stop</a>()</div>

			<br>
		</div>

		<div data-role="popup" id="pop_str_001" class="ui-content"><b>string:</b> “NoBeep”, “Partial”</div>
		<div data-role="popup" id="pop_dsc_001" class="ui-content">stop recognision</div>
		<div data-role="popup" id="pop_dsc_002" class="ui-content">?</div>
		<div data-role="popup" id="pop_dsc_003" class="ui-content">Returns the control class name.</div>
		<div data-role="popup" id="pop_dsc_004" class="ui-content">returns whether speechRec is listening</div>
		<div data-role="popup" id="pop_std_str" class="ui-content"><b>string</b></div>
		<div data-role="popup" id="pop_str_002" class="ui-content"><b>string:</b> <i>comma “,” separated</i> “boolean”, “char”, “byte”, “short”, “int”, “long”, “float”, “double”</div>
		<div data-role="popup" id="pop_dsc_005" class="ui-content">Allows access to other functions defined on the object in Java via reflection.</div>
		<div data-role="popup" id="pop_dsc_006" class="ui-content">start speech recognizion</div>
		<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(<a href="" onclick="prompt( '#', 'App.ShowPopup( string' )">error</a>)</div>
		<div data-role="popup" id="pop_dsc_007" class="ui-content"></div>
		<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>()</div>
		<div data-role="popup" id="pop_dsc_008" class="ui-content"></div>
		<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>(<a href="" onclick="prompt( '#', 'App.ShowPopup( string' )">result</a>)</div>
		<div data-role="popup" id="pop_dsc_009" class="ui-content"></div>
		<div data-role="popup" id="pop_dsc_00a" class="ui-content">Stop speech recognizion</div>

	</div>
</body>

</html>
