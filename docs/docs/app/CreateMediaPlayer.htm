
<!DOCTYPE html>
<html>

<head>
	<title>CreateMediaPlayer</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-default.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-default.css"/>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
	<div data-role="page" data-theme="a">

		<div data-role="header" data-position="fixed">
			<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
			<h1>CreateMediaPlayer</h1>
		</div>

		<div data-role="content">
			<p>The MediaPlayer object can be used to play sound files from the phone or tablet.</p>

			<div class="samp">
			ply = app.CreateMediaPlayer() → <b>app object:</b> MediaPlayer
			</div>

			<p>Use the SetFile method of the MediaPlayer object to set the sound file to play. Supported sound file types include .ogg and .mp3.<br>
			<br>
			When the sound file is ready for playback, the <b>OnReady</b> callback function will be called. Then you can start playing using the <b>Start</b> method.<br>
			If the sundtrack has finished playing, the <b>OnComplete</b> callback fill be called. All together you code could look like that:</p>
			
			<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
				<h3>Example - Playing Audio</h3>
				<div id="examp0" style="font-size:70%">
					function OnStart()<br>
				{<br>
				&#160;&#160;&#160;&#160;lay = app.CreateLayout( &quot;Linear&quot;, &quot;FillXY,VCenter&quot; );<br>
				<br>
				&#160;&#160;&#160;&#160;btn = app.CreateButton( &quot;Play&quot;, 0.4, 0.1 );<br>
				&#160;&#160;&#160;&#160;btn.SetOnTouch( btn_OnTouch );<br>
				&#160;&#160;&#160;&#160;lay.AddChild( btn );<br>
				<br>
				&#160;&#160;&#160;&#160;app.AddLayout( lay );<br>
				<br>
				&#160;&#160;&#160;&#160;player = app.CreateMediaPlayer();<br>
				&#160;&#160;&#160;&#160;player.SetOnComplete( player_OnComplete );<br>
				&#160;&#160;&#160;&#160;player.SetFile( &quot;/Sys/Snd/Poing.ogg&quot; );<br>
				}<br>
				<br>
				function btn_OnTouch()<br>
				{<br>
				&#160;&#160;&#160;&#160;player.Play();<br>
				}<br>
				<br>
				function player_OnComplete()<br>
				{<br>
				&#160;&#160;&#160;&#160;app.ShowPopup( &quot;OnComplete&quot; );<br>
				}
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip0 )">&#160;&#160;&#160;&#160;Copy&#160;&#160;&#160;&#160;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp0 )">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp0 )">&#160;&#160;&#160;&#160;&#160;&#160;Run&#160;&#160;&#160;&#160;&#160;&#160;</a>
				</div>
			</div>

			<p>The SeekTo method can be used to adjust the playback position by passing in the time in seconds. Passing in 0 will set the playback position to the beginning of the sound file.</p>

			<div class="samp">
			player.SeekTo( 0 );
			</div>

			<p><br>The following methods are available on the <b>MediaPlayer</b> object:</p>

			<div class="samp"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">Close</a>()</div>
			<div class="samp"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup">GetDuration</a>() → <b>unknown</b></div>
			<div class="samp"><a href="#pop_dsc_003" data-transition="pop" data-rel="popup">GetPosition</a>( <a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> ) → <b>object:</b> { <a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>, <a href="#pop_std_num" data-transition="pop" data-rel="popup">bottom</a> }</div>
			<div class="samp"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">GetType</a>() → <b>string:</b> “MediaPlayer”</div>
			<div class="samp"><a href="#pop_dsc_005" data-transition="pop" data-rel="popup">IsLooping</a>()</div>
			<div class="samp"><a href="#pop_dsc_006" data-transition="pop" data-rel="popup">IsPlaying</a>()</div>
			<div class="samp"><a href="#pop_dsc_007" data-transition="pop" data-rel="popup">IsReady</a>()</div>
			<div class="samp"><a href="#pop_dsc_008" data-transition="pop" data-rel="popup">Method</a>( <a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>, <a href="#pop_str_002" data-transition="pop" data-rel="popup">types</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )</div>
			<div class="samp"><a href="#pop_dsc_009" data-transition="pop" data-rel="popup">Pause</a>()</div>
			<div class="samp"><a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">Play</a>( <a href="#pop_num_sec" data-transition="pop" data-rel="popup">from</a> )</div>
			<div class="samp"><a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">SeekTo</a>( <a href="#pop_num_flt" data-transition="pop" data-rel="popup">time</a> )</div>
			<div class="samp"><a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">SetFile</a>( <a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a> )</div>
			<div class="samp"><a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">SetLooping</a>( <a href="#pop_std_bin" data-transition="pop" data-rel="popup">loop</a> )</div>
			<div class="samp"><a href="#pop_dsc_00e" data-transition="pop" data-rel="popup">SetOnComplete</a>( <a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )</div>
			<div class="samp"><a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">SetOnReady</a>( <a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )</div>
			<div class="samp"><a href="#pop_dsc_010" data-transition="pop" data-rel="popup">SetOnSeekDone</a>( <a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )</div>
			<div class="samp"><a href="#pop_dsc_011" data-transition="pop" data-rel="popup">SetVolume</a>( <a href="#pop_num_prc" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prc" data-transition="pop" data-rel="popup">right</a> )</div>
			<div class="samp"><a href="#pop_dsc_012" data-transition="pop" data-rel="popup">Stop</a>()</div>

			<br>
		</div>

		<div data-role="popup" id="pop_dsc_001" class="ui-content"></div>
		<div data-role="popup" id="pop_dsc_002" class="ui-content"></div>
		<div data-role="popup" id="pop_std_num" class="ui-content"><b>number</b></div>
		<div data-role="popup" id="pop_str_001" class="ui-content"><b>string:</b> “screen”, “px”</div>
		<div data-role="popup" id="pop_dsc_003" class="ui-content">Returns data about the position and size of the control.<br>If the <b>screen</b> option is given the position on the screen will be returned. Otherwise relative to the parent control.<br>The <b>px</b> options turns the relative values into pixels.</div>
		<div data-role="popup" id="pop_dsc_004" class="ui-content">Returns the control class name.</div>
		<div data-role="popup" id="pop_dsc_005" class="ui-content"></div>
		<div data-role="popup" id="pop_dsc_006" class="ui-content"></div>
		<div data-role="popup" id="pop_dsc_007" class="ui-content"></div>
		<div data-role="popup" id="pop_std_str" class="ui-content"><b>string</b></div>
		<div data-role="popup" id="pop_str_002" class="ui-content"><b>string:</b> <i>comma “,” separated</i> “boolean”, “char”, “byte”, “short”, “int”, “long”, “float”, “double”</div>
		<div data-role="popup" id="pop_dsc_008" class="ui-content">Allows access to other functions defined on the object in Java via reflection.</div>
		<div data-role="popup" id="pop_dsc_009" class="ui-content"></div>
		<div data-role="popup" id="pop_num_sec" class="ui-content"><b>number:</b> <i>seconds</i></div>
		<div data-role="popup" id="pop_dsc_00a" class="ui-content">Play given time in in seconds</div>
		<div data-role="popup" id="pop_num_flt" class="ui-content"><b>number:</b> <i>float</i></div>
		<div data-role="popup" id="pop_dsc_00b" class="ui-content">SeekTo given time in seconds</div>
		<div data-role="popup" id="pop_str_pth" class="ui-content"><b>string:</b> <i>path to file or folder ( "/absolute/..." or "relative/..." )</i></div>
		<div data-role="popup" id="pop_dsc_00c" class="ui-content">SetFile</div>
		<div data-role="popup" id="pop_std_bin" class="ui-content"><b>boolean</b></div>
		<div data-role="popup" id="pop_dsc_00d" class="ui-content">SetLooping mode</div>
		<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>()</div>
		<div data-role="popup" id="pop_dsc_00e" class="ui-content">called when</div>
		<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>()</div>
		<div data-role="popup" id="pop_dsc_00f" class="ui-content">called when playing file finished</div>
		<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>()</div>
		<div data-role="popup" id="pop_dsc_010" class="ui-content">?</div>
		<div data-role="popup" id="pop_num_prc" class="ui-content"><b>number:</b> <i>percent</i></div>
		<div data-role="popup" id="pop_dsc_011" class="ui-content">SetVolume</div>
		<div data-role="popup" id="pop_dsc_012" class="ui-content"></div>

	</div>
</body>

</html>
