
<!DOCTYPE html>
<html>

<head>
	<title>CreateYesNoDialog</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-default.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/default.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-default.min.css"/>

	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateYesNoDialog</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="setTheme(getTheme() == 'default' ? 'dark' : 'default')"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">
		<p>The YesNo dialog can be used to let the user confirm a specific action.</p>

		<div class="samp">
		ynd = app.CreateYesNoDialog(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">message</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>app object:</b> YesNoDialog
		</div>

		<p>Its the equivalent to the js confirm function, but it is customizable.</p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				   ynd <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateYesNoDialog</span><span class="token punctuation">(</span> <span class="token string">"Choose an answer"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				   ynd<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> Ynd_OnTouch <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				   ynd<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">Ynd_OnTouch</span><span class="token punctuation">(</span> <span class="token parameter">result</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">Alert</span><span class="token punctuation">(</span> result<span class="token punctuation">,</span> <span class="token string">"Result"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<p>The following methods are available on the <b>YesNoDialog</b> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup" class="baseFunc">AdjustColor</a>(
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">hue</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">saturation</a>,
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">brightness</a>,
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">contrast</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">Dismiss</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">GetType</a>() → <b>string:</b> <docstr>“YesNoDialog”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup" class="baseFunc">Hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup" class="premHint">Method</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">types</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )
			→ <b>all types</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">SetBackColor</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup" class="baseFunc">SetBackground</a>(
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a>,
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">SetButtonText</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">yes</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">no</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">SetOnTouch</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup" class="baseFunc">SetSize</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup" class="baseFunc">Show</a>()
		</div>
	<br>
	</div>

	<div data-role="popup" id="pop_std_str" class="ui-content"><b>string</b></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>string:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“NoDim”</docstr>, <docstr>“NoFocus”</docstr>, <docstr>“TouchModal”</docstr></div>

	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>ynd.AdjustColor</b><br>Adjust the visual color effect of the control by setting the Hue (by angle in degrees in a color circle), the saturation, brightness and contrast of the control.</div>
	<div data-role="popup" id="pop_num_001" class="ui-content"><b>number:</b> -180..180</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>number:</b> -100..100</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>number:</b> -100..100</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>number:</b> 0..100</div>

	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>ynd.Dismiss</b><br>Hide the control and remove it from the screen.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>ynd.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>ynd.Hide</b><br>Hide the control but keep the layout space free.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>ynd.Method</b><br>Allows access to other functions defined on the object in Java via reflection.<br><br><div class='premHint'><b>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</b></div></div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>list:</b> boolean,char,byte,short,int,long,float,double,String,CharSequence,...</div>

	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>ynd.SetBackColor</b><br>Changes the background color of the control.</div>
	<div data-role="popup" id="pop_str_col" class="ui-content"><b>string:</b> <i><br>  hexadecimal: <docstr>“#rrggbb”</docstr>, <docstr>“#aarrggbb”</docstr><br>  colourName: <docstr>“red”</docstr>, <docstr>“green”</docstr>, ...</i></div>

	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>ynd.SetBackground</b><br>Changes the background to an image which can be repeated using the <b>repeat</b> option.<br>An image which is often used with that option is '/res/drawable/pattern_carbon' - try it out!</div>
	<div data-role="popup" id="pop_str_pth" class="ui-content"><b>string:</b> <i>path to file or folder ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>string:</b> <docstr>“repeat”</docstr></div>

	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>ynd.SetButtonText</b><br>Changes the texts of the two Yes/No buttons.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>ynd.SetOnTouch</b><br>Define a callback function which is called when the user touches one of the buttons, passing either <docstr>“Yes”</docstr> or <docstr>“No”</docstr> to the callback function</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('string: “Yes” or “No”')">result</a>
	)</div>

	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>ynd.SetSize</b><br>Change the size of the control in either screen relative values or in pixels if the <b>px</b> option was given.</div>
	<div data-role="popup" id="pop_std_num" class="ui-content"><b>number</b></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>string:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“dp”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>

	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>ynd.Show</b><br>Set the visibility of the control to <docstr>“Show”</docstr>.</div>
</div>
</body>

</html>
