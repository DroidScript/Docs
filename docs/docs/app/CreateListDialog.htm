
<!DOCTYPE html>
<html>

<head>
	<title>CreateListDialog</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-default.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-default.css"/>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
	<div data-role="page" data-theme="a">

		<div data-role="header" data-position="fixed">
			<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
			<h1>CreateListDialog</h1>
		</div>

		<div data-role="content">
			<p>If you want a quick way to let the user select one or even multiple items of a given dataset you can use the ListDialog.</p>

			<div class="samp">
			ldg = app.CreateListDialog( <a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">list</a>, <a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> ) → <b>app object:</b> ListDialog
			</div>

			<p>Use the <b>SetOnTouch</b> method of the ListDialog object to set the name of a function you want to be called every times a list item is selected. The selected item is passed that function as parameter.</p>
			
			<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
				<h3>Example - Basic</h3>
				<div id="examp0" style="font-size:70%">
					function OnStart()<br>
				{<br>
				<b id = "snip0"  style = "font-size:100%">&#160;&#160;&#160;&#160;dlg = app.CreateListDialog( &quot;Choices&quot;, &quot;Add,Remove,Delete&quot; );<br>
				&#160;&#160;&#160;&#160;dlg.SetOnTouch( dlg_OnTouch );<br>
				&#160;&#160;&#160;&#160;dlg.Show();<br>
				</b>}<br>
				<br>
				function dlg_OnTouch( item )<br>
				{<br>
				&#160;&#160;&#160;&#160;app.ShowPopup( item );<br>
				}
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip0 )">&#160;&#160;&#160;&#160;Copy&#160;&#160;&#160;&#160;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp0 )">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp0 )">&#160;&#160;&#160;&#160;&#160;&#160;Run&#160;&#160;&#160;&#160;&#160;&#160;</a>
				</div>
			</div>

			<p>ou can use the <i>“Multi”</i> <b>option</b> to create a ListDialog with check boxes against each item. This allows multiple list items to be selected. An extra parameter isChecked is passed to the OnTouch callback function when a check box is checked or unchecked.<Example Multi></p>
			<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
				<h3>Example - Multi</h3>
				<div id="examp1" style="font-size:70%">
					function OnStart()<br>
				{<br>
				<b id = "snip1"  style = "font-size:100%">&#160;&#160;&#160;&#160;dlg = app.CreateListDialog( &quot;Days&quot;, &quot;Mon,Tues,Wed,Thurs,Fri,Sat,Sun&quot;, &quot;Multi&quot; );<br>
				&#160;&#160;&#160;&#160;dlg.SetOnTouch( dlg_OnTouch );<br>
				&#160;&#160;&#160;&#160;dlg.Show();<br>
				</b>}<br>
				<br>
				function dlg_OnTouch( item, isChecked )<br>
				{<br>
				&#160;&#160;&#160;&#160;app.ShowPopup( item + &quot; isChecked = &quot; + isChecked );<br>
				}
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip1 )">&#160;&#160;&#160;&#160;Copy&#160;&#160;&#160;&#160;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">&#160;&#160;&#160;&#160;&#160;&#160;Run&#160;&#160;&#160;&#160;&#160;&#160;</a>
				</div>
			</div>

			
			<p><br>The following methods are available on the <b>ListDialog</b> object:</p>

			<div class="samp"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">AdjustColor</a>( <a href="#pop_num_001" data-transition="pop" data-rel="popup">hue</a>, <a href="#pop_num_002" data-transition="pop" data-rel="popup">saturation</a>, <a href="#pop_num_003" data-transition="pop" data-rel="popup">brightness</a>, <a href="#pop_num_004" data-transition="pop" data-rel="popup">contrast</a> )</div>
			<div class="samp"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup">Dismiss</a>()</div>
			<div class="samp"><a href="#pop_dsc_003" data-transition="pop" data-rel="popup">GetType</a>() → <b>string:</b> “ListDialog”</div>
			<div class="samp"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">Hide</a>()</div>
			<div class="samp"><a href="#pop_dsc_005" data-transition="pop" data-rel="popup">Method</a>( <a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>, <a href="#pop_str_002" data-transition="pop" data-rel="popup">types</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>, <a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )</div>
			<div class="samp"><a href="#pop_dsc_006" data-transition="pop" data-rel="popup">SetBackColor</a>( <a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )</div>
			<div class="samp"><a href="#pop_dsc_007" data-transition="pop" data-rel="popup">SetBackground</a>( <a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a>, <a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )</div>
			<div class="samp"><a href="#pop_dsc_008" data-transition="pop" data-rel="popup">SetOnTouch</a>( <a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )</div>
			<div class="samp"><a href="#pop_dsc_009" data-transition="pop" data-rel="popup">SetSize</a>( <a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>, <a href="#pop_str_004" data-transition="pop" data-rel="popup">options</a> )</div>
			<div class="samp"><a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">SetTextColor</a>( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colour</a> )</div>
			<div class="samp"><a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">SetTitle</a>( <a href="#pop_std_str" data-transition="pop" data-rel="popup">title</a> )</div>
			<div class="samp"><a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">Show</a>()</div>

			<br>
		</div>

		<div data-role="popup" id="pop_std_str" class="ui-content"><b>string</b></div>
		<div data-role="popup" id="pop_str_001" class="ui-content"><b>string:</b> <i>comma “,” separated:</i> “Multi” or “?”</div>
		<div data-role="popup" id="pop_num_001" class="ui-content"><b>number:</b> -180..180</div>
		<div data-role="popup" id="pop_num_002" class="ui-content"><b>number:</b> -100..100</div>
		<div data-role="popup" id="pop_num_003" class="ui-content"><b>number:</b> 100..100</div>
		<div data-role="popup" id="pop_num_004" class="ui-content"><b>number:</b> 0..100</div>
		<div data-role="popup" id="pop_dsc_001" class="ui-content">Adjust the visual color effect of the control by setting the Hue (by angle in degrees in a color circle), the saturation, brightness and contrast of the control.</div>
		<div data-role="popup" id="pop_dsc_002" class="ui-content">hide dialog</div>
		<div data-role="popup" id="pop_dsc_003" class="ui-content">Returns the control class name.</div>
		<div data-role="popup" id="pop_dsc_004" class="ui-content">Hide the control but keep the layout space free.</div>
		<div data-role="popup" id="pop_str_002" class="ui-content"><b>string:</b> <i>comma “,” separated:</i> “boolean”, “char”, “byte”, “short”, “int”, “long”, “float”, “double”</div>
		<div data-role="popup" id="pop_dsc_005" class="ui-content">Allows access to other functions defined on the object in Java via reflection.</div>
		<div data-role="popup" id="pop_str_col" class="ui-content"><b>string:</b> <i><br>&nbsp;&nbsp;hexadecimal: "#rrggbb", "#aarrggbb"<br>&nbsp;&nbsp;colourName: "red", "green", ...</i></div>
		<div data-role="popup" id="pop_dsc_006" class="ui-content">Changes the background color of the control.</div>
		<div data-role="popup" id="pop_str_pth" class="ui-content"><b>string:</b> <i>path to file or folder ( "/absolute/..." or "relative/..." )</i></div>
		<div data-role="popup" id="pop_str_003" class="ui-content"><b>string:</b> “repeat”</div>
		<div data-role="popup" id="pop_dsc_007" class="ui-content">Changes the background to an image which can be repeated using the <b>repeat</b> option.<br>An image which is often used with that option is '/res/drawable/pattern_carbon' - try it out!</div>
		<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(<a href="" onclick="prompt( '#', 'App.ShowPopup( string' )">title</a>, <a href="" onclick="prompt( '#', 'App.ShowPopup( boolean' )">checked</a>)</div>
		<div data-role="popup" id="pop_dsc_008" class="ui-content">Define a callback function that is called when the user touches a list item.</div>
		<div data-role="popup" id="pop_std_num" class="ui-content"><b>number</b></div>
		<div data-role="popup" id="pop_str_004" class="ui-content"><b>string:</b> “px” or “sp” or “dip” or “dp” or “mm” or “pt”</div>
		<div data-role="popup" id="pop_dsc_009" class="ui-content">Change the size of the control in either screen relative values or in pixels if the <b>px</b> option was given.</div>
		<div data-role="popup" id="pop_dsc_00a" class="ui-content">Change the TextColor of the contained text.</div>
		<div data-role="popup" id="pop_dsc_00b" class="ui-content">change dialog title</div>
		<div data-role="popup" id="pop_dsc_00c" class="ui-content">Set the visibility of the control to “Show”.</div>

	</div>
</body>

</html>
