
<!DOCTYPE html>
<html>

<head>
	<title>CreateSysProc</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-default.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/default.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-default.min.css"/>

	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateSysProc</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="setTheme(getTheme() == 'default' ? 'dark' : 'default')"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">
		<p>Creates a SystemProcedure of a command shell (ie. <docstr>“sh”</docstr>, <docstr>“su”</docstr> if <red>root</red> or <docstr>“busybox”</docstr> if <blue>installed</blue>) which can be reused throughout the program.</p>

		<div class="samp">
		sys = app.CreateSysProc(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">cmd</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">env</a>,
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">dir</a>,
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">options</a> )
			→ <b>app object:</b> SysProc
		</div>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"linear"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    txt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateText</span><span class="token punctuation">(</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Log,Monospace,autoscale"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> txt <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    sys <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateSysProc</span><span class="token punctuation">(</span> <span class="token string">"sh"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    sys<span class="token punctuation">.</span><span class="token function">Out</span><span class="token punctuation">(</span> <span class="token string">"netstat\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    sys<span class="token punctuation">.</span><span class="token function">SetOnInput</span><span class="token punctuation">(</span> sys_OnInput <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    sys<span class="token punctuation">.</span><span class="token function">SetOnError</span><span class="token punctuation">(</span> sys_OnError <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    sys<span class="token punctuation">.</span><span class="token function">Out</span><span class="token punctuation">(</span> <span class="token string">"netstoat\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">sys_OnInput</span><span class="token punctuation">(</span> <span class="token parameter">msg</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span> msg <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">sys_OnError</span><span class="token punctuation">(</span> <span class="token parameter">msg</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span> msg <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Colored</h3>
			<div id="examp2" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"linear"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    scr <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateScroller</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"horizontal"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> scr <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    txt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateText</span><span class="token punctuation">(</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"monospace,log"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">SetTextSize</span><span class="token punctuation">(</span> <span class="token number">8</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">SetLog</span><span class="token punctuation">(</span> <span class="token number">1000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    scr<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> txt <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    sys <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateSysProc</span><span class="token punctuation">(</span> <span class="token string">"sh"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    sys<span class="token punctuation">.</span><span class="token function">SetOnInput</span><span class="token punctuation">(</span> sys_OnInput <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    sys<span class="token punctuation">.</span><span class="token function">SetOnError</span><span class="token punctuation">(</span> sys_OnError <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token function">Exec</span><span class="token punctuation">(</span> <span class="token string">"netstat\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token comment">// filter files containing 'D' in /sdcard/ and forward to stderr</span><br>
				    <span class="token function">Exec</span><span class="token punctuation">(</span> <span class="token string">"ls -al /sdcard/ | grep D >&amp;2\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">Exec</span><span class="token punctuation">(</span> <span class="token parameter">cmd</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    sys<span class="token punctuation">.</span><span class="token function">Out</span><span class="token punctuation">(</span> cmd <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span> cmd<span class="token punctuation">,</span> <span class="token string">"green"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    scr<span class="token punctuation">.</span><span class="token function">ScrollTo</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> txt<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">sys_OnInput</span><span class="token punctuation">(</span> <span class="token parameter">msg</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span> msg <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    scr<span class="token punctuation">.</span><span class="token function">ScrollTo</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> txt<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">sys_OnError</span><span class="token punctuation">(</span> <span class="token parameter">msg</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span> msg<span class="token punctuation">,</span> <span class="token string">"red"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    scr<span class="token punctuation">.</span><span class="token function">ScrollTo</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> txt<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>


		<p>The following methods are available on the <b>SysProc</b> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">Err</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">maxLines</a>,
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">GetType</a>() → <b>string:</b> <docstr>“SysProc”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">In</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">maxLines</a>,
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup" class="premHint">Method</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">types</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )
			→ <b>all types</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">Out</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">command</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup">ReadFileAsByte</a>(
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a> )
			→ <b>number:</b> <i>Bytes</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">SetOnError</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">SetOnInput</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">WriteToFile</a>(
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">data</a> )
		</div>
	<br>
	</div>

	<div data-role="popup" id="pop_str_001" class="ui-content"><b>string:</b> <i>program name:</i> <docstr>“sh”</docstr> or <docstr>“su”</docstr> or <docstr>“busybox”</docstr></div>
	<div data-role="popup" id="pop_std_str" class="ui-content"><b>string</b></div>
	<div data-role="popup" id="pop_str_pth" class="ui-content"><b>string:</b> <i>path to file or folder ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>string:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“<a href="" onclick="app.ShowPopup('combines stdout and stderr')">combine</a>”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('force use of proc builder')">builder</a>”</docstr></div>

	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>sys.Err</b><br>Read data from stderr</div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>string:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“<a href="" onclick="app.ShowPopup('dont wait for input')">nowait</a>”</docstr></div>

	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>sys.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>sys.In</b><br>Read data from stdin</div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>string:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“<a href="" onclick="app.ShowPopup('dont wait for input')">nowait</a>”</docstr></div>

	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>sys.Method</b><br>Allows access to other functions defined on the object in Java via reflection.<br><br><div class='premHint'><b>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</b></div></div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>list:</b> boolean,char,byte,short,int,long,float,double,String,CharSequence,...</div>

	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>sys.Out</b><br>Writes a command to stdout. A trailing linebreak will execute it.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>sys.ReadFileAsByte</b><br>Returns the first byte of a file.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>sys.SetOnError</b><br>Define a callback function which is called when something was written to stderr</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('string')">data</a>
	)</div>

	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>sys.SetOnInput</b><br>Define a callback function which is called when something was written to stdout</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('string')">data</a>
	)</div>

	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>sys.WriteToFile</b><br>Write a binary string to a file.</div>
</div>
</body>

</html>
