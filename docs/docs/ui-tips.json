{
	"ui": {
		"addAccordion": "Adds an accordion or expansion panel into your app",
		"addAppBar": "Adds an appbar to your app",
		"addBottomNavbar": "The Bottom Navigation Bar (BottomNavBar) is a key element in mobile user interface design, typically placed at the bottom of the screen",
		"addBottomSheet": "The BottomSheet in Material Design is a UI component anchored at the screen bottom",
		"addButton": "A button component in mobile UI development is an element that triggers an action when pressed",
		"addButtonGroup": "In mobile UI development, a button group refers to a collection of buttons presented together, often used for related actions",
		"addCameraView": "Adds a camera view into your app to take pictures and record videos",
		"addCard": "They are surfaces in material design that display content and actions on a single topic",
		"addCheckbox": "A checkbox in UI development is a graphical control element that allows users to toggle between two states, typically checked or unchecked, to indicate a choice or selection",
		"addCheckboxGroup": "A checkbox group in UI development is a collection of checkboxes grouped together for related selections or options",
		"addChip": "In mobile UI design, a Chip is a compact element displaying attributes, input, or actions",
		"addDialog": "A Dialog in mobile UI design is a pop-up window that appears on top of the current screen to prompt the user for input or to convey information",
		"addDivider": "A divider is a visual element used to separate content or components within a layout",
		"addDrawer": "A drawer is a navigation panel that slides in from the edge of the screen, typically from the left, to reveal additional options or content",
		"addDropdown": "A dropdown, also known as a spinner or picker, is a user interface element that presents a list of options in a drop-down menu",
		"addFloatingActionButton": "A Floating Action Button (FAB) is a prominent, circular button that hovers above the content, typically used for a primary action in an application",
		"addImage": "Adds an image into your layout",
		"addLayout": "Adds a layout into your app",
		"addList": "Lists are continuous, vertical indexes of text or images",
		"addMenu": "A menu is a list of options or actions presented to the user as a popup",
		"addProgress": "A progress refers to the visual indication of a task's completion status",
		"addRadioGroup": "Adds a radiogroup component into your app",
		"addSelect": "Adds a Select Component to a given layout",
		"addSlider": "A Slider in mobile UI design is a user interface element that allows users to select a value from a range by dragging a thumb along a track",
		"addStepper": "A Stepper in mobile UI design is a navigation element that guides users through a multi-step process, typically used for forms or sequential tasks",
		"addSwitch": "A Switch in mobile UI design is a toggle control that allows users to turn a setting on or off",
		"addSwitchGroup": "In UI development, a SwitchGroup refers to a collection or grouping of individual switches",
		"addTabs": "Tabs in user interfaces facilitate seamless navigation between app sections",
		"addText": "In mobile UI design, it refers to the style, arrangement, and appearance of text",
		"addTextField": "A TextField in mobile UI design is an input field where users can enter text or numeric data",
		"addTreeView": "A TreeView is a hierarchical representation of data, often used to display nested categories or organized information.*\n<js>var items = {\n    \"Group 1\": {\n        \"Item 1\": \"\",\n        \"Item 2\": \"\",\n        \"Item 3\": \"\"\n    },\n    \"Group 2\": {\n        \"Item 1\": \"\",\n        \"Item 2\": \"\",\n        \"Item 3\": \"\"\n    },\n    \"Applications\": {\n        \"Editor\": \"\",\n        \"Productivity\": \"\",\n        \"Social Media\": {\n            \"TikTok\": \"\",\n            \"YouTube\": \"\",\n            \"Meta\": {\n                \"Facebook\": \"\",\n                \"Instagram\": \"\",\n                \"Whatsapp\": \"\",\n                \"Messenger\": \"\"\n            }\n        }\n    }\n}</js>\n \n\n```var items = {\"Group 1\": {\"Item 1\": \"\",\"Item 2\": \"\",\"Item 3\": \"\"},\"Group 2\": {\"Item 1\": \"\",\"Item 2\": \"\",\"Item 3\": \"\"},\"Applications\": {\"Editor\": \"\",\"Productivity\": \"\",\"Social Media\": {\"TikTok\": \"\",\"YouTube\": \"\",\"Meta\": {\"Facebook\": \"\",\"Instagram\": \"\",\"Whatsapp\": \"\",\"Messenger\": \"\"}}}}```\n\n\nThe properties of the list object will be the name of the item or the group",
		"addVideoView": "Adds a video view into your app layout",
		"addWebView": "A WebView in mobile development is a component that allows embedding web content within an application",
		"showActionSheet": "An Action Sheet is a list dialog implementation of bottom sheet displaying contextual actions or options, used to streamline user interactions in mobile apps",
		"showColorPicker": "Shows a color picker",
		"showDatePicker": "A DatePicker in mobile UIs enables users to select dates using a visual calendar interface",
		"showDateTimePicker": "A DateTimePicker in mobile UI design combines date and time selection in one interface",
		"showPopover": "Popover is very useful on showing additional info or displaying instructions especially when the control is click or hovered",
		"showPopup": "\"Popup\" is like a short notification that quickly appears on the screen, providing extra options or information in a concise and unobtrusive manner",
		"showProgressDialog": "A ProgressDialog is a pop-up dialog that indicates the progress of a task, often accompanied by a loading spinner or bar",
		"showTimePicker": "A Time Picker in mobile UI design allows users to select a specific time"
	},
	"acc": {
		"titleWidth": "Sets and returns the width of the title as fraction",
		"expandIcon": "Sets or returns the material icon font for the expand icon",
		"titles": "Sets or returns the list of titles for the accordion panel",
		"toggle": "Collapse or shrink a corresponding accordion by its index",
		"textColor1": "Sets or returns the title text color in hexadecimal format `#rrggbb`",
		"textColor2": "Sets or returns the secondary text color in hexadecimal format `#rrggbb`",
		"disabled": "Sets or returns the `disabled` state of the control",
		"textSize1": "Sets or returns the accordion title text size",
		"textSize2": "Sets or returns the accordion secondary text size",
		"rounded": "Sets or returns whether the accordion is rounded or not",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"secondaryText": "Sets or returns the secondary text of the accordion items",
		"itemPadding": "Sets or returns the padding of each accordion item",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the top and bottom accordion panels",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"getLayout": "Get the layout of the corresponding accordion item",
		"setTitleText": "Update the accordion title by passing its corresponding index",
		"setSecondaryText": "Adds a secondary text on the accordion",
		"setExpandIcon": "Sets the expand icon at the right of the accordion",
		"addItem": "Adds an item to the accordion",
		"removeItemByIndex": "Removes accordion item by its index",
		"removeItemByName": "Removes accordion item by its title name",
		"shiftItem": "Removes the first accordion item",
		"popItem": "Removes the last accordion item",
		"setEnabled": "Enable or disable the accordion component or an item in the accordion component",
		"getEnabled": "Get the enabled state of an accordion item by its index",
		"setEnabledByName": "Enable or disable an accordion item by its name",
		"getEnabledByName": "Get the enabled state of an accordion item by its name",
		"getLayoutIndex": "Get the index of the corresponding layout",
		"setOnTouch": "Sets a callback function when the accordion is touch",
		"setTextColor": "Sets the color of the title and the secondary text respectively",
		"setItemPadding": "Sets the padding of the accordion item"
	},
	"apb": {
		"text": "Sets or return the AppBar title `text`",
		"color": "Sets or returns the theme color of the AppBar",
		"textColor": "Sets or returns the color of the text",
		"textVariant": "Sets or returns the variant of the title text",
		"textSize": "Sets or returns the size of the text within the control",
		"icon": "Sets or returns the icon of the menu button",
		"layout": "Returns the right layout of the appbar where you can add controls",
		"menu": "Sets or returns whether the appbar has menu button",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the appbar",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when the component is touch",
		"setOnMenu": "Sets a function to be called when the user clicks the menu",
		"addLayout": "Adds a layout for additional controls at the right of the appbar"
	},
	"bmn": {
		"labels": "Sets or returns a boolean whether the labels are shown or hidden on active state",
		"list": "Sets or returns the navigation actions array",
		"disabled": "Sets or returns the `disabled` state of the control",
		"value": "Sets or returns the current value of the BottomNavbar",
		"iconSize": "Sets or returns the icon font-size",
		"iconColor": "Sets or returns the icon color",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when the BottomNavbar item is touch",
		"setList": "Sets the navigation actions list",
		"getList": "Returns the navigation actions list",
		"selectItem": "Sets navigation action to active by its name",
		"selectItemByIndex": "Sets a botttom navigation action to active by its index",
		"clearSelection": "Clears the selected navigation action",
		"setItemByIndex": "Updates a navigation action by its index",
		"setIcon": "Updates the icon of the given index",
		"addItem": "Adds a navigation action",
		"removeItemByIndex": "Removes a navigation action by its given index",
		"removeItemByName": "Removes a navigation action by its given name",
		"shiftItem": "Removes the first navigation action",
		"popItem": "Removes the last navigation action",
		"setOnChange": "Sets a callback function to execute when bottom navbar value changes",
		"setEnabled": "Enable or disable a bottom navigation action",
		"getEnabled": "Get the enabled state of a navigation action",
		"setEnabledByName": "Enabled or disable a bottom navigation action by its name",
		"getEnabledByName": "Get the enabled state of the bottom navigation action by its name",
		"showLabels": "Shows the text label of the bottom navigation action",
		"hideLabels": "Hides the text label of the bottom navigation action"
	},
	"bts": {
		"layout": "Returns the layout of the bottomsheet",
		"leftActionIcon": "Sets or returns the left action icon",
		"rightActionIcon": "Sets or returns the right action icon",
		"title": "Sets or returns the bottomsheet title",
		"description": "Sets or returns the bottomsheet description",
		"show": "Show the bottom sheet",
		"hide": "Hide the bottom sheet",
		"setOnAction": "Add a callback handler when the left and right action is click when they are provided",
		"setOnOpen": "Add a callback handler on `open` event",
		"setOnClose": "Add a callback handler on `close` event"
	},
	"btn": {
		"text": "Sets or returns the button text",
		"badge": "Sets or returns the badge content",
		"badgeColor": "Sets or returns the color of the badge",
		"toolTip": "Sets or returns the tooltip text",
		"toolTipPosition": "Sets or returns the tooltip position",
		"variant": "Sets or returns the variant of the button",
		"color": "Sets or returns the theme color of the button",
		"textColor": "Sets or returns the color of the text",
		"sizeVariant": "Sets or returns the size variant of the button",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"icon": "Sets or returns the material icon font use for the leading icon",
		"acceptedFiles": "Sets or returns the accepted files for an upload button",
		"active": "Sets or returns the active state if button is `toggleable`",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the button",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the button",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when the button is touch",
		"setOnLongTouch": "Adds a callback handler when the button is long touch",
		"setOnFileSelect": "Sets a callback on file select",
		"setToolTip": "Sets a tooltip when the button is hovered",
		"setTextShadow": "Sets a text-shadow to the button text"
	},
	"btg": {
		"list": "Sets or returns the list items of the button group",
		"variant": "Sets or returns the variant",
		"color": "Sets or returns the theme color of the button",
		"toolTips": "Sets or returns the list of tooltip titles",
		"toolTipPosition": "Sets or returns the position of the tooltip",
		"sizeVariant": "Sets or returns the size variant",
		"orientation": "Sets or returns the orientation of the button group",
		"textColor": "Sets or returns the color of the text",
		"textSize": "Sets or returns the size of the text within the control",
		"activeItems": "Sets or returns the indexes of the active button items",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when a button item is touch",
		"setItemByIndex": "Sets a new text for the item in the button group",
		"addItem": "Adds an additional item in the button group",
		"removeItemByIndex": "Removes an item in the button group by its index",
		"removeItemByName": "Removes an item in the button group by its name",
		"popItem": "Removes the last item of the button group",
		"shiftItem": "Removes the first item in the button group",
		"setToolTips": "Adds a tooltips to the ButtonGroup items",
		"enableElevation": "Enable of disable the elevation of the button group",
		"setEnabled": "Enable or disable a button item in the button group",
		"getEnabled": "Get the enabled state of the button item in the button group",
		"setEnabledByName": "Enable or disable a button item by its name",
		"getEnabledByName": "Get the enabled state of button item in the button group"
	},
	"rvw": {
		"imageHeight": "Sets or returns the image height in pixels",
		"width": "Sets or returns the image width in pixels",
		"capabilities": "Returns the capabilities of the camera",
		"frameRate": "Sets or returns the video frame rate",
		"focusMode": "Sets or returns the camera focus mode",
		"focusDistance": "Sets or returns the focus distance",
		"img": "Sets the preview image taken on capture",
		"sound": "Sets or returns a boolean value whether the sound is enabled or disabled",
		"source": "The camera source to be use",
		"iso": "Sets or returns the camera iso",
		"getPixelData": "Returns the pixel data of the image preview or a given portion of it",
		"capture": "Capture an image",
		"record": "Record a video",
		"setPictureSize": "Sets the size of the image",
		"startPreview": "Start streaming the camera",
		"updatePreview": "Update the camera preview",
		"stop": "Stop recording a video",
		"setOnReady": "Add a callback handler when the camera is ready",
		"setOnError": "Add a callback handler when an error occured"
	},
	"crd": {
		"headerTitle": "Sets or returns the card header title",
		"headerSubtitle": "Sets or returns the card header subheader or subtitle",
		"headerAvatar": "Sets or returns the card header avatar",
		"headerAction": "Sets or returns the card header action",
		"headerAvatarColor": "Sets or returns the card header avatar color in css supported color format",
		"media": "Sets or returns the card media",
		"bodyTitle": "Sets or returns the title of the card content",
		"bodyText": "Sets or returns the text of the card content",
		"actions": "Sets or returns the list of card actions",
		"layout": "Returns the div element of the card content",
		"actionType": "Sets or returns the type of actions in the card",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"elevation": "Sets or returns the elevation of the card",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"addHeaderItems": "Add header items to the card",
		"addBodyItems": "Add card body items",
		"setOnAction": "Add a callback function to be called when a card action is click",
		"setOnHeaderAction": "Add a callback function to be called when the header action icon is click"
	},
	"ckb": {
		"list": "Sets or returns the list items",
		"label": "Sets or returns the label text",
		"checkIcon": "Sets or returns the material icon font for check stated",
		"uncheckIcon": "Sets or returns the material icon font for uncheck state",
		"sizeVariant": "Sets or returns the size variant of the Checkbox",
		"textColor": "Sets or returns the color of the text",
		"elevation": "Sets or returns the depth of the container",
		"iconColor": "Sets or returns the color of the checkbox icon",
		"textSize": "Sets or returns the size of the text within the control",
		"iconSize": "Sets or returns the size of the checkbox icon",
		"spaceBetween": "Sets or returns the space between the checkbox icon and the text",
		"color": "Sets or returns the theme color use for the checkbox",
		"outlined": "Sets or returns whether the container is outlined or elevated",
		"itemPadding": "Sets or returns the padding of each list item",
		"orientation": "Sets or returns the orientation of the list",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the checkbox group",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Sets a callback function when the checkbox item is touch",
		"setOnChange": "Adds a callback function to be called whent there is a change of value",
		"setIcon": "Sets the checked icon and unchecked icon",
		"getIcon": "Get the checked and unchecked icon of the checkbox group",
		"setCheckedByIndex": "Checked or unchecked a given item by its index",
		"setCheckedByName": "Checked or unchecked a given item by its name",
		"getCheckedItems": "Get the list of all checked items",
		"getCheckedByIndex": "Get the current value of the item in the list",
		"getCheckedByName": "Get the current value of the item in the list",
		"setTextByIndex": "Sets a new text to a given item by its index",
		"setTextByName": "Sets a new text to a given item by its name",
		"getText": "Get the text of the item in a given index",
		"setList": "Sets a new list of item in the checkbox group",
		"setEnabled": "Enable or disable an item in the checkbox group",
		"getEnabled": "Get the enabled state of a checkbox item",
		"setEnabledByName": "Enable or disable a checkbox item by its name",
		"getEnabledByName": "Get the enabled state of a checkbox item by its name",
		"addItem": "Add or insert an item in the checkbox group",
		"removeItemByIndex": "Removes an item in the checkbox group by its corresponding index",
		"removeItemByName": "Removes an item in the checkbox group by its title name",
		"popItem": "Removes the last item in the checkbox group",
		"shiftItem": "Removes the first item in the checkbox group",
		"setItemPadding": "Sets the padding of the checkbox item"
	},
	"chp": {
		"text": "Sets or returns the text of the chip",
		"icon": "Sets or returns the material icon font if icon is provided",
		"avatar": "Sets or returns the avatar",
		"deleteIcon": "Sets or returns the delete icon",
		"sizeVariant": "Sets or returns the size variant",
		"enabled": "Returns whether the chip is enabled or disabled",
		"variant": "Sets or returns the variant of the chip",
		"color": "Sets or returns the theme color of the chip",
		"iconColor": "Sets or returns the icon color in hexadecimal format",
		"iconSize": "Sets or returns the font-size of the icon in css font-size format",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the chip",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when the chip is touch",
		"setTouchable": "Sets the chip to clickable",
		"setOnDelete": "Sets a callback function when the chip is deleted"
	},
	"dlg": {
		"text": "Sets or returns the dialog text",
		"titleText": "Sets or returns the dialog title text",
		"titleColor": "Sets or returns the title text color in hexadecimal format",
		"layout": "Returns the layout of the dialog where you can add custom controls",
		"setOnAction": "Adds a callback function when the action buttons are click",
		"setOnClose": "Adds a callback function when the dialog is close",
		"show": "Show the dialog",
		"hide": "Hide the dialog"
	},
	"div": {
		"color": "Sets or returns the color in hexadecimal format",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index"
	},
	"drw": {
		"disabled": "Sets or returns the `disabled` state of the drawer",
		"width": "Sets or returns the width of the drawer as a fraction of the screen viewport relative to its anchor position `[0-1]`",
		"anchor": "Sets or returns the anchor position of the drawer",
		"swipeAreaWidth": "Sets or returns the width of the swipeable area of the Drawer",
		"addLayout": "Adds a layout into the drawer",
		"disableSwipeToOpen": "Disable swipe to open feature of the drawer",
		"disableBackdropTransition": "Disable the backdrop transition",
		"disableDiscovery": "If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit to promote accidental discovery of the swipe gesture",
		"setOnOpen": "Adds a callback function when the drawer is opened via swiping from the anchor position",
		"setOnClose": "Adds a callback function when the drawer is closed",
		"show": "Open the drawer dynamically",
		"hide": "Close the drawer dynamically"
	},
	"dpd": {
		"list": "Sets or returns the dropdown list",
		"value": "Sets or returns the value of the Dropdown",
		"variant": "Sets or returns the variant of the dropdown button",
		"sizeVariant": "Sets or returns the size variant of the dropdown button",
		"color": "Sets or returns the theme color",
		"orientation": "Sets or returns the orientation of the dropdown buttongroup",
		"label": "Sets or returns the default label of the dropdown",
		"icon": "Sets or returns the dropdown material icon font",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the dropdown",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when the component is touch",
		"setOnChange": "Adds a callback function on change event",
		"setOnOpen": "Adds a callback function on close event",
		"setOnClose": "Adds a callback function on close event",
		"setList": "Sets the list items on the dropdown",
		"setItemByIndex": "Updates the text of the corresponding item in the dropdown",
		"getItemByIndex": "Returns a dropdown item by its corresponding index",
		"setEnabled": "Enable or disable an item in the dropdown",
		"getEnabled": "Get the enabled state of an item in the dropdown menu",
		"setEnabledByName": "Enable or disable an item in the dropdown",
		"getEnabledByName": "Get the enabled state of a menu item by its name",
		"addItem": "Add or insert a menu item in the dropdown list",
		"removeItemByIndex": "Removes a menu item in the dropdown by its index",
		"removeItemByName": "Removes a menu item in the dropdown by its name",
		"shiftItem": "Removes the first item in the dropdown menu",
		"popItem": "Removes the last item in the dropdown menu"
	},
	"fab": {
		"icon": "Sets or returns the material icon font",
		"text": "Sets or returns the text for extended FAB",
		"color": "Sets or returns the theme color for the FAB",
		"variant": "Sets or returns the variant use for the FAB",
		"sizeVariant": "Sets or returns the size variant of the FAB",
		"iconSize": "Sets or returns the size of the icon",
		"disabledRipple": "Sets or returns the disabled state of the ripple effect",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the button",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when the FAB is touch"
	},
	"img": {
		"pixelData": "Returns the pixel data of the image",
		"fillColor": "Sets or returns the fill color used on close paths such as square, circle, rectangle or arcs",
		"image": "Sets or returns the path or url of the image file",
		"lineWidth": "Sets or returns the current line thickness",
		"lineCap": "Sets or returns the style of the end caps for a line",
		"lineJoin": "Sets or returns the type of corner created when two lines meet",
		"miterLimit": "Sets or returns the maximum miter length",
		"strokeColor": "Sets or returns the current color of the line or stroke",
		"fill": "Sets or returns the background color of the canvas",
		"textStyle": "Sets or returns the text-style for drawing in the canvas",
		"textSize": "Sets or returns the size of the text within the control",
		"errorIcon": "Sets or returns the material icon for error placeholder image",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"enableContextMenu": "Enable or disbale the context menu or the right click menus",
		"getPixelColor": "Get the color of a single pixel in the image",
		"setPixelColor": "Sets the color of a specific pixel in the canvas",
		"getPixelData": "Returns the pixel data of the image",
		"setPixelData": "Set the pixel data of the canvas",
		"setFont": "Sets a single line font styling for rendering text on canvas",
		"drawLine": "Draws a line between two points in the canvas",
		"drawCircle": "Draws a circle in the canvas",
		"drawSquare": "Draws a square into the canvas",
		"drawRectangle": "Draws a rectangle into the canvas",
		"drawArc": "Draws an arc in the canvas",
		"drawPolyline": "Draws a polyline on the canvas by passing an array of points",
		"drawPolygon": "Draws a polygon on the canvas by passing an array of points",
		"drawPoint": "Draws a single pixel point in a specified coordinate",
		"drawText": "Add a text in the canvas image",
		"drawImage": "Draws an image to the canvas",
		"clear": "Clears the drawings by filling the whole canvas with white background color",
		"translateOrigin": "Translate the origin of the canvas at a new coordinate with the given angle of rotation",
		"rotate": "Rotate the canvas at a given angle and pivot point",
		"measureText": "Measure the text metrics with the current settings of the canvas context",
		"setOnTouchDown": "Add a callback function on touch down event",
		"setOnTouchUp": "Add a callback function on touch up event",
		"setOnTouch": "Sets a callback function when the image component is touch",
		"setOnLoad": "Sets a callback function on load event",
		"setOnTouchMove": "Sets a callback function when the a mouse move event is triggered",
		"setOnLongTouch": "Adds a callback handler for a long touch event"
	},
	"lay": {
		"orientation": "Sets or returns the orientation of the controls in a Linear Layout",
		"alignment": "Sets or returns the horizontal alignment of the control in a Linear Layout",
		"verticalAlignment": "Sets or returns the vertical alignment of the controls in a Linear Layout",
		"childSpacing": "Sets or returns the spacing of the child control in a Linear Layout",
		"currentSlide": "Sets or returns the index of the current slide",
		"childMargins": "Sets or returns the margins of child components",
		"children": "Returns all the children added to this layout",
		"elevation": "Sets or returns the elevation of a card layout",
		"variant": "Sets or returns the card variant",
		"layoutType": "Sets or returns the layout type",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setChildMargins": "Sets a default margins for the children of the layout component",
		"goto": "Transition to the given index",
		"next": "Transition to the next slide",
		"previous": "Transition to the previous slide",
		"setOnSlide": "Adds a callback function to be called when slide event is triggered",
		"getChildOrder": "Returns the index of the child from the layout children stack in order",
		"childToFront": "Move the child to the front",
		"hasChild": "Check whether a component is a child of this layout",
		"removeChild": "Removes a given child from this layout",
		"setOnTouch": "Adds a callback handler when the layout is touch",
		"setOnLongTouch": "Adds a callback handler when the layout is long touch",
		"clear": "Clear the content of the layout"
	},
	"lst": {
		"avatarSize": "Sets or returns the size of the avatar",
		"avatarVariant": "Sets or returns the variant of the avatar",
		"checkboxColor": "Sets or returns the theme color of the checkbox when `Selectable` option is enabled",
		"label": "Sets or returns the label text",
		"selectable": "Sets or returns a boolean whether the list is selectable or not",
		"elevation": "Sets or returns the depth of the list container",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"textSize1": "Sets or returns the size of the title text",
		"textSize2": "Sets or returns the size of the body text",
		"iconSize": "Sets or returns the size of the icon text",
		"textColor1": "Sets or returns the color of the title text in hexadecimal format",
		"textColor2": "Sets or returns the color of the body text in hexadecimal format",
		"iconColor": "Sets or returns the icon color in a hexadecimal format",
		"outlined": "Sets or returns whether the container is outlined or elevated",
		"itemPadding": "Sets or returns the padding of each list item",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the list container",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"addItem": "Adds an item in the list",
		"setOnTouch": "Adds a callback function when the list item is click",
		"setOnLongTouch": "Adds a callback handler for a long touch event",
		"setOnSelect": "Sets a callback handler when an item in the list is selected",
		"setOnAction": "Sets a callback handler when an action icon is click",
		"getSelectedItems": "Returns an array of indexes of the selected items",
		"getSelectedTitles": "Returns an array of titles of selected items",
		"setList": "Updtes the list",
		"setSelectable": "Make the list selectable or not",
		"setItemByIndex": "Change the content of an item in a list",
		"getItemByIndex": "Get the item in a list by its corresponding index",
		"setItem": "Updates an item in the list",
		"getItem": "Get the item in the list by its corresponding title",
		"removeItemByIndex": "Removes an element from the list",
		"removeItemByName": "Removes an item in the list by its title",
		"shiftItem": "Removes the first item the list",
		"popItem": "Removes the last item in the list",
		"deselectAll": "Clears all selection in the list if the list is selectable",
		"selectItemByIndex": "Selects an item in the list by its index and marked the checkbox",
		"setTitleText": "Sets a new title text to a corresponding item in a list",
		"setBodyText": "Sets a new secondary text to a corresponding item in a list",
		"setIcon": "Updates an icon in a list by its corresponding index",
		"setItemPadding": "Sets the padding of the list item"
	},
	"men": {
		"list": "Sets or returns the items in the menu",
		"itemPadding": "Sets or returns the padding of each menu item",
		"setOnTouch": "Adds a callback handler when the menu is touch",
		"show": "Show the menu pop-up",
		"hide": "Hide the pop-up menu",
		"setList": "Updates the list items on the menu",
		"addItem": "Adds an item in the menu list",
		"removeItemByIndex": "Removes an item in the menu items list by its index",
		"removeItemByName": "Removes an item in the menu items list by its name",
		"popItem": "Removes the last item",
		"shiftItem": "Removes the first item",
		"setPosition": "Set the position of the menu from the left and top of the anchor component",
		"setAutoFocus": "Sets the autofocus value of the menu items",
		"setEnabled": "Enable or disable an item in the menu popup",
		"getEnabled": "Get the enabled state of an item the menu popup",
		"setEnabledByName": "Enable or disable an item in the menu popup by its name",
		"getEnabledByName": "Get the enabled state of an item in the menu popup",
		"setItemPadding": "Sets the padding of the menu item"
	},
	"prg": {
		"value": "Sets or returns the value of the progress control",
		"type": "Returns the type of the control",
		"variant": "Sets or returns the variant of the progress component",
		"color": "Sets or returns the theme color",
		"circleSize": "Sets or returns the size of the circular progress control",
		"thickness": "Sets or returns the thickness of the circular stroke",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index"
	},
	"rdg": {
		"value": "Sets or returns the value of the RadioGroup Component as an index of the selected item",
		"label": "Sets or returns the label text of the RadioGroup Component",
		"list": "Sets or returns the list array",
		"radioSize": "Sets or returns the size of the radio button",
		"color": "Sets or returns the theme color of the Radio Component",
		"elevation": "Sets or returns the depth of the RadioGroup container",
		"iconColor": "Sets or returns the icon color in hexadecimal format",
		"spaceBetween": "Sets or returns the space between the radio button and the text",
		"disabled": "Sets or returns the `disabled` state of the control",
		"iconPosition": "Sets or returns the position of the icon",
		"textPosition": "Sets or returns the position of the label text",
		"outlined": "Sets or returns whether the container is outlined or elevated",
		"textColor": "Sets or returns the color of the text",
		"itemPadding": "Sets or returns the padding of each radio item",
		"orientation": "Sets or returns the orientation of the list",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the radiogroup container",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnChange": "Call a function when the value of the radio group has changed",
		"setOnTouch": "Adds a callback function when an item is click",
		"setList": "Sets the the radiogroup list items",
		"setItemByIndex": "Sets an item in the radiogroup component",
		"setItemByName": "Updates an item in the list by its corresponding name",
		"addItem": "Adds an item in the radio group list",
		"removeItemByIndex": "Removes an item in the radiogroup items list by its index",
		"removeItemByName": "Removes an item in the radiogroup items list by its name",
		"popItem": "Removes the last item in the radiogroup",
		"shiftItem": "Removes the first item in the radiogroup",
		"setEnabled": "Enable or disable the radiogroup or an item in the radiogroup",
		"getEnabled": "Get the enabled state of an item in the radio group",
		"setEnabledByName": "Enable or disable a radiogroup item by its name",
		"getEnabledByName": "Get the enabled state of a radiogroup item by its name",
		"setItemPadding": "Sets the padding of the radio item"
	},
	"sel": {
		"label": "Sets or returns the label text",
		"list": "Sets or returns the list items",
		"enabled": "Sets or returns a boolean value whether the component is enabled or disabled",
		"value": "Sets or returns the value of the Select Component",
		"variant": "Sets or returns the variant of the Select Component",
		"sizeVariant": "Sets or returns the size variant of the Select Component",
		"iconColor": "Sets or returns the color of the icon in hexadecimal format `#rrggbb`",
		"labelColor": "Sets or returns the color of the label text in hexadecimal format `#rrggbb`",
		"labelSize": "Sets or returns the size of the label",
		"popupColor": "Sets or returns the color of the popup in hexadecimal format",
		"maxHeight": "Sets or returns the maximum height of the popup container",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds a callback handler when an item is touch",
		"setOnChange": "Sets a callback function when the value changes",
		"setOnOpen": "Sets a callback function when the menu is open",
		"setOnClose": "Sets a callback function when the menu dialog is close",
		"addItem": "Adds an item on the select component options list",
		"removeItemByIndex": "Removes an item in the select component item list by its index",
		"removeItemByName": "Removes an item in the select component item list by its name",
		"shifItem": "Removes an item at the beginning of the list items",
		"popItem": "Removes an item at the end of the list items",
		"getItem": "Returns the item at a given index",
		"setList": "Sets the list items in the menu popup",
		"setEnabled": "Enable or disable the select component",
		"getEnabled": "Get the enabled state of an item in the select menu",
		"setEnabledByName": "Enable or disable an item in the menu popup",
		"getEnabledByName": "Get the enabled state of an item in the menu popup"
	},
	"sld": {
		"minValue": "Sets or returns the minimum value",
		"maxValue": "Sets or returns the maximum value",
		"track": "Sets or returns the track properties of the Slider Component",
		"step": "Sets or returns the Sider Component steps",
		"orientation": "Sets or returns the orientation of the Slider Component",
		"value": "Sets or returns the value of the Slider Component",
		"marks": "Sets or returns the marks on the Slider Component",
		"valueLabelDisplay": "Sets or returns the value label display type",
		"color": "Sets or returns the theme color of the Slider",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds an event handler when the Slider component is touch",
		"setOnChange": "Sets a callback function when the value of the Slider Component changes",
		"setOnSelect": "Sets a callback function when a final value is selected",
		"setRange": "Sets a range value for the Slider Component",
		"setMarks": "Sets the marks of the Slider Component",
		"getMarks": "Returns the step marks of the Slider Component"
	},
	"stp": {
		"activeStep": "Sets or returns the active step",
		"orientation": "Sets or returns the orientation of the Stepper",
		"elevation": "Sets or returns the elevation of the mobile stepper",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnComplete": "Adds a callback function to be called when the stepper is complete",
		"setOnChange": "Adds a callback function to be called when the stepper has changed step",
		"nextStep": "Go to the next step",
		"previousStep": "Go to the previous step",
		"getLayout": "Returns the layout of the corresponding step layout where you can add controls",
		"getLayoutIndex": "Get the index of the corresponding layout",
		"removeStep": "Removes a corresponding step by its index",
		"setTitleText": "Sets a new title for the corresponding step by its index"
	},
	"swt": {
		"value": "Sets or returns the value of the switch toggle",
		"text": "Sets or returns the label text",
		"iconPosition": "Sets or returns the icon position",
		"required": "Sets or returns a boolean value whether this component is required or not",
		"color": "Sets or returns the theme color",
		"textColor": "Sets or returns the color of the text",
		"sizeVariant": "Sets or returns the size variant of the toggle switch",
		"edge": "Sets or returns the edge position of the toggle",
		"enable": "Sets or returns a Boolean whether the component is enabled or disabled",
		"spaceBetween": "Sets or returns the space between the switch icon and the label text",
		"disableRipple": "Sets or returns the disabled state of the ripple effect",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds an event handler when the switch is touch"
	},
	"swg": {
		"label": "Sets or returns the label text",
		"list": "Sets or returns the list items",
		"edge": "Sets or returns the edge position of the toggle",
		"color": "Sets or returns the theme color",
		"iconColor": "Sets or returns the theme color `Primary` `Secondary` or `Default`",
		"textColor": "Sets or returns the color of the text",
		"elevation": "Sets or returns the depth of the control container",
		"iconSize": "Sets or returns the size of the icon",
		"labelColor": "Sets or returns the color of the label text in hexadecimal format",
		"labelSize": "Sets or returns the size of the label text",
		"outlined": "Sets or returns whether the container is outlined or elevated",
		"itemPadding": "Sets or returns the padding of each switch item",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the switchgroup container",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Sets a callback function when the switch item is touch",
		"setOnChange": "Adds a callback function to be called whent there is a change of value",
		"setValueByIndex": "Sets the value of the corresponding item in the list",
		"getValueByIndex": "Returns whether an item is check or unchecked",
		"setList": "Updates the list on the switchgroup component",
		"addItem": "Adds or insert an item in the SwitchGroup list",
		"removeItemByIndex": "Removes an item in the SwitchGroup by its index",
		"removeItemByName": "Removes an item in the SwitchGroup component by its title name",
		"popItem": "Removes the last item in the SwitchGroup list",
		"shiftItem": "Removes the first item in SwitchGroup list",
		"setEnabled": "Enable or disable an item in the switchgroup component",
		"getEnabled": "Get the enabled state of an item in the switch group",
		"setItemPadding": "Sets the padding of the switch item"
	},
	"tab": {
		"color": "Sets or returns the theme color of the tab bar",
		"textColor": "Sets or returns the color of the text",
		"variant": "Sets or returns the variant of the Tabs Component",
		"centered": "Sets or returns a boolean value whether the tabs are centered or not",
		"iconSize": "Sets or returns the tab icon",
		"iconColor": "Sets or returns the color ofthe tab icon",
		"elevation": "Sets or returns the elevation of the tab bar",
		"scrollButtonMode": "Sets or returns the scroll button mode when tab items overflow the width of its container",
		"indicatorWidth": "Sets or returns the width of the indicator bar as a fraction of the tab item width",
		"indicatorThickness": "Sets or returns the thickness of the indicator bar in pixels",
		"indicatorRadius": "Sets or returns the corner radius of the indicator bar in pixels",
		"indicatorColor": "Sets or returns the color of the indicator bar",
		"tabPadding": "Sets or returns the padding of the tab items",
		"tabHeight": "Sets or returns the height of the tab in pixels",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the tab",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnChange": "Sets a callback function when the value of the tab changes",
		"setOnTouch": "Add a callback function when a tab item i click",
		"setTabs": "Sets the tab titles array",
		"addTab": "Add or insert a tab to the Tabs Component",
		"setTitleText": "Sets a new title for the corresponding tab",
		"setIcon": "Sets an icon to a corresponding tab title",
		"removeTabByIndex": "Removes a tab item by its corresponding index",
		"removeTabByName": "Removes a tab item by its corresponding name",
		"shiftItem": "Removes the first item in the tabs list",
		"popItem": "Removes the last item in the tabs list",
		"getLayout": "Returns the layout of the corresponding tab",
		"showTab": "Show a tab panel by its corresponding name",
		"showTabByIndex": "Show a tab panel by its corresponding name",
		"setEnabled": "Enable or disable a tab item",
		"getEnabled": "Get the enabled state of a tab",
		"setEnabledByName": "Enable or disable a tab by its name",
		"getEnabledByName": "Get the enabled state of a tab by its name",
		"showScrollButton": "Determines the behavior of scroll buttons when tabs are set to `scrollable`",
		"getLayoutIndex": "Get the index of the corresponding layout",
		"setIndicatorStyle": "Add a custom styling to the indicator",
		"getIndicatorStyle": "Returns the indicator style as an object",
		"setTabPadding": "Sets the padding of the tab items"
	},
	"txt": {
		"text": "Sets or returns the text",
		"variant": "Sets or returns the text variants",
		"color": "Sets or returns the theme color of the text `Primary` or `Secondary`",
		"textColor": "Sets or returns the color of the text",
		"ellipsize": "Sets or returns the ellipsis use when the text is truncated",
		"textSize": "Sets or returns the size of the text within the control",
		"textStyle": "Sets or returns the style of the text",
		"alignment": "Sets or returns the horizontal alignment of the text",
		"verticalAlignment": "Sets or returns the vertical alignment of the text",
		"italic": "Sets or returns whether the text is `italized` or not",
		"bold": "Sets or returns whether the text is `bold` or not",
		"underline": "Sets or returns whether the text is `underlined` or not",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Adds an event handler when the text component is touch",
		"setOnLongTouch": "Adds a callback handler for a long touch event",
		"setHtml": "Sets an html on the text control",
		"getHtml": "Returns the html text",
		"setTextShadow": "Sets a shadow on the text in a text control"
	},
	"tfd": {
		"text": "Sets or returns the text value of the TextField Component",
		"label": "Sets or returns the label text",
		"labelColor": "Sets return the label color in hexadecimal format `#rrggbb`",
		"placeholder": "Sets or returns the placeholder text",
		"required": "Sets or returns a boolean value whether the text field in required or not",
		"autoFocus": "Sets or returns a boolean value whethe the input is focus when rendered into the DOM",
		"hint": "Sets or returns the hint text",
		"minRows": "Sets or returns the minimum rows for a `multiline` textfield",
		"maxRows": "Sets or returns the maximum rows for a `multiline` textfield",
		"variant": "Sets or returns the variant of the TextField",
		"sizeVariant": "Sets or returns the size variant of the textfield",
		"color": "Sets or returns the theme color of the textfield component",
		"inputType": "Sets or returns the input type",
		"outlineColor": "Sets or returns the outline color in hexadecimal form `#rrggbb` when the textfield is focus",
		"endAdornment": "Returns the end adornment text or icon",
		"startAdornment": "Returns the start adornment text or icon",
		"helperText": "Sets or returns the helper text or the hint below the input",
		"error": "Sets or returns the error state of the TextField component",
		"stepIncrement": "Sets or returns the step increment if the input is of type number;",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnEnter": "Sets a callback function on `enter` or `submit` event",
		"setOnChange": "Sets a callback function on `values changes` event",
		"focus": "Sets focus on the textField component",
		"setOnFocus": "Adds a callback function when the textfield is focus or blur",
		"setRows": "Sets the minimum and maximum number of rows on a multiline type TextField",
		"setStartAdornment": "Set a start adornment control into the TextField Component",
		"setStartAdornmentOnTouch": "Add a callback handler when the start adornment control is touch",
		"getStartAdornment": "Returns the start adornment text",
		"setEndAdornment": "Add an end adornment control into the TextField Component",
		"setEndAdornmentOnTouch": "Add a callback handler when the end adornment control is touch",
		"getEndAdornment": "Returns the end adornment text"
	},
	"trv": {
		"list": "Sets or returns the list object",
		"value": "Returns the selected item of the TreeView",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnTouch": "Add a on touch handler to the TreeView item when click",
		"setList": "Updates the list items of the TreeView component",
		"addItem": "Add a tree items to the tree view",
		"getItem": "Returns the list items object of a given parent tree item name"
	},
	"vw": {
		"url": "Sets or returns the video source url",
		"volume": "Sets or returns the video volume",
		"duration": "Returns the time duration of the video in seconds",
		"played": "Returns a boolean whether the video is currently playing",
		"paused": "Returns a boolean whether the video is paused",
		"completed": "Returns a boolean whether the video playback is completed",
		"muted": "Returns a boolean whether the video audio is muted",
		"seeking": "Returns a boolean whether the user is currently seeking in the video playback seekbar",
		"speed": "Sets or returns the playback speed",
		"loop": "Sets or returns a boolean whether the video should start over again when completed",
		"enterFullscreen": "Play video in fullscreen if supported",
		"exitFullscreen": "Exit fullscreen if video is playing fullscreen",
		"play": "Play the video",
		"stop": "Stop the playing video",
		"setOnReady": "Sets a callback handler when the video has buffered enough to begin playing",
		"setOnPlay": "Sets a callback handler when the video is played by the user or programmatically",
		"setOnPause": "Sets a callback handler when the video is pause by the user or programmatically",
		"setOnComplete": "Sets a callback handler when the video playback is completed",
		"setOnError": "Sets a callback function when an error occurs while the video source is being loaded",
		"setOnSeek": "Sets a callback handler when seeking event is completed",
		"setOnSeeking": "Sets a callback handler when seeking event is active",
		"setOnVolume": "Sets a callback function when the volume of the video changes",
		"setOnProgress": "Sets a callback handler to be be called while the video is playing",
		"load": "Reloads the video source",
		"seekTo": "Sets the playback position",
		"capture": "Capture an image in the playback"
	},
	"web": {
		"url": "Sets or returns the url of the webview",
		"html": "Setst or returns the html loaded in the iframe",
		"errorPage": "Sets or returns the redirect url when an error occur",
		"textZoom": "Sets or returns the text zoom of the page loaded in the web view",
		"window": "A reference to the webview's window object",
		"document": "A reference to the webview's window document object",
		"blockUrls": "Sets or returns the list of blocked urls",
		"width": "Sets or returns the width of the control as a fraction of the parent control",
		"height": "Sets or returns the height of the control as a fraction of the parent control",
		"opacity": "Sets or returns the opacity of the control",
		"textSize": "Sets or returns the size of the text within the control",
		"textColor": "Sets or returns the color of the text",
		"rotation": "Sets or returns the angle of rotation in degrees",
		"fontFile": "Sets or returns the `relative` path to the font-family use",
		"visibility": "Sets or returns the visibility of the control",
		"type": "Returns the type of the control",
		"absWidth": "Returns the absolute width of the control in pixels",
		"absHeight": "Returns the absolute height of the control in pixels",
		"backColor": "A hexadecimal color of the form `#rrggbb`",
		"backImage": "The path to your image file",
		"isVisible": "Returns whether the control is visible or not",
		"top": "Returns the distance of the control from the top",
		"left": "Returns the distance of the control from the left",
		"absTop": "Returns the absolute distance of the control from the top in pixels",
		"absLeft": "Returns the absolute distance of the control from the left in pixels",
		"parent": "Returns the parent layout control",
		"position": "Returns the position of the control",
		"margins": "Sets or returns the margin of the control",
		"padding": "Sets or returns the padding of the control",
		"options": "Sets or returns the `options` of the control",
		"disabled": "Sets or returns the `disabled` state of the control",
		"border": "Sets or returns the border thickness in pixels",
		"borderColor": "Sets or returns the border color",
		"borderStyle": "Sets or returns the border style",
		"cornerRadius": "Sets or returns the corner radius in pixels",
		"el": "Returns the html container element for the control",
		"elStyle": "Sets the style of the html container element",
		"setOnContextMenu": "Adds a callback function on right click",
		"animate": "Animate the component",
		"setSize": "Sets the size of the component",
		"show": "Show the component",
		"hide": "Hide the component",
		"gone": "Destroy the component",
		"destroy": "Destroy the component",
		"setScale": "Sets the x and y scaling of the component",
		"getPosition": "Returns the position of the component",
		"setMargins": "Sets the margin of the component",
		"setPadding": "Sets the padding of the component's container",
		"setPosition": "Sets the position of the component relative to its parent dimensions",
		"setBorder": "Sets the border line for the component container",
		"setCornerRadius": "Sets the corner radius of the component",
		"bringForward": "Bring this component forward by a given z-index",
		"sendBackward": "Bring this component backward by a given z-index",
		"setOnLoad": "Adds a callback handler for onload event",
		"setOnUrl": "Define a callback function which is called when the user clicked a link",
		"stop": "Stops any web loading",
		"reload": "Reloads the current page",
		"print": "Print current page via the builtin android printer dialog"
	},
	"acs": {
		"title": "Sets or returns the title text of the action sheet",
		"description": "Sets or returns the description text for the action sheet",
		"setColor": "Sets the color of the list item by its name",
		"setColorByIndex": "Sets the color of the list item by its corresponding index"
	},
	"cpk": {
		"value": "Returns the value of the chosen color",
		"getValue": "Returns the hexadecimal string color value of the color picker"
	},
	"dtp": {},
	"pvr": {
		"fontFile": "Sets or returns the font file use for the Popover",
		"backImage": "Sets or returns the path to the background image",
		"show": "Show the popup dialog",
		"hide": "Hide the popup dialog"
	},
	"pop": {
		"text": "Sets or returns the text of the popup",
		"duration": "Sets or returns the duration of the popup in milliseconds",
		"setOnClose": "Adds an onClose callback to your popup",
		"setOnAction": "Adds an action callback when the user touches the action button",
		"show": "Show the popup",
		"hide": "Hide the popup",
		"setPosition": "Updates the position of the popup",
		"getPosition": "Returns the position of the popup"
	},
	"prd": {
		"text": "Sets or returns the ProgressDialog text",
		"show": "Show the progress dialog component",
		"hide": "Hides the dialog component",
		"setOnClose": "Adds a callback handler method on close event"
	},
	"tpk": {}
}