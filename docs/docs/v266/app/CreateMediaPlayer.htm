
<!DOCTYPE html>
<html>

<head>
	<title>CreateMediaPlayer</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateMediaPlayer</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>The MediaPlayer object can be used to play sound files from the phone or tablet.</p>

		<div class="samp">
		ply = app.CreateMediaPlayer( ) → <b>app object:</b> MediaPlayer
		</div>

		<p>Use the SetFile method of the MediaPlayer object to set the sound file to play. Supported sound file types include .ogg and .mp3.<br>
		<br>
		When the sound file is ready for playback, the <strong>OnReady</strong> callback function will be called. Then you can start playing using the <strong>Start</strong> method.<br>
		If the soundtrack has finished playing, the <strong>OnComplete</strong> callback will be called. All together you code could look like that:</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Playing Audio</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <b id="snip1" style="font-size:100%">player <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateMediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    player<span class="token punctuation">.</span><span class="token function">SetOnReady</span><span class="token punctuation">(</span>Play<span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    player<span class="token punctuation">.</span><span class="token function">SetOnComplete</span><span class="token punctuation">(</span> player_OnComplete <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    player<span class="token punctuation">.</span><span class="token function">SetFile</span><span class="token punctuation">(</span> <span class="token string">"/Sys/Snd/Poing.ogg"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    player<span class="token punctuation">.</span><span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">player_OnComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"OnComplete"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip1 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>

		<p>The SeekTo method can be used to adjust the playback position by passing in the time in seconds. Passing in 0 will set the playback position to the beginning of the sound file: <span class="samp samp-inline">player<span class="token punctuation">.</span><span class="token function">SeekTo</span><span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span></p>
		<h3>Methods</h3>
		<p>The following methods are available on the <strong>MediaPlayer</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">Batch</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">properties</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">Close</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">GetDuration</a>() → <b>Number:</b> <i>seconds</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup" class="baseFunc">GetPosition</a>() → <b>Number:</b> <i>seconds</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">GetType</a>() → <b>String:</b> <docstr>“MediaPlayer”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup">IsLooping</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">IsPlaying</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">IsReady</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">Pause</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">Play</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">SeekTo</a>(
			<a href="#pop_num_flt" data-transition="pop" data-rel="popup">time</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">SetFile</a>(
			<a href="#pop_str_ptf" data-transition="pop" data-rel="popup">file</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">SetLooping</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">loop</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup">SetOnComplete</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">SetOnReady</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup">SetOnSeekDone</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup">SetPitch</a>(
			<a href="#pop_num_fac" data-transition="pop" data-rel="popup">pitch</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup">SetSpeed</a>(
			<a href="#pop_num_fac" data-transition="pop" data-rel="popup">speed</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup">SetVolume</a>(
			<a href="#pop_num_prc" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_prc" data-transition="pop" data-rel="popup">right</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup">Stop</a>()
		</div>

	</div>

	<div data-role="popup" id="pop_std_bin" class="ui-content"><b>Boolean</b></div>
	<div data-role="popup" id="pop_num_fac" class="ui-content"><b>Number:</b> <i>factor</i></div>
	<div data-role="popup" id="pop_num_flt" class="ui-content"><b>Number:</b> <i>float</i></div>
	<div data-role="popup" id="pop_num_prc" class="ui-content"><b>Number:</b> <i>percent</i></div>
	<div data-role="popup" id="pop_str_ptf" class="ui-content"><b>String:</b> <i>path to file ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('List: args')">COMMAND</a> }</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>ply.Batch</b><br>Batch method calls to be able to set all object's properties at once.<br>Note that you need to specify each parameter (use <docstr>“”</docstr> or <span class="token keyword">null</span> to leave some out)<br>Inherited methods can be called by appending an underscore to the function name (ie. txt<span class="token punctuation">.</span><span class="token function">Batch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">SetBackColor_</span><span class="token operator">:</span> <span class="token punctuation">[</span><docstr>“red”</docstr><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>ply.Close</b><br>Close the media player and thus make it unuseable for further use.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>ply.GetDuration</b><br>Returns the total duration of the currently loaded song in seconds.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>ply.GetPosition</b><br>Returns the elapsed playtime in seconds.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>ply.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>ply.IsLooping</b><br>Checks if the media player will replay the song from the begining if it has finished.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>ply.IsPlaying</b><br>Checks if the media player is currently playing.</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>ply.IsReady</b><br>Checks if the media player is ready for use.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>ply.Pause</b><br>Pause the current playing song.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>ply.Play</b><br>Play the current loaded song from the last paused time or from a given start time in in seconds.</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>ply.SeekTo</b><br>Seek the player to a given time in seconds.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>ply.SetFile</b><br>Load a sound file to the media player.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>ply.SetLooping</b><br>Define whether the media player should replay the song when completed.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>ply.SetOnComplete</b><br>Define a callback function which is called when a sound file has finished playing.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>ply.SetOnReady</b><br>Define a callback function which is called when the player is ready for use.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>ply.SetOnSeekDone</b><br>Define a callback function which is called when a seeking process is done.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>ply.SetPitch</b><br>Change the pitch of the playing song.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>ply.SetSpeed</b><br>Change the speed of the playing song.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>ply.SetVolume</b><br>Change the volume of the playing song.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>ply.Stop</b><br>Stop playing a song.</div>
</div>
</body>

</html>
