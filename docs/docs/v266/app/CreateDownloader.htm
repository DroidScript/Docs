
<!DOCTYPE html>
<html>

<head>
	<title>CreateDownloader</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateDownloader</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>The Downloader component can be used to download a file straight from the internet to your phone or tablet's local storage.</p>

		<div class="samp">
		dwn = app.CreateDownloader(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>app object:</b> Downloader
		</div>

		<p>You can download a file with the <strong>Download</strong> method which accepts a <i>source url</i> and a <i>target directory</i>: <span class="samp samp-inline">dwn<span class="token punctuation">.</span><span class="token function">Download</span><span class="token punctuation">(</span> srcFileUrl<span class="token punctuation">,</span> targetDir <span class="token punctuation">)</span><span class="token punctuation">;</span></span><br>
		<br>
		Once the Download method has been called, it show a progress bar with the current download progress. But you can disable this behavior with the <docstr>“NoDialog”</docstr> <strong>option</strong>.<br>
		<br>
		If you want to know when the download process has finished (or failed) you can define a callback functioni with the <strong>SetOnComplete</strong> method: <span class="samp samp-inline">dload<span class="token punctuation">.</span><span class="token function">SetOnComplete</span><span class="token punctuation">(</span> callback <span class="token punctuation">)</span><span class="token punctuation">;</span></span></p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Example</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token keyword">var</span> srcFileUrl <span class="token operator">=</span> <span class="token string">"http://sgarman.net/downloadable.txt"</span><span class="token punctuation">;</span><br>
				    <span class="token keyword">var</span> targetDir <span class="token operator">=</span> <span class="token string">"/sdcard"</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip1" style="font-size:100%">dload <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateDownloader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    dload<span class="token punctuation">.</span><span class="token function">SetOnComplete</span><span class="token punctuation">(</span> dload_OnComplete <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    dload<span class="token punctuation">.</span><span class="token function">Download</span><span class="token punctuation">(</span> srcFileUrl<span class="token punctuation">,</span> targetDir <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">dload_OnComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span><span class="token string">"Download complete"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip1 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Downloader</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">Batch</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">properties</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">Download</a>(
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">url</a>,
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">fldr</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">headers</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">GetProgress</a>() → <b>Number:</b> <i>fraction (0..1)</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup">GetSize</a>() → <b>Number:</b> <i>bytes</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">GetType</a>() → <b>String:</b> <docstr>“Downloader”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup">IsComplete</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup" class="premHint">Method</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">types</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )
			→ <b>all types</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">SetOnCancel</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">SetOnComplete</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">SetOnDownload</a>(
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">SetOnError</a>(
			<a href="#pop_fnc_004" data-transition="pop" data-rel="popup">callback</a> )
		</div>

	</div>

	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“NoDialog”</docstr> or <docstr>“Light”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <i>path to file or folder ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> ):</i> <docstr>“must not have a trailing slash”</docstr></div>
	<div data-role="popup" id="pop_mul_001" class="ui-content"><b>String:</b> <i>url path</i><br><b>List:</b> [<a href="" onclick="app.ShowPopup('String: url path')">urls</a>]</div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('List: args')">COMMAND</a> }</div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>List:</b> boolean,char,byte,short,int,long,float,double,String,CharSequence,...</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String: path to file or folder ( “/absolute/...” or “relative/...” )')">file</a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String: path to file or folder ( “/absolute/...” or “relative/...” )')">path</a>
	)</div>
	<div data-role="popup" id="pop_fnc_004" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String')">error</a>
	)</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>dwn.Batch</b><br>Batch method calls to be able to set all object's properties at once.<br>Note that you need to specify each parameter (use <docstr>“”</docstr> or <span class="token keyword">null</span> to leave some out)<br>Inherited methods can be called by appending an underscore to the function name (ie. txt<span class="token punctuation">.</span><span class="token function">Batch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">SetBackColor_</span><span class="token operator">:</span> <span class="token punctuation">[</span><docstr>“red”</docstr><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>dwn.Download</b><br>Start downloading one or multiple files.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>dwn.GetProgress</b><br>Returns the current download progress.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>dwn.GetSize</b><br>Returns the target download size in bytes.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>dwn.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>dwn.IsComplete</b><br>Checks if all downloads are completed.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>dwn.Method</b><br>Allows access to other functions defined on the object in Java via reflection.<br><br><div class='premHint'><strong>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</strong></div></div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>dwn.SetOnCancel</b><br>Define a callback function which is called when download is cancelled.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>dwn.SetOnComplete</b><br>Define a callback function which is called when all downloads are finished.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>dwn.SetOnDownload</b><br>Define a callback function which is called when a file is download.</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>dwn.SetOnError</b><br>Define a callback function which is called when an error occurred while downloading a file.</div>
</div>
</body>

</html>
