
<!DOCTYPE html>
<html>

<head>
	<title>CreateTextEdit</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateTextEdit</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>If you want the user to enter custom data you probably need the <strong>TextEdit</strong> control.</p>

		<div class="samp">
		edt = app.CreateTextEdit(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>app object:</b> TextEdit
		</div>

		<p>For number input only you can apply the <docstr>“numbers”</docstr> <strong>option</strong>.<br>
		<br>
		You can use the <strong>SetOnChange</strong> method of the TextEdit to set the name of a function you want to be called when a the text is changed.<br>
		<br>
		Use the <strong>SetText</strong> and <strong>GetText</strong> functions to set and get the text in the TextEdit.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Using OnChange</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip1" style="font-size:100%">edt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateTextEdit</span><span class="token punctuation">(</span> <span class="token string">"Edit me"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    edt<span class="token punctuation">.</span><span class="token function">SetOnChange</span><span class="token punctuation">(</span> edt_OnChange <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> edt <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    txt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateText</span><span class="token punctuation">(</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> txt <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">edt_OnChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    txt<span class="token punctuation">.</span><span class="token function">SetText</span><span class="token punctuation">(</span> edt<span class="token punctuation">.</span><span class="token function">GetText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip1 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>

		<p>You can change the look of a TextEdit using the <strong>SetBackColor</strong> and <strong>SetTextColor</strong> functions on the TextEdit object.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Blue on White</h3>
			<div id="examp2" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip2" style="font-size:100%">edt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateTextEdit</span><span class="token punctuation">(</span> <span class="token string">"Hello"</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    edt<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span> <span class="token string">"#ff6666ff"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    edt<span class="token punctuation">.</span><span class="token function">SetBackColor</span><span class="token punctuation">(</span> <span class="token string">"#ffffffff"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> edt <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip2 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>

		<p>You can also set a background image/pattern or background gradient for the List using the <strong>SetBackground</strong> and <strong>SetBackGradient</strong> functions. See <a href="CreateLayout.htm" data-ajax="false">Layouts</a> for examples of how to use these functions.</p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Password</h3>
			<div id="examp3" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip3" style="font-size:100%">edt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateTextEdit</span><span class="token punctuation">(</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token string">"Password,Singleline"</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    edt<span class="token punctuation">.</span><span class="token function">SetHint</span><span class="token punctuation">(</span> <span class="token string">"Password"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    edt<span class="token punctuation">.</span><span class="token function">SetOnEnter</span><span class="token punctuation">(</span> edt_OnEnter <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> edt <span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">edt_OnEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token keyword">var</span> password <span class="token operator">=</span> edt<span class="token punctuation">.</span><span class="token function">GetText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> password <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip3 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp3 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp3 )">      Run      </a>
			</div>
		</div>


		<h3>Methods</h3>
		<p>The following methods are available on the <strong>TextEdit</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup" class="baseFunc">AdjustColor</a>(
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">hue</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">saturation</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">brightness</a>,
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">contrast</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup" class="baseFunc">Animate</a>(
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">time</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">Batch</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">properties</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup" class="baseFunc">ClearFocus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">ClearHistory</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">Focus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsHeight</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsWidth</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">GetCursorLine</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">GetCursorPos</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup" class="baseFunc">GetHeight</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">GetHtml</a>() → <b>String:</b> <i>html code</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup" class="baseFunc">GetLeft</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup">GetLineCount</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">GetLineStart</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">line</a> )
			→ <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup">GetLineTop</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">line</a> )
			→ <b>Number:</b> <i>fraction (0..1)</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup">GetMaxLines</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup" class="baseFunc">GetParent</a>() → <b>app object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup" class="baseFunc">GetPosition</a>(
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Object:</b> {
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a> }
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup">GetSelectedText</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup">GetSelectionEnd</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup">GetSelectionStart</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup">GetText</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup">GetTextSize</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">mode</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup" class="baseFunc">GetTop</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup">GetType</a>() → <b>String:</b> <docstr>“TextEdit”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01b" data-transition="pop" data-rel="popup" class="baseFunc">GetVisibility</a>() → <b>String:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01c" data-transition="pop" data-rel="popup" class="baseFunc">GetWidth</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01d" data-transition="pop" data-rel="popup" class="baseFunc">Gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01e" data-transition="pop" data-rel="popup" class="baseFunc">Hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01f" data-transition="pop" data-rel="popup">InsertText</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">start</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_020" data-transition="pop" data-rel="popup" class="baseFunc">IsEnabled</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_021" data-transition="pop" data-rel="popup">IsOverlap</a>(
			<a href="#pop_std_dso" data-transition="pop" data-rel="popup">obj</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">depth</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_022" data-transition="pop" data-rel="popup" class="baseFunc">IsVisible</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_023" data-transition="pop" data-rel="popup" class="premHint">Method</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a>,
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">types</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p1</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p2</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p3</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">p4</a> )
			→ <b>all types</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_024" data-transition="pop" data-rel="popup">Redo</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_025" data-transition="pop" data-rel="popup">ReplaceText</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">start</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">end</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_026" data-transition="pop" data-rel="popup" class="baseFunc">SetBackAlpha</a>(
			<a href="#pop_num_005" data-transition="pop" data-rel="popup">alpha</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_027" data-transition="pop" data-rel="popup" class="baseFunc">SetBackColor</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_028" data-transition="pop" data-rel="popup" class="baseFunc">SetBackGradient</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>,
			<a href="#pop_std_ukn" data-transition="pop" data-rel="popup">color3</a>,
			<a href="#pop_str_009" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_029" data-transition="pop" data-rel="popup" class="baseFunc">SetBackGradientRadial</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">y</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">radius</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>,
			<a href="#pop_std_ukn" data-transition="pop" data-rel="popup">color3</a>,
			<a href="#pop_str_com" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02a" data-transition="pop" data-rel="popup" class="baseFunc">SetBackground</a>(
			<a href="#pop_str_ptf" data-transition="pop" data-rel="popup">file</a>,
			<a href="#pop_str_00a" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02b" data-transition="pop" data-rel="popup" class="baseFunc">SetColorFilter</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a>,
			<a href="#pop_str_00b" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02c" data-transition="pop" data-rel="popup">SetCursorColor</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02d" data-transition="pop" data-rel="popup">SetCursorPos</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">position</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02e" data-transition="pop" data-rel="popup" class="baseFunc">SetDescription</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">desc</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_02f" data-transition="pop" data-rel="popup" class="baseFunc">SetEnabled</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">enable</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_030" data-transition="pop" data-rel="popup">SetHint</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_031" data-transition="pop" data-rel="popup">SetHtml</a>(
			<a href="#pop_str_htm" data-transition="pop" data-rel="popup">str</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_032" data-transition="pop" data-rel="popup" class="baseFunc">SetMargins</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_00c" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_033" data-transition="pop" data-rel="popup">SetOnChange</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_034" data-transition="pop" data-rel="popup">SetOnEnter</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_035" data-transition="pop" data-rel="popup">SetOnFocus</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_036" data-transition="pop" data-rel="popup">SetSelectColor</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">col</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_037" data-transition="pop" data-rel="popup">SetSelection</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">start</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">stop</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_038" data-transition="pop" data-rel="popup" class="baseFunc">SetSize</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_00d" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_039" data-transition="pop" data-rel="popup">SetText</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03a" data-transition="pop" data-rel="popup">SetTextColor</a>(
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03b" data-transition="pop" data-rel="popup">SetTextSize</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">size</a>,
			<a href="#pop_str_00e" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03c" data-transition="pop" data-rel="popup" class="baseFunc">SetVisibility</a>(
			<a href="#pop_str_00f" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03d" data-transition="pop" data-rel="popup" class="baseFunc">Show</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_03e" data-transition="pop" data-rel="popup" class="baseFunc">Tween</a>(
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">target</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">duration</a>,
			<a href="#pop_str_010" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">repeat</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">yoyo</a>,
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_03f" data-transition="pop" data-rel="popup">Undo</a>()
		</div>

	</div>

	<div data-role="popup" id="pop_std_bin" class="ui-content"><b>Boolean</b></div>
	<div data-role="popup" id="pop_std_dso" class="ui-content"><b>app object</b></div>
	<div data-role="popup" id="pop_std_num" class="ui-content"><b>Number</b></div>
	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
	<div data-role="popup" id="pop_std_ukn" class="ui-content"><b>unknown</b></div>
	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>Number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>Number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_num_mls" class="ui-content"><b>Number:</b> <i>milliseconds</i></div>
	<div data-role="popup" id="pop_num_001" class="ui-content"><b>Number:</b> -180..180</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>Number:</b> -100..100</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>Number:</b> 0..100</div>
	<div data-role="popup" id="pop_num_005" class="ui-content"><b>Number:</b> 0..0.99 or 1..256</div>
	<div data-role="popup" id="pop_str_col" class="ui-content"><b>String:</b> <i><br>  hexadecimal: <docstr>“#rrggbb”</docstr>, <docstr>“#aarrggbb”</docstr><br>  colourName: <docstr>“red”</docstr>, <docstr>“green”</docstr>, ...</i></div>
	<div data-role="popup" id="pop_str_com" class="ui-content"><b>String:</b> <i>comma <docstr>“,”</docstr> separated</i></div>
	<div data-role="popup" id="pop_str_htm" class="ui-content"><b>String:</b> <i>html code</i></div>
	<div data-role="popup" id="pop_str_ptf" class="ui-content"><b>String:</b> <i>path to file ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“<a href="" onclick="app.ShowPopup('Select all Text if user enter the Textedit')">AutoSelect</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('Expand or shrink the control automatically so the text fits in the Textedit')">AutoSize</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('Write bold text')">Bold</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('enables full screen keyboard in landscape mode')">Extract</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('Justify the text to the left')">Left</a>”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('Justify the text in the middle')">Center</a>”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('Justify the text to the right')">Right</a>”</docstr> or <docstr>“Monospace”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('Disable the spell-checker')">NoSpell</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('Shows no Keyboard')">NoKeyboard</a>”</docstr> or <docstr>“Numbers”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('The user cant change the Text')">ReadOnly</a>”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('Dont break text for long lines and change \'Enter\' key to \'Done\'')">SingleLine</a>”</docstr>, <docstr>“FillX/Y”</docstr>, <docstr>“<a href="" onclick="app.ShowPopup('displays characters as dots')">Password</a>”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“NewsPaper”</docstr> or <docstr>“Jelly”</docstr> or <docstr>“Flash”</docstr> or <docstr>“RubberBand”</docstr> or <docstr>“Swing”</docstr> or <docstr>“TaDa”</docstr> or <docstr>“Bounce”</docstr> or <docstr>“Fall”</docstr> or <docstr>“FallRotate”</docstr> or <docstr>“<br><img width='300px' src='../animate.png'></img>”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“screen”</docstr>, <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_str_009" class="ui-content"><b>String:</b> <docstr>“left-right”</docstr> or <docstr>“right-left”</docstr> or <docstr>“top-bottom”</docstr> or <docstr>“bottom-top”</docstr> or <docstr>“bl-tr”</docstr> or <docstr>“br-tl”</docstr> or <docstr>“tl-br”</docstr> or <docstr>“tr-bl”</docstr></div>
	<div data-role="popup" id="pop_str_00a" class="ui-content"><b>String:</b> <docstr>“repeat”</docstr></div>
	<div data-role="popup" id="pop_str_00b" class="ui-content"><b>String:</b> <docstr>“Add”</docstr> or <docstr>“Multiply”</docstr> or <docstr>“clear”</docstr> or <docstr>“darken”</docstr> or <docstr>“lighten”</docstr> or <docstr>“overlay”</docstr> or <docstr>“screen”</docstr> or <docstr>“xor”</docstr> or <docstr>“color”</docstr> or <docstr>“color_burn”</docstr> or <docstr>“color_dodge”</docstr> or <docstr>“difference”</docstr> or <docstr>“exclusion”</docstr> or <docstr>“hard_light”</docstr> or <docstr>“hue”</docstr> or <docstr>“luminosity”</docstr> or <docstr>“modulate”</docstr> or <docstr>“saturation”</docstr> or <docstr>“soft_light”</docstr> or <docstr>“src”</docstr> or <docstr>“dst”</docstr> or <docstr>“src_in”</docstr> or <docstr>“src_out”</docstr> or <docstr>“src_atop”</docstr> or <docstr>“src_over”</docstr> or <docstr>“dst_in”</docstr> or <docstr>“dst_out”</docstr> or <docstr>“dst_atop”</docstr> or <docstr>“dst_over”</docstr></div>
	<div data-role="popup" id="pop_str_00c" class="ui-content"><b>String:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>
	<div data-role="popup" id="pop_str_00d" class="ui-content"><b>String:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“dp”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>
	<div data-role="popup" id="pop_str_00e" class="ui-content"><b>String:</b> <docstr>“px”</docstr> or <docstr>“dip”</docstr> or <docstr>“sp”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('scales text in proportion with device resolution')">pl</a>”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('scales text in proportion with device resolution')">ps</a>”</docstr></div>
	<div data-role="popup" id="pop_str_00f" class="ui-content"><b>String:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr></div>
	<div data-role="popup" id="pop_str_010" class="ui-content"><b>String:</b> <docstr>“Linear.None”</docstr> or <docstr>“Quadratic.In/Out”</docstr> or <docstr>“Cubic.In/Out”</docstr> or <docstr>“Quartic.In/Out”</docstr> or <docstr>“Quintic.In/Out”</docstr> or <docstr>“Sinusoidal.In/Out”</docstr> or <docstr>“Exponential.In/Out”</docstr> or <docstr>“Circular.In/Out”</docstr> or <docstr>“Elastic.In/Out”</docstr> or <docstr>“Back.In/Out”</docstr> or <docstr>“Bounce.In/Out”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('List: args')">COMMAND</a> }</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">x</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">y</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">w</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">h</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): horizontal scale')">sw</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): vertical scale')">sh</a>, <a href="" onclick="app.ShowPopup('Number: angle in degrees (0..360)')">rot</a> }</div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>List:</b> boolean,char,byte,short,int,long,float,double,String,CharSequence,...</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String')">type</a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>edt.AdjustColor</b><br>Adjust the visual color effect of the control by setting the Hue (by angle in degrees in a color circle), the saturation, brightness and contrast of the control.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>edt.Animate</b><br>Animates the control.<br><br>There are<br>    <docstr>“in”</docstr>-Animations which are used to show objects from hidden state<br>    <docstr>“out”</docstr>-animations which are used to hide objects in visible state and<br>    <docstr>“static”</docstr>-animations which keep the visible state.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>edt.Batch</b><br>Batch method calls to be able to set all object's properties at once.<br>Note that you need to specify each parameter (use <docstr>“”</docstr> or <span class="token keyword">null</span> to leave some out)<br>Inherited methods can be called by appending an underscore to the function name (ie. txt<span class="token punctuation">.</span><span class="token function">Batch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">SetBackColor_</span><span class="token operator">:</span> <span class="token punctuation">[</span><docstr>“red”</docstr><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>edt.ClearFocus</b><br>Removes the focus of the control so that the user no longer has immediate access to it.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>edt.ClearHistory</b><br>Clears the undo/redo history.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>edt.Focus</b><br>Set the focus to the control so that the user can interact with it immediately.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>edt.GetAbsHeight</b><br>Get the absolute height of the control in pixels.<br>Note that unlike the objects margins its padding does change this value.</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>edt.GetAbsWidth</b><br>Get the absolute width of the control in pixels.<br>Note that unlike the objects margins its padding does change this value.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>edt.GetCursorLine</b><br>Returns the current line index where the cursor is located.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>edt.GetCursorPos</b><br>Returns the index of the character where the cursor is currently located.</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>edt.GetHeight</b><br>Get the height of the control as screen height relative float or in pixels with the <b>px</b> option.<br>Note that unlike the objects margins its padding does change this value.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>edt.GetHtml</b><br>Returns the html formatted content.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>edt.GetLeft</b><br>Get the distance from the control to the left parent border as width relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>edt.GetLineCount</b><br>Returns the amount of lines in the text even with html formatting</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>edt.GetLineStart</b><br>Returns at which character in the text a certain line begins.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>edt.GetLineTop</b><br>Returns the top position of a given line on the screen.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>edt.GetMaxLines</b><br>Returns the maximum amount of lines the control can hold with the current control and font height</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>edt.GetParent</b><br>Returns the parent control object where the object was added to - commonly a layout.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>edt.GetPosition</b><br>Returns data about the position and size of the control.<br>If the <strong>screen</strong> option is given the position on the screen will be returned. Otherwise relative to the parent control.<br>The <b>px</b> options turns the relative values into pixels.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>edt.GetSelectedText</b><br>Returns the currently selected text.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>edt.GetSelectionEnd</b><br>Returns the position of where the user selection ends.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>edt.GetSelectionStart</b><br>Returns the position of where the user selection begins.</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>edt.GetText</b><br>Returns the current1605064214 displayed text of the control.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>edt.GetTextSize</b><br>Returns the current size of the contained text. If the <b>px</b> option is given the size will be retured in pixels.</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>edt.GetTop</b><br>Get the distance from the control to the upper parent border as height relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>edt.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>edt.GetVisibility</b><br>Returns the current visibility state of the control. The Values are:<br><strong>Show</strong>: visible<br><strong>Hide</strong>: invisible but still consuming space<br><strong>Gone</strong>: invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>edt.GetWidth</b><br>Get the width of the control as screen width relative float or in pixels with the <b>px</b> option.<br>Note that unlike the objects margins its padding does change this value.</div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>edt.Gone</b><br>Hides the control without consuming any more layout space as if it were never there.</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>edt.Hide</b><br>Hide the control but keep the layout space free.</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>edt.InsertText</b><br>Inserts a string at a given position.</div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>edt.IsEnabled</b><br>Returns whether the control is currently useable by the user.</div>
	<div data-role="popup" id="pop_dsc_021" class="ui-content"><b>edt.IsOverlap</b><br>Returns whether the control overlaps with another by a given distance.</div>
	<div data-role="popup" id="pop_dsc_022" class="ui-content"><b>edt.IsVisible</b><br>Returns whether the control is currently visible to the user, ignoring overlaying controls.</div>
	<div data-role="popup" id="pop_dsc_023" class="ui-content"><b>edt.Method</b><br>Allows access to other functions defined on the object in Java via reflection.<br><br><div class='premHint'><strong>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</strong></div></div>
	<div data-role="popup" id="pop_dsc_024" class="ui-content"><b>edt.Redo</b><br>Redo an undone action.</div>
	<div data-role="popup" id="pop_dsc_025" class="ui-content"><b>edt.ReplaceText</b><br>Replaces a given range in the text with some string.</div>
	<div data-role="popup" id="pop_dsc_026" class="ui-content"><b>edt.SetBackAlpha</b><br>Set the transparency of the background by an alpha value between <b>0</b> (<i>no transparency</i>) and <b>0.99</b> (<i>full transparent</i>) or <b>1</b> (<i>no transparency</i>) and <b>256</b> (<i>full transparent</i>)</div>
	<div data-role="popup" id="pop_dsc_027" class="ui-content"><b>edt.SetBackColor</b><br>Changes the background color of the control.</div>
	<div data-role="popup" id="pop_dsc_028" class="ui-content"><b>edt.SetBackGradient</b><br>Define the background color of the control with a gradient. The default gradient direction is from top to bottom, but you can change it from left to right and the reversed versions of course.</div>
	<div data-role="popup" id="pop_dsc_029" class="ui-content"><b>edt.SetBackGradientRadial</b><br>Define a radial color gradient for the background of control.</div>
	<div data-role="popup" id="pop_dsc_02a" class="ui-content"><b>edt.SetBackground</b><br>Changes the background to an image which can be repeated using the <strong>repeat</strong> option.<br>An image which is often used with that option is '/res/drawable/pattern_carbon' - try it out!</div>
	<div data-role="popup" id="pop_dsc_02b" class="ui-content"><b>edt.SetColorFilter</b><br>Adjust the visual color effect with a color and a given BlendMode. More information about BlendMode can be found in the <a href="https://developer.android.com/reference/android/graphics/BlendMode.html" onclick="return OpenUrl(this.href);">Android Developer page</a>.</div>
	<div data-role="popup" id="pop_dsc_02c" class="ui-content"><b>edt.SetCursorColor</b><br>Changes the cursor color.</div>
	<div data-role="popup" id="pop_dsc_02d" class="ui-content"><b>edt.SetCursorPos</b><br>Change the current cursor position.</div>
	<div data-role="popup" id="pop_dsc_02e" class="ui-content"><b>edt.SetDescription</b><br>Set a control description for accessibility</div>
	<div data-role="popup" id="pop_dsc_02f" class="ui-content"><b>edt.SetEnabled</b><br>En/Disable the control physically and visually so that the user can/can not access the control. Events like OnTouch will still be fired.</div>
	<div data-role="popup" id="pop_dsc_030" class="ui-content"><b>edt.SetHint</b><br>Set a grey default which is shown when the edit is empty</div>
	<div data-role="popup" id="pop_dsc_031" class="ui-content"><b>edt.SetHtml</b><br>Change the current text of the control to html-formatted text.</div>
	<div data-role="popup" id="pop_dsc_032" class="ui-content"><b>edt.SetMargins</b><br>Define a distance to other controls on each side of the control.</div>
	<div data-role="popup" id="pop_dsc_033" class="ui-content"><b>edt.SetOnChange</b><br>Called when the containing data has been changed by the user.</div>
	<div data-role="popup" id="pop_dsc_034" class="ui-content"><b>edt.SetOnEnter</b><br>Define a callback function which is called when the user pressed 'Done' or 'Enter' on the keyboard (line can still be inserted via Shift+Enter)<br>Along with the <docstr>“SingleLine”</docstr> option it changes the keyboards <i>'Enter'</i> key to <i>'Done'</i> or <i>'Ok'</i></div>
	<div data-role="popup" id="pop_dsc_035" class="ui-content"><b>edt.SetOnFocus</b><br>Define a callback function called when the user focuses the control.</div>
	<div data-role="popup" id="pop_dsc_036" class="ui-content"><b>edt.SetSelectColor</b><br>Set the background color for selected text.</div>
	<div data-role="popup" id="pop_dsc_037" class="ui-content"><b>edt.SetSelection</b><br>Selects part of the text in a given range.</div>
	<div data-role="popup" id="pop_dsc_038" class="ui-content"><b>edt.SetSize</b><br>Change the size of the control in either screen relative values or in pixels if the <b>px</b> option was given.</div>
	<div data-role="popup" id="pop_dsc_039" class="ui-content"><b>edt.SetText</b><br>Change the currently displayed text in the control.</div>
	<div data-role="popup" id="pop_dsc_03a" class="ui-content"><b>edt.SetTextColor</b><br>Change the text color of the contained text.</div>
	<div data-role="popup" id="pop_dsc_03b" class="ui-content"><b>edt.SetTextSize</b><br>Change the size of the contained text.</div>
	<div data-role="popup" id="pop_dsc_03c" class="ui-content"><b>edt.SetVisibility</b><br>Change the visibility of the control to one of the available modes:<br><strong>Show:</strong> visible<br><strong>Hide:</strong> invisible but still consuming space<br><strong>Gone:</strong> invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_03d" class="ui-content"><b>edt.Show</b><br>Set the visibility of the control to <docstr>“Show”</docstr>.</div>
	<div data-role="popup" id="pop_dsc_03e" class="ui-content"><b>edt.Tween</b><br>Performs an animation on the control.<br>The <strong>target</strong> object is for the position, size and rotation that the control has at the end of the animation.<br><br>The <strong>type</strong> specifies the behavior and the speed of the animation. Separated by a dot, you must also specify whether you want to apply this behavior to the beginning (In), end (Out), or to both (InOut) times of the animation.<br><br>With the amount of <strong>repeat</strong>s you can control how many times you want to play the animation.<br><br>If you have <strong>jojo</strong> activated, the animation will alternate between forward and backward playback, so that if the repetition value is odd, the control will be at the start position again at the end of the animation.<br><br>Finally the <strong>callback</strong> function will be called after the animation has finished. Well, it's about time!</div>
	<div data-role="popup" id="pop_dsc_03f" class="ui-content"><b>edt.Undo</b><br>Undo an action.</div>
</div>
</body>

</html>
