
<!DOCTYPE html>
<html>

<head>
	<title>CreateSprite</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateSprite</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>Creates a sprite object based on an image file containing a sprite or a spritesheet.</p>

		<div class="samp">
		spr = gfx.CreateSprite(
			<a href="#pop_str_ptf" data-transition="pop" data-rel="popup">file</a>,
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">group</a>,
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
			→ <b>game object:</b> CreateSprite
		</div>

		<p>To create a new Sprite just pass the image name as first parameter:<br>
		<br>
		<span class="samp samp-inline">gfx<span class="token punctuation">.</span><span class="token function">CreateSprite</span><span class="token punctuation">(</span> <span class="token string">"/Sys/Img/Bunny.png"</span><span class="token punctuation">,</span> <span class="token string">"bunnies"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span><br>
		<br>
		<strong>Spritesheets</strong> can be loaded in two ways:<br>
		<br>
		The simple one is a specific file pattern<br>
		<docstr>“Img/Sheetname_<b><a href="" onclick="app.ShowPopup('Number')">WIDTH</a></b>x<b><a href="" onclick="app.ShowPopup('Number')">HEIGHT</a></b>x<b><a href="" onclick="app.ShowPopup('Number')">SPRITE_SX</a></b>x<b><a href="" onclick="app.ShowPopup('Number')">SPRITE_SY</a></b>”</docstr> or<br>
		<docstr>“Img/Sheetname_strip<b><a href="" onclick="app.ShowPopup('Number')">TOTAL</a></b>_<b><a href="" onclick="app.ShowPopup('Number')">WIDTH</a></b>x<b><a href="" onclick="app.ShowPopup('Number')">HEIGHT</a></b>x<b><a href="" onclick="app.ShowPopup('Number')">SPRITE_SX</a></b>x<b><a href="" onclick="app.ShowPopup('Number')">SPRITE_SY</a></b>”</docstr><br>
		if you have a different amount of sprites than the rectangle of <i>spritesx * spritesy</i> sprites.<br>
		<br>
		Example from the downloadable demo <a href="https://ds.justplayer.de/uploads/grannies-and-zombies" onclick="return OpenUrl(this.href);">Grannies and Zombies</a>:</p>

		<div class="samp">
		granny <span class="token operator">=</span> gfx<span class="token punctuation">.</span><span class="token function">CreateSprite</span><span class="token punctuation">(</span> <span class="token string">"Img/Granny_1600x1000x8x5"</span><span class="token punctuation">,</span> <span class="token string">"granny"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
		zombie <span class="token operator">=</span> gfx<span class="token punctuation">.</span><span class="token function">CreateSprite</span><span class="token punctuation">(</span> <span class="token string">"Img/Zombie_strip35_1400x1000x7x5"</span><span class="token punctuation">,</span> <span class="token string">"zombie"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
		</div>

		<p>The second way is to create a SpriteSheet using the <a href="CreateSpriteSheet.htm" data-ajax="false">CreateSpriteSheet</a> method which might come handy if a single sprite has multiple animations or if a sprite is reused but using a different sprite sheet.</p>
		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Sprite</strong> object:</p>

		<div class="samp"><a href="#pop_dsc_001" data-transition="pop" data-rel="popup">added</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_002" data-transition="pop" data-rel="popup" class="baseFunc">alpha</a> → <b>Number:</b> <i>fraction (0..1)</i></div>
		<div class="samp"><a href="#pop_dsc_003" data-transition="pop" data-rel="popup" class="baseFunc">angle</a> → <b>Number:</b> <i>fraction (0..1)</i></div>
		<div class="samp"><a href="#pop_dsc_004" data-transition="pop" data-rel="popup">aspect</a> → <b>Number</b></div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup" class="baseFunc">Contains</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">y</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp"><a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">data</a> → <b>Object</b></div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">Flip</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">horiz</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">vert</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">GetFrame</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">Goto</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">frame</a> )
		</div>
		<div class="samp"><a href="#pop_dsc_00a" data-transition="pop" data-rel="popup" class="baseFunc">group</a> → <b>String</b></div>
		<div class="samp"><a href="#pop_dsc_00b" data-transition="pop" data-rel="popup" class="baseFunc">height</a> → <b>Number:</b> <i>fraction (0..1)</i></div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup" class="baseFunc">PauseTween</a>()
		</div>
		<div class="samp"><a href="#pop_dsc_00d" data-transition="pop" data-rel="popup" class="baseFunc">pivotX</a> → <b>Number:</b> <i>fraction (0..1)</i></div>
		<div class="samp"><a href="#pop_dsc_00e" data-transition="pop" data-rel="popup" class="baseFunc">pivotY</a> → <b>Number:</b> <i>fraction (0..1)</i></div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">Play</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">startFrame</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">speed</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">loop</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup">PlayRange</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">firstFrame</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">lastFrame</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">speed</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">loop</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup">PlayTo</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">frame</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup" class="baseFunc">PlayTween</a>()
		</div>
		<div class="samp"><a href="#pop_dsc_013" data-transition="pop" data-rel="popup" class="baseFunc">scaleX</a> → <b>Number:</b> <i>factor</i></div>
		<div class="samp"><a href="#pop_dsc_014" data-transition="pop" data-rel="popup" class="baseFunc">scaleY</a> → <b>Number:</b> <i>factor</i></div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup">SetLoop</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">loop</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup" class="baseFunc">SetMatrix</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">mtx</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup">SetPlaySpeed</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">speed</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup">SetRange</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">firstFrame</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">lastFrame</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">loop</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">play</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">speed</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup">SetSize</a>(
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">w</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">h</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup">SetSpriteSheet</a>(
			<a href="#pop_gvo_001" data-transition="pop" data-rel="popup">sheet</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01b" data-transition="pop" data-rel="popup">SetTexture</a>(
			<a href="#pop_gvo_002" data-transition="pop" data-rel="popup">tx</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01c" data-transition="pop" data-rel="popup" class="baseFunc">SetTween</a>(
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">target</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">duration</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">repeat</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">yoyo</a>,
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01d" data-transition="pop" data-rel="popup" class="baseFunc">StartTween</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01e" data-transition="pop" data-rel="popup" class="baseFunc">StepTween</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01f" data-transition="pop" data-rel="popup">Stop</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_020" data-transition="pop" data-rel="popup">StopAt</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">frame</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_021" data-transition="pop" data-rel="popup" class="baseFunc">Tween</a>(
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">target</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">duration</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">repeat</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">yoyo</a>,
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_022" data-transition="pop" data-rel="popup" class="baseFunc">Update</a>()
		</div>
		<div class="samp"><a href="#pop_dsc_023" data-transition="pop" data-rel="popup" class="baseFunc">visible</a> → <b>Boolean</b></div>
		<div class="samp"><a href="#pop_dsc_024" data-transition="pop" data-rel="popup" class="baseFunc">width</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_025" data-transition="pop" data-rel="popup">x</a> → <b>Number</b></div>
		<div class="samp"><a href="#pop_dsc_026" data-transition="pop" data-rel="popup">y</a> → <b>Number:</b> <i>fraction (0..1)</i></div>

	</div>

	<div data-role="popup" id="pop_gvo_001" class="ui-content"><b>game object:</b> <a href="CreateSpriteSheet.htm" data-ajax="false">SpriteSheet</a></div>
	<div data-role="popup" id="pop_gvo_002" class="ui-content"><b>game object:</b> <a href="CreateTexture.htm" data-ajax="false">Texture</a></div>
	<div data-role="popup" id="pop_std_bin" class="ui-content"><b>Boolean</b></div>
	<div data-role="popup" id="pop_std_num" class="ui-content"><b>Number</b></div>
	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>Number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>Number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_num_mls" class="ui-content"><b>Number:</b> <i>milliseconds</i></div>
	<div data-role="popup" id="pop_str_ptf" class="ui-content"><b>String:</b> <i>path to file ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“Linear.None”</docstr> or <docstr>“Quadratic.In/Out”</docstr> or <docstr>“Cubic.In/Out”</docstr> or <docstr>“Quartic.In/Out”</docstr> or <docstr>“Quintic.In/Out”</docstr> or <docstr>“Sinusoidal.In/Out”</docstr> or <docstr>“Exponential.In/Out”</docstr> or <docstr>“Circular.In/Out”</docstr> or <docstr>“Elastic.In/Out”</docstr> or <docstr>“Back.In/Out”</docstr> or <docstr>“Bounce.In/Out”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> Matrix</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">x</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">y</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">w</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">w</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): horizontal scale')">sw</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): vertical scale')">sh</a>, <a href="" onclick="app.ShowPopup('Number: angle in degrees (0..360)')">rot</a> }</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content">Indicates if the sprite has been added to the game</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content">The objects alpha value</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content">The rotation fraction of the object</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content">The aspect ratio of the sprite</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>spr.Contains</b><br>Checks if a point is contained in the sprite</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content">An object for saving individual extra properties.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>spr.Flip</b><br>Flips the sprite on the horizontal and/or the vertical axis.</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>spr.GetFrame</b><br>Returns the current frame</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>spr.Goto</b><br>Displays a specific frame of an animation</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content">The objects group identifier</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content">The height of the object</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>spr.PauseTween</b><br>Pause tweening.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content">The x pivot for rotations</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content">The y pivot for rotations</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>spr.Play</b><br>Start playing the sprite animation</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>spr.PlayRange</b><br>Start playing the sprite animation in a given frame range</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>spr.PlayTo</b><br>Play the animation until a specific frame is reached</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>spr.PlayTween</b><br>Resume tweening.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content">The horizontal scaling</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content">The vertical scaling</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>spr.SetLoop</b><br>Define if the animation should loop or stop at the end</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>spr.SetMatrix</b><br>Set the individual 2d transformation</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>spr.SetPlaySpeed</b><br>Define at which speed the animation will play. 1 equals to 60 fps</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>spr.SetRange</b><br>Define the frame range the animation should show.</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>spr.SetSize</b><br>Set the sprite size on the screen</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>spr.SetSpriteSheet</b><br>Change the animation to another.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>spr.SetTexture</b><br>Change the sprite texture to another.</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>spr.SetTween</b><br>Sets up tween methods and properties without playing it.</div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>spr.StartTween</b><br>Start tweening automatically on every rendered frame.</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>spr.StepTween</b><br>Updates a tween to the current time (if not paused).</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>spr.Stop</b><br>Stop playin the animation.</div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>spr.StopAt</b><br>Causes the animation to stop playing at a specific frame</div>
	<div data-role="popup" id="pop_dsc_021" class="ui-content"><b>spr.Tween</b><br>Performs an animation on the control.<br>The <strong>target</strong> object is for the position, size and rotation that the control has at the end of the animation.<br><br>The <strong>type</strong> specifies the behavior and the speed of the animation. Separated by a dot, you must also specify whether you want to apply this behavior to the beginning (In), end (Out), or to both (InOut) times of the animation.<br><br>With the amount of <strong>repeat</strong>s you can control how many times you want to play the animation.<br><br>If you have <strong>jojo</strong> activated, the animation will alternate between forward and backward playback, so that if the repetition value is odd, the control will be at the start position again at the end of the animation.<br><br>Finally the <strong>callback</strong> function will be called after the animation has finished. Well, it's about time!</div>
	<div data-role="popup" id="pop_dsc_022" class="ui-content"><b>spr.Update</b><br>Updates internal properties</div>
	<div data-role="popup" id="pop_dsc_023" class="ui-content">Indicates the objects visibility state</div>
	<div data-role="popup" id="pop_dsc_024" class="ui-content">The obects width</div>
	<div data-role="popup" id="pop_dsc_025" class="ui-content">X-position on the screen.</div>
	<div data-role="popup" id="pop_dsc_026" class="ui-content">Y-position on the screen.</div>
</div>
</body>

</html>
