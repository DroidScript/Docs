
<!DOCTYPE html>
<html>

<head>
	<title>CreateTEFilledIconLeft</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateTEFilledIconLeft</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>Creates a filled text input with icon on the left.</p>

		<div class="samp">
		tef = MUI.CreateTEFilledIconLeft(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a>,
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">icon</a>,
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">hint</a>,
			<a href="#pop_bin_001" data-transition="pop" data-rel="popup">label</a>,
			<a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )
			→ <b>Object</b>
		</div>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - No Label</h3>
			<div id="examp1" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        tef <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateTEFilledIconLeft</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token string">"Left"</span><span class="token punctuation">,</span> <span class="token string">"person"</span><span class="token punctuation">,</span> <span class="token string">"Type your name"</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>tef<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Dark With Label</h3>
			<div id="examp2" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Dark<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        tef <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateTEFilledIconLeft</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token string">"Left,Password"</span><span class="token punctuation">,</span> <span class="token string">"lock"</span><span class="token punctuation">,</span> <span class="token string">"Type your password"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>tef<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - SetOnEnter Callback</h3>
			<div id="examp3" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        tef <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateTEFilledIconLeft</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token string">"Left,Number"</span><span class="token punctuation">,</span> <span class="token string">"call"</span><span class="token punctuation">,</span> <span class="token string">"Type your number"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><br>
				        tef<span class="token punctuation">.</span><span class="token function">SetOnEnter</span><span class="token punctuation">(</span>OnEnter<span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>tef<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">GetText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp3 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp3 )">      Run      </a>
			</div>
		</div>


		<h3>Methods</h3>
		<p>The following methods are available on the <strong>TEFilledIconLeft</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup" class="baseFunc">ClearFocus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">ClearHistory</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup" class="baseFunc">Focus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup">GetCursorLine</a>() → <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">GetCursorPos</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup">GetSelectedText</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">GetSelectionEnd</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">GetSelectionStart</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup" class="baseFunc">GetText</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup" class="baseFunc">GetType</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup" class="baseFunc">GetVisibility</a>() → <b>String:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup" class="baseFunc">Gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">InsertText</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">start</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup" class="baseFunc">IsEnabled</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup" class="baseFunc">IsOverlap</a>(
			<a href="#pop_std_dso" data-transition="pop" data-rel="popup">obj</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">depth</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup" class="baseFunc">IsVisible</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup">Redo</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup">ReplaceText</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">start</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">end</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup">SetCursorPos</a>(
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">position</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup" class="baseFunc">SetMargins</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup" class="baseFunc">SetOnChange</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup">SetOnEnter</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup">SetOnIconTouch</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup" class="baseFunc">SetOnTouch</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup" class="baseFunc">SetPosition</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup" class="baseFunc">SetText</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">text</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01b" data-transition="pop" data-rel="popup">Undo</a>()
		</div>

	</div>

	<div data-role="popup" id="pop_bin_001" class="ui-content"><b>Boolean:</b> Show or hide label</div>
	<div data-role="popup" id="pop_std_dso" class="ui-content"><b>app object</b></div>
	<div data-role="popup" id="pop_std_num" class="ui-content"><b>Number</b></div>
	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>Number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>Number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_str_col" class="ui-content"><b>String:</b> <i><br>  hexadecimal: <docstr>“#rrggbb”</docstr>, <docstr>“#aarrggbb”</docstr><br>  colourName: <docstr>“red”</docstr>, <docstr>“green”</docstr>, ...</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“DS TextEdit options”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“Material icon font”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“Hint or label text”</docstr></div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>String:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>tef.ClearFocus</b><br>Removes the focus of the control so that the user no longer has immediate access to it.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>tef.ClearHistory</b><br>Clear input history</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>tef.Focus</b><br>Set the focus to the control so that the user can interact with it immediately.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>tef.GetCursorLine</b><br>Get cursor line</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>tef.GetCursorPos</b><br>Get cursor position</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>tef.GetSelectedText</b><br>Get selected text</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>tef.GetSelectionEnd</b><br>Get selection end</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>tef.GetSelectionStart</b><br>Get selection start</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>tef.GetText</b><br>Returns the current displayed text of the control.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>tef.GetType</b><br>Get the type of MUI control.</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>tef.GetVisibility</b><br>Returns the current visibility state of the control. The Values are:<br><strong>Show</strong>: visible<br><strong>Hide</strong>: invisible but still consuming space<br><strong>Gone</strong>: invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>tef.Gone</b><br>Hides the control without consuming any more layout space as if it were never there.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>tef.InsertText</b><br>Inserts a string at a given position.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>tef.IsEnabled</b><br>Returns whether the control is currently useable by the user.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>tef.IsOverlap</b><br>Returns whether the control overlaps with another by a given distance.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>tef.IsVisible</b><br>Returns whether the control is currently visible to the user, ignoring overlaying controls.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>tef.Redo</b><br>Redo an undone action.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>tef.ReplaceText</b><br>Replaces a given range in the text with some string.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>tef.SetCursorPos</b><br>Change the curernt cursor position.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>tef.SetMargins</b><br>Define a distance to other controls on each side of the control.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>tef.SetOnChange</b><br>Called when the containing data has been changed by the user.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>tef.SetOnEnter</b><br>Define a callback function which is called when the user pressed 'Done' or 'Enter' on the keyboard</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>tef.SetOnIconTouch</b><br>Calls a function when icon is touch</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>tef.SetOnTouch</b><br>Define a callback function that is called when the user touches the control.</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>tef.SetPosition</b><br>Defines the position and size for the control if the parent is an absolute layout.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>tef.SetText</b><br>Change the currently displayed text in the control.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>tef.Undo</b><br>Undo an action</div>
</div>
</body>

</html>
