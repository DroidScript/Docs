
<!DOCTYPE html>
<html>

<head>
	<title>CreateDataTable</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateDataTable</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>Data tables display sets of data across rows and columns.</p>

		<div class="samp">
		tbl = MUI.CreateDataTable(
			<a href="#pop_lst_001" data-transition="pop" data-rel="popup">columns</a>,
			<a href="#pop_lst_002" data-transition="pop" data-rel="popup">values</a>,
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Object</b>
		</div>

		<p>You can pass options and and configure your header and rows to add specific functionality.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic</h3>
			<div id="examp1" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"FillXY,VCenter"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"ID"</span><span class="token punctuation">,</span> <span class="token string">"Name"</span><span class="token punctuation">,</span> <span class="token string">"Age"</span><span class="token punctuation">,</span> <span class="token string">"Color"</span><span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"1:Robb Stark:14:Blue"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"2:Sansa Stark:11:Teal"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"3:Arya Stark:9:Green"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"4:Bran Stark:7:Orange"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"5:Rickon Stark:Grey"</span><br>
				        <span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> table <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateDataTable</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token number">0.96</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>

		<p>Add <strong>Sortable</strong> to the header type if you want the column to be sortable when click. You can also add the <strong>Numeric</strong> type to right align text for number values.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Sortable and Numeric Column</h3>
			<div id="examp2" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"FillXY,VCenter"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"ID"</span><span class="token punctuation">,</span> <span class="token string">"Name:Sortable"</span><span class="token punctuation">,</span> <span class="token string">"Age:Sortable"</span><span class="token punctuation">,</span> <span class="token string">"Color"</span><span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"1:Robb Stark:14:Blue"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"2:Sansa Stark:11:Teal"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"3:Arya Stark:9:Green"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"4:Bran Stark:7:Orange"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"5:Rickon Stark:2:Grey"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"6:Theon Greyjoy:18:Brown"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"7:Jon Snow:11:Red"</span><br>
				        <span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> table <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateDataTable</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token number">0.96</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>

		<p>Add <strong>Selectable</strong> option to make the rows in the table selectable.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Selectable and Dark</h3>
			<div id="examp3" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Dark<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"FillXY,VCenter"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"ID"</span><span class="token punctuation">,</span> <span class="token string">"Name:Sortable"</span><span class="token punctuation">,</span> <span class="token string">"Age"</span><span class="token punctuation">,</span> <span class="token string">"Color"</span><span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"1:Robb Stark:14:Blue"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"2:Sansa Stark:11:Teal"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"3:Arya Stark:9:Green"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"4:Bran Stark:7:Orange"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"5:Rickon Stark:2:Grey"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"6:Theon Greyjoy:18:Brown"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"7:Jon Snow:11:Red"</span><br>
				        <span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> table <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateDataTable</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token number">0.96</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token string">"Selectable"</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp3 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp3 )">      Run      </a>
			</div>
		</div>

		<p>You can also add a footer into your table if you want controls associated with table interactions.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - With Footer</h3>
			<div id="examp4" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Dark<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"FillXY,VCenter"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"ID"</span><span class="token punctuation">,</span> <span class="token string">"Name:Sortable"</span><span class="token punctuation">,</span> <span class="token string">"Age"</span><span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token string">"1:Robb Stark:14"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"2:Sansa Stark:11"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"3:Arya Stark:9"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"4:Bran Stark:7"</span><span class="token punctuation">,</span><br>
				            <span class="token string">"5:Rickon Stark:2"</span><br>
				        <span class="token punctuation">]</span><br>
				        <span class="token keyword">var</span> table <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateDataTable</span><span class="token punctuation">(</span>headers<span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token number">0.96</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token string">"Selectable"</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> ftr <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">AddFooter</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"Horizontal, Right, VCenter"</span><span class="token punctuation">,</span> <span class="token number">0.09</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> fBtn <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateButtonFlat</span><span class="token punctuation">(</span><span class="token string">'REMOVE SELECTED'</span><span class="token punctuation">)</span><br>
				        fBtn<span class="token punctuation">.</span><span class="token function">SetEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><br>
				        ftr<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>fBtn<span class="token punctuation">)</span><br>
				        fBtn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><br>
				            table<span class="token punctuation">.</span><span class="token function">GetSelectedRows</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span><span class="token punctuation">{</span><br>
				                table<span class="token punctuation">.</span><span class="token function">RemoveRows</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><br>
				            <span class="token punctuation">}</span><span class="token punctuation">)</span><br>
				        <span class="token punctuation">}</span><span class="token punctuation">)</span><br>
				        table<span class="token punctuation">.</span><span class="token function">SetOnSelectionStatus</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br>
				            <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> fBtn<span class="token punctuation">.</span><span class="token function">SetEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><br>
				            <span class="token keyword">else</span> fBtn<span class="token punctuation">.</span><span class="token function">SetEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><br>
				        <span class="token punctuation">}</span><span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp4 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp4 )">      Run      </a>
			</div>
		</div>

		<h3>Methods</h3>
		<p>The following methods are available on the <strong>DataTable</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">AddFooter</a>(
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a>,
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">height</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">AppendRow</a>(
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">row</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup" class="baseFunc">ClearFocus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup" class="baseFunc">Focus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsHeight</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsWidth</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup" class="baseFunc">GetHeight</a>(
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup" class="baseFunc">GetLeft</a>(
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup" class="baseFunc">GetParent</a>() → <b>app object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup" class="baseFunc">GetPosition</a>(
			<a href="#pop_str_007" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Object:</b> {
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">bottom</a> }
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">GetSelectedRows</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup" class="baseFunc">GetTop</a>(
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup" class="baseFunc">GetVisibility</a>() → <b>String:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup" class="baseFunc">GetWidth</a>(
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup" class="baseFunc">Gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup" class="baseFunc">Hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup" class="baseFunc">IsEnabled</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup" class="baseFunc">IsOverlap</a>(
			<a href="#pop_std_dso" data-transition="pop" data-rel="popup">obj</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">depth</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup" class="baseFunc">IsVisible</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup">PrependRow</a>(
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">row</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup">RemoveRows</a>(
			<a href="#pop_lst_004" data-transition="pop" data-rel="popup">index</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup" class="baseFunc">SetEnabled</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">enable</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup" class="baseFunc">SetMargins</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_00b" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup">SetOnProgress</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup">SetOnReady</a>(
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup">SetOnSelectionStatus</a>(
			<a href="#pop_fnc_004" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01b" data-transition="pop" data-rel="popup" class="baseFunc">SetOnTouch</a>(
			<a href="#pop_fnc_005" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01c" data-transition="pop" data-rel="popup" class="baseFunc">SetPosition</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01d" data-transition="pop" data-rel="popup">SetRows</a>(
			<a href="#pop_lst_005" data-transition="pop" data-rel="popup">values</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01e" data-transition="pop" data-rel="popup" class="baseFunc">SetVisibility</a>(
			<a href="#pop_str_00d" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01f" data-transition="pop" data-rel="popup" class="baseFunc">Show</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_020" data-transition="pop" data-rel="popup" class="baseFunc">Tween</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">target</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">duration</a>,
			<a href="#pop_str_00e" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">repeat</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">yoyo</a>,
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>

	</div>

	<div data-role="popup" id="pop_std_bin" class="ui-content"><b>Boolean</b></div>
	<div data-role="popup" id="pop_std_dso" class="ui-content"><b>app object</b></div>
	<div data-role="popup" id="pop_std_num" class="ui-content"><b>Number</b></div>
	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>Number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>Number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_num_mls" class="ui-content"><b>Number:</b> <i>milliseconds</i></div>
	<div data-role="popup" id="pop_num_001" class="ui-content"><b>Number:</b> Fraction of the screen width</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>Number:</b> Fraction of the screen height</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>Number:</b> A fraction of the screen height.</div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“Selectable”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“Type of layout. Can be Linear”</docstr> or <docstr>“Absolute”</docstr> or <docstr>“Frame. Default to Linear”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“A comma separated layout options. Default to Horizontal”</docstr> or <docstr>“Right”</docstr> or <docstr>“VCenter”</docstr></div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>String:</b> <docstr>“A colon ':' separated entries for the new row.”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_str_007" class="ui-content"><b>String:</b> <docstr>“screen”</docstr>, <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_str_00b" class="ui-content"><b>String:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>
	<div data-role="popup" id="pop_str_00d" class="ui-content"><b>String:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr></div>
	<div data-role="popup" id="pop_str_00e" class="ui-content"><b>String:</b> <docstr>“Linear.None”</docstr> or <docstr>“Quadratic.In/Out”</docstr> or <docstr>“Cubic.In/Out”</docstr> or <docstr>“Quartic.In/Out”</docstr> or <docstr>“Quintic.In/Out”</docstr> or <docstr>“Sinusoidal.In/Out”</docstr> or <docstr>“Exponential.In/Out”</docstr> or <docstr>“Circular.In/Out”</docstr> or <docstr>“Elastic.In/Out”</docstr> or <docstr>“Back.In/Out”</docstr> or <docstr>“Bounce.In/Out”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">x</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">y</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">w</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">w</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): horizontal scale')">sw</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): vertical scale')">sh</a>, <a href="" onclick="app.ShowPopup('Number: angle in degrees (0..360)')">rot</a> }</div>
	<div data-role="popup" id="pop_lst_001" class="ui-content"><b>List:</b> An array of strings of the form <a href="" onclick="app.ShowPopup('Type for column header')">Name</a>. Where 'Name' is the column name and 'Type is the column type [Can be Sortable or Numeric]'</div>
	<div data-role="popup" id="pop_lst_002" class="ui-content"><b>List:</b> An array of strings of the form <a href="" onclick="app.ShowPopup('Val2')">Val1</a>:Val3...</div>
	<div data-role="popup" id="pop_lst_003" class="ui-content"><b>List:</b> An array of indexes.</div>
	<div data-role="popup" id="pop_lst_004" class="ui-content"><b>List:</b> An array of indexes you want to remove. It can also be just a number for a single index.</div>
	<div data-role="popup" id="pop_lst_005" class="ui-content"><b>List:</b> A comma separated strings of the form "<a href="" onclick="app.ShowPopup('Val2')">Val1</a>:Val3:..."</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="switchPopup(this, '#pop_lst_003')" data-transition="pop" data-rel="popup">indexes</a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('Number: The progress of the loading table from 0-100')">value</a>
	)</div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_fnc_004" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('Boolean: True if there is an active selection,  false otherwise.')">isTrue</a>
	)</div>
	<div data-role="popup" id="pop_fnc_005" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String: “The row data separated by colon (:)”')">row</a>,
		<a href="" onclick="app.ShowPopup('Number: integer: The index of row being click.')">index</a>
	)</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>tbl.AddFooter</b><br>Add a footer layout to the table where you can add controls.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>tbl.AppendRow</b><br>Add a row at the end of the table. The same as AddRow</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>tbl.ClearFocus</b><br>Removes the focus of the control so that the user no longer has immediate access to it.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>tbl.Focus</b><br>Set the focus to the control so that the user can interact with it immediately.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>tbl.GetAbsHeight</b><br>Get the absolute height of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>tbl.GetAbsWidth</b><br>Get the absolute width of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>tbl.GetHeight</b><br>Get the height of the control as screen height relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>tbl.GetLeft</b><br>Get the distance from the control to the left parent border as width relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>tbl.GetParent</b><br>Returns the parent control object where the object was added to - commonly a layout.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>tbl.GetPosition</b><br>Returns data about the position and size of the control.<br>If the <strong>screen</strong> option is given the position on the screen will be returned. Otherwise relative to the parent control.<br>The <b>px</b> options turns the relative values into pixels.</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>tbl.GetSelectedRows</b><br>Get the selected rows. This function is synchronous. You need to pass a callback.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>tbl.GetTop</b><br>Get the distance from the control to the upper parent border as height relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>tbl.GetVisibility</b><br>Returns the current visibility state of the control. The Values are:<br><strong>Show</strong>: visible<br><strong>Hide</strong>: invisible but still consuming space<br><strong>Gone</strong>: invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>tbl.GetWidth</b><br>Get the width of the control as screen width relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>tbl.Gone</b><br>Hides the control without consuming any more layout space as if it were never there.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>tbl.Hide</b><br>Hide the control but keep the layout space free.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>tbl.IsEnabled</b><br>Returns whether the control is currently useable by the user.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>tbl.IsOverlap</b><br>Returns whether the control overlaps with another by a given distance.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>tbl.IsVisible</b><br>Returns whether the control is currently visible to the user, ignoring overlaying controls.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>tbl.PrependRow</b><br>Add a row at the beginning of the table.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>tbl.RemoveRows</b><br>Remove a row at a given index or indexes</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>tbl.SetEnabled</b><br>En/Disable the control physically and visually so that the user can/can not access the control. Events like OnTouch will still be fired.</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>tbl.SetMargins</b><br>Define a distance to other controls on each side of the control.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>tbl.SetOnProgress</b><br>Calls a function when the Table is on progress</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>tbl.SetOnReady</b><br>Calls a function when the Table is ready and rendered already.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>tbl.SetOnSelectionStatus</b><br>Calls a function when the selection status of the table changes.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>tbl.SetOnTouch</b><br>Calls a function when a row in the table is click.</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>tbl.SetPosition</b><br>Defines the position and size for the control if the parent is an absolute layout.</div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>tbl.SetRows</b><br>Set the rows of the table to a new values of data.</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>tbl.SetVisibility</b><br>Change the visibility of the control to one of the available modes:<br><strong>Show:</strong> visible<br><strong>Hide:</strong> invisible but still consuming space<br><strong>Gone:</strong> invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>tbl.Show</b><br>Set the visibility of the control to <docstr>“Show”</docstr>.</div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>tbl.Tween</b><br>Performs an animation on the control.<br>The <strong>target</strong> object is for the position, size and rotation that the control has at the end of the animation.<br><br>The <strong>type</strong> specifies the behavior and the speed of the animation. Separated by a dot, you must also specify whether you want to apply this behavior to the beginning (In), end (Out), or to both (InOut) times of the animation.<br><br>With the amount of <strong>repeat</strong>s you can control how many times you want to play the animation.<br><br>If you have <strong>jojo</strong> activated, the animation will alternate between forward and backward playback, so that if the repetition value is odd, the control will be at the start position again at the end of the animation.<br><br>Finally the <strong>callback</strong> function will be called after the animation has finished. Well, it's about time!</div>
</div>
</body>

</html>
