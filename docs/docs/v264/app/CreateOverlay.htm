
<!DOCTYPE html>
<html>

<head>
	<title>CreateOverlay</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateOverlay</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>Overlays are displayed above everything on the screen - even on the home screen or above other applications.</p>

		<div class="samp">
		ovl = app.CreateOverlay(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
		</div>

		<p>Overlays can be created from services as well which makes them almost perfect for interacting with them.<br>
		<br>
		<div class='premHint'><strong>Note: This function is a premium feature. Please consider subscribing to Premium to use this feature and support DroidScript in its further development.</strong></div></p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Memory Monitor</h3>
			<div id="examp1" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Portrait<span class="token punctuation">;</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ToBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"Linear"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    img <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateImage</span><span class="token punctuation">(</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    img<span class="token punctuation">.</span><span class="token function">SetBackColor</span><span class="token punctuation">(</span> <span class="token string">"#66333333"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    img<span class="token punctuation">.</span><span class="token function">SetAutoUpdate</span><span class="token punctuation">(</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> img <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    ovl <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateOverlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    ovl<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span><span class="token function">GetTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">Animate</span><span class="token punctuation">(</span> Update<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">var</span> lst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">Update</span><span class="token punctuation">(</span> <span class="token parameter">time</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token keyword">var</span> mem <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">GetMemoryInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span> <span class="token number">100</span> <span class="token operator">*</span> mem<span class="token punctuation">.</span>avail <span class="token operator">/</span> mem<span class="token punctuation">.</span>total <span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lst <span class="token operator">=</span> lst<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">100</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    img<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    img<span class="token punctuation">.</span><span class="token function">SetPaintColor</span><span class="token punctuation">(</span> <span class="token string">"red"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    img<span class="token punctuation">.</span><span class="token function">DrawLine</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> mem<span class="token punctuation">.</span>threshold <span class="token operator">/</span> mem<span class="token punctuation">.</span>total<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> mem<span class="token punctuation">.</span>threshold <span class="token operator">/</span> mem<span class="token punctuation">.</span>total <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    img<span class="token punctuation">.</span><span class="token function">SetPaintColor</span><span class="token punctuation">(</span> <span class="token string">"white"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    img<span class="token punctuation">.</span><span class="token function">DrawSamples</span><span class="token punctuation">(</span> lst<span class="token punctuation">,</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    img<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Overlay</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">AddLayout</a>(
			<a href="#pop_dso_001" data-transition="pop" data-rel="popup">layout</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">Batch</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">properties</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup" class="baseFunc">GetParent</a>() → <b>app object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup">GetType</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">RemoveLayout</a>(
			<a href="#pop_dso_001" data-transition="pop" data-rel="popup">layout</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">SetPosition</a>(
			<a href="#pop_dso_001" data-transition="pop" data-rel="popup">layout</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">options</a> )
		</div>

	</div>

	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>Number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <i>comma <docstr>“,”</docstr> separated:</i> <docstr>“ShowWhenLocked”</docstr>, <docstr>“TurnScreenOn”</docstr>, <docstr>“KeepScreenOn”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('List: args')">COMMAND</a> }</div>
	<div data-role="popup" id="pop_dso_001" class="ui-content"><b>app object:</b> <a href="CreateLayout.htm" data-ajax="false">Layout</a></div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>ovl.AddLayout</b><br>Adds a layout to the overlay.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>ovl.Batch</b><br>Batch method calls to be able to set all object's properties at once.<br>Note that you need to specify each parameter (use <docstr>“”</docstr> or <span class="token keyword">null</span> to leave some out)<br>Inherited methods can be called by appending an underscore to the function name (ie. txt<span class="token punctuation">.</span><span class="token function">Batch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">SetBackColor_</span><span class="token operator">:</span> <span class="token punctuation">[</span><docstr>“red”</docstr><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>ovl.GetParent</b><br>Returns the parent control object where the object was added to - commonly a layout.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>ovl.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>ovl.RemoveLayout</b><br>Removes a layout from the overlay.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>ovl.SetPosition</b><br>Defines the position of a contained layout.</div>
</div>
</body>

</html>
