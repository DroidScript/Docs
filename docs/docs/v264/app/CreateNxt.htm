
<!DOCTYPE html>
<html>

<head>
	<title>CreateNxt</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateNxt</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>The NXT object is used to manage the connection between your Android phone and the Lego Mindstorms NXT brick.</p>

		<div class="samp">
		nxt = app.CreateNxt( ) → <b>app object:</b> Nxt
		</div>

		<p><div class='deprHint'><strong>Note: This function is deprecated. Please install and visit the NXT-Docs from the Plugins page</strong></div></p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <b id="snip1" style="font-size:100%">nxt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateNxt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    nxt<span class="token punctuation">.</span><span class="token function">SetOnConnected</span><span class="token punctuation">(</span> OnConnected <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    nxt<span class="token punctuation">.</span><span class="token function">ShowDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></b><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    nxt<span class="token punctuation">.</span><span class="token function">Beep</span><span class="token punctuation">(</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip1 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Auto Connect</h3>
			<div id="examp2" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    nxt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateNxt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <b id="snip2" style="font-size:100%"><span class="token keyword">var</span> deviceName <span class="token operator">=</span> <span class="token string">"myNXTbrick"</span><span class="token punctuation">;</span><br>
				    <span class="token keyword">var</span> paired <span class="token operator">=</span> nxt<span class="token punctuation">.</span><span class="token function">IsPaired</span><span class="token punctuation">(</span> deviceName <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token keyword">if</span> <span class="token punctuation">(</span>paired<span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        app<span class="token punctuation">.</span><span class="token function">ShowProgress</span><span class="token punctuation">(</span> <span class="token string">"Connecting to "</span> <span class="token operator">+</span> deviceName <span class="token operator">+</span> <span class="token string">"..."</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				            nxt<span class="token punctuation">.</span><span class="token function">SetOnConnect</span><span class="token punctuation">(</span> nxt_OnConnect <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				            nxt<span class="token punctuation">.</span><span class="token function">Connect</span><span class="token punctuation">(</span> deviceName <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span></b><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">nxt_OnConnect</span><span class="token punctuation">(</span> <span class="token parameter">success<span class="token punctuation">,</span> nxt</span> <span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token keyword">if</span><span class="token punctuation">(</span> success <span class="token punctuation">)</span> <span class="token punctuation">{</span><br>
				        app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"Connected to: "</span> <span class="token operator">+</span> nxt<span class="token punctuation">.</span><span class="token function">GetBtName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" : "</span> <span class="token operator">+</span> nxt<span class="token punctuation">.</span><span class="token function">GetBtAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				        nxt<span class="token punctuation">.</span><span class="token function">Beep</span><span class="token punctuation">(</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">200</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><br>
				    <span class="token keyword">else</span> app<span class="token punctuation">.</span><span class="token function">Alert</span><span class="token punctuation">(</span> <span class="token string">"Failed to connect!"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    app<span class="token punctuation">.</span><span class="token function">HideProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( snip2 )">    Copy    </a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Sensors</h3>
			<div id="examp3" style="font-size:70%">
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    nxt <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateNxt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    lay <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span> <span class="token string">"linear"</span><span class="token punctuation">,</span> <span class="token string">"FillXY,VCenter"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token string">"Color,Distance,Light,Mail,Sound,Touch"</span><br>
				    spnType <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateSpinner</span><span class="token punctuation">(</span> list<span class="token punctuation">,</span> <span class="token number">.3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    spnType<span class="token punctuation">.</span><span class="token function">SetOnChange</span><span class="token punctuation">(</span> spnType_OnChange <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> spnType <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    spnInput <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateSpinner</span><span class="token punctuation">(</span> <span class="token string">"1,2,3,4"</span><span class="token punctuation">,</span> <span class="token number">.3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> spnInput <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    btn <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateButton</span><span class="token punctuation">(</span> <span class="token string">"Measure"</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">.1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    btn<span class="token punctuation">.</span><span class="token function">SetOnTouch</span><span class="token punctuation">(</span> ReadSensor <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span> btn <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span> lay <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">spnType_OnChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">SimulateTouch</span><span class="token punctuation">(</span> spnInput <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">ReadSensor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token string">"invalid"</span><span class="token punctuation">,</span> inp <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>spnInput<span class="token punctuation">.</span><span class="token function">GetText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <br>
				    <span class="token keyword">switch</span><span class="token punctuation">(</span> spnType<span class="token punctuation">.</span><span class="token function">GetText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">case</span> <span class="token string">"Color"</span><span class="token operator">:</span> res <span class="token operator">=</span> nxt<span class="token punctuation">.</span><span class="token function">ToColorName</span><span class="token punctuation">(</span> nxt<span class="token punctuation">.</span><span class="token function">ReadColorSensor</span><span class="token punctuation">(</span> inp<span class="token punctuation">,</span> <span class="token string">"ColorDetect"</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><br>
				        <span class="token keyword">case</span> <span class="token string">"Distance"</span><span class="token operator">:</span> res <span class="token operator">=</span> nxt<span class="token punctuation">.</span><span class="token function">ReadDistanceSensor</span><span class="token punctuation">(</span> inp <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" cm"</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><br>
				        <span class="token keyword">case</span> <span class="token string">"Light"</span><span class="token operator">:</span> res <span class="token operator">=</span> nxt<span class="token punctuation">.</span><span class="token function">ReadLightSensor</span><span class="token punctuation">(</span> inp<span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><br>
				        <span class="token keyword">case</span> <span class="token string">"Mail"</span><span class="token operator">:</span> res <span class="token operator">=</span> nxt<span class="token punctuation">.</span><span class="token function">ReadMail</span><span class="token punctuation">(</span> inp<span class="token punctuation">,</span> <span class="token string">"Text"</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><br>
				        <span class="token keyword">case</span> <span class="token string">"Sound"</span><span class="token operator">:</span> res <span class="token operator">=</span> nxt<span class="token punctuation">.</span><span class="token function">ReadSoundSensor</span><span class="token punctuation">(</span> inp<span class="token punctuation">,</span> <span class="token string">"dB"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><br>
				        <span class="token keyword">case</span> <span class="token string">"Touch"</span><span class="token operator">:</span> res <span class="token operator">=</span> nxt<span class="token punctuation">.</span><span class="token function">ReadTouchSensor</span><span class="token punctuation">(</span> inp <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> res <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				    <span class="token keyword">else</span> app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span> <span class="token string">"No Value"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp3 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp3 )">      Run      </a>
			</div>
		</div>


		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Nxt</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">Batch</a>(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">properties</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">Beep</a>(
			<a href="#pop_num_hrz" data-transition="pop" data-rel="popup">frequency</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">duration</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">Brake</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">motors</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup">CheckConnection</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">Connect</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup">Disconnect</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">Drive</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">motors</a>,
			<a href="#pop_num_prc" data-transition="pop" data-rel="popup">power</a>,
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">rotations</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">FileFindFirst</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">pattern</a> )
			→ <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">FileFindNext</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">handle</a> )
			→ <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">GetBtAddress</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">GetBtName</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">GetCurrentProgram</a>() → <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">GetRotationCount</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">motor</a> )
			→ <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup">GetType</a>() → <b>String:</b> <docstr>“Nxt”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">IsBluetoothEnabled</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup">IsConnected</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup" class="baseFunc">IsEnabled</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup">IsMotorIdle</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">motor</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup">IsPaired</a>(
			<a href="#pop_std_str" data-transition="pop" data-rel="popup">name</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup">PlaySoundFile</a>(
			<a href="#pop_str_ptf" data-transition="pop" data-rel="popup">file</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">repeat</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup">ReadColorSensor</a>(
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">input</a>,
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">mode</a> )
			→ <b>Number:</b> <i>integer:</i> 1..6 or 0..1023
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup">ReadDistanceSensor</a>(
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">input</a> )
			→ <b>Number:</b> <i>float</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup">ReadLightSensor</a>(
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">input</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">active</a> )
			→ <b>Number:</b> <i>integer:</i> 0..100
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup">ReadMail</a>(
			<a href="#pop_num_006" data-transition="pop" data-rel="popup">mailbox</a>,
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">remove</a> )
			→ <b>String</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup">ReadSoundSensor</a>(
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">input</a>,
			<a href="#pop_str_007" data-transition="pop" data-rel="popup">mode</a> )
			→ <b>Number:</b> <i>float</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup">ReadTouchSensor</a>(
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">input</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_01b" data-transition="pop" data-rel="popup">RequestEnable</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01c" data-transition="pop" data-rel="popup">Reset</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">motors</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01d" data-transition="pop" data-rel="popup">SendMail</a>(
			<a href="#pop_num_006" data-transition="pop" data-rel="popup">mailbox</a>,
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_mul_001" data-transition="pop" data-rel="popup">message</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01e" data-transition="pop" data-rel="popup">SetInvert</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">invert</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_01f" data-transition="pop" data-rel="popup">SetLampColor</a>(
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">input</a>,
			<a href="#pop_str_00a" data-transition="pop" data-rel="popup">color</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_020" data-transition="pop" data-rel="popup">SetOnConnect</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_021" data-transition="pop" data-rel="popup">SetOnConnected</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_022" data-transition="pop" data-rel="popup">ShowDevices</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_023" data-transition="pop" data-rel="popup">StartProgram</a>(
			<a href="#pop_str_pth" data-transition="pop" data-rel="popup">name</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_024" data-transition="pop" data-rel="popup">Stop</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">motors</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_025" data-transition="pop" data-rel="popup">StopProgram</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_026" data-transition="pop" data-rel="popup">ToColorName</a>(
			<a href="#pop_num_00b" data-transition="pop" data-rel="popup">val</a> )
			→ <b>String:</b> <docstr>“black”</docstr> or <docstr>“blue”</docstr> or <docstr>“green”</docstr> or <docstr>“yellow”</docstr> or <docstr>“red”</docstr> or <docstr>“white”</docstr>
		</div>

	</div>

	<div data-role="popup" id="pop_std_bin" class="ui-content"><b>Boolean</b></div>
	<div data-role="popup" id="pop_std_str" class="ui-content"><b>String</b></div>
	<div data-role="popup" id="pop_num_hrz" class="ui-content"><b>Number:</b> <i>hertz</i></div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>Number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_num_mls" class="ui-content"><b>Number:</b> <i>milliseconds</i></div>
	<div data-role="popup" id="pop_num_prc" class="ui-content"><b>Number:</b> <i>percent</i></div>
	<div data-role="popup" id="pop_num_001" class="ui-content"><b>Number:</b> <i>percent:</i> -100..100</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>Number:</b> <i>float:</i> 0 or rotations</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>Number:</b> <i>integer:</i> 1</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>Number:</b> <i>integer:</i> 1..4</div>
	<div data-role="popup" id="pop_num_006" class="ui-content"><b>Number:</b> <i>integer:</i> 1..10</div>
	<div data-role="popup" id="pop_num_00b" class="ui-content"><b>Number:</b> <i>integer:</i> 1..6</div>
	<div data-role="popup" id="pop_str_ptf" class="ui-content"><b>String:</b> <i>path to file ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_str_pth" class="ui-content"><b>String:</b> <i>path to file or folder ( <docstr>“/absolute/...”</docstr> or <docstr>“relative/...”</docstr> )</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“A”</docstr>, <docstr>“B”</docstr>, <docstr>“C”</docstr> or <docstr>“ABC”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“ColorDetect”</docstr> or <docstr>“LightSense”</docstr> or <docstr>“RedSense”</docstr> or <docstr>“GreenSense”</docstr> or <docstr>“BlueSense”</docstr></div>
	<div data-role="popup" id="pop_str_006" class="ui-content"><b>String:</b> <docstr>“Text”</docstr> or <docstr>“Number”</docstr> or <docstr>“Logic”</docstr></div>
	<div data-role="popup" id="pop_str_007" class="ui-content"><b>String:</b> <docstr>“<a href="" onclick="app.ShowPopup('Decibels')">DB</a>”</docstr> or <docstr>“<a href="" onclick="app.ShowPopup('A-weighted Decibels')">DbA</a>”</docstr></div>
	<div data-role="popup" id="pop_str_00a" class="ui-content"><b>String:</b> <i><br>  hexadecimal: <docstr>“#rrggbb”</docstr>, <docstr>“#aarrggbb”</docstr><br>  colourName: <docstr>“red”</docstr>, <docstr>“green”</docstr>, ...:</i> <docstr>““White”</docstr>” or <docstr>““Red”</docstr>” or <docstr>““Green”</docstr>” or <docstr>““Blue”</docstr>” or <docstr>““Off”</docstr>”</div>
	<div data-role="popup" id="pop_mul_001" class="ui-content"><b>String</b><br><b>Number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('List: args')">COMMAND</a> }</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('Boolean')">connected</a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>nxt.Batch</b><br>Batch method calls to be able to set all object's properties at once.<br>Note that you need to specify each parameter (use <docstr>“”</docstr> or <span class="token keyword">null</span> to leave some out)<br>Inherited methods can be called by appending an underscore to the function name (ie. txt<span class="token punctuation">.</span><span class="token function">Batch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">SetBackColor_</span><span class="token operator">:</span> <span class="token punctuation">[</span><docstr>“red”</docstr><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>nxt.Beep</b><br>Play tone with given frequency for a given time in milliseconds.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>nxt.Brake</b><br>Brakes motors by lowering the input power.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>nxt.CheckConnection</b><br>Check whether phone/tablet is connected to the NXT.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>nxt.Connect</b><br>Connects to the NXT device via Bluetooth.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>nxt.Disconnect</b><br>Disconnect Phone/Tablet from NXT.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>nxt.Drive</b><br>commands NXT to drive motors</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>nxt.FileFindFirst</b><br>Find the first program file of the NXT.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>nxt.FileFindNext</b><br>Find next program file on the NXT.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>nxt.GetBtAddress</b><br>Returns Bluetooth address of a connected NXT brick</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>nxt.GetBtName</b><br>Returns Bluetooth name of a connected NXT brick</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>nxt.GetCurrentProgram</b><br>Returns the name of the currently running program.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>nxt.GetRotationCount</b><br>Returns the wheel encoder value of a motor.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>nxt.GetType</b><br>Returns the control class name.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>nxt.IsBluetoothEnabled</b><br>Checks if bluetooth is enabled on the device.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>nxt.IsConnected</b><br>Checks if the device is connected to a NXT.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>nxt.IsEnabled</b><br>Checks if bluetooth is enabled on the device. Its the same as nxt.IsBluetoothEnabled.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>nxt.IsMotorIdle</b><br>Checks if a motor is currently powered</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>nxt.IsPaired</b><br>Checks if a Bluetooth device with a given name is paired with our device.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>nxt.PlaySoundFile</b><br>Play a sound file for a given amount of times.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>nxt.ReadColorSensor</b><br>Read a color sensor value on the input where the sensor is plugged into.<br><br>In <docstr>“ColorDetect”</docstr> mode this function returns a value between 1 and 6 which represent the colors <docstr>“black”</docstr>, <docstr>“blue”</docstr>, <docstr>“green”</docstr>, <docstr>“yellow”</docstr>, <docstr>“red”</docstr>, or <docstr>“white”</docstr>.<br>You can use the ToColorName function to convert from these six values to a color name.<br>All other modes return a value between 0 and 1023.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>nxt.ReadDistanceSensor</b><br>Reads the distance measured by the ultrasonic sensor in centimeters.</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>nxt.ReadLightSensor</b><br>Reads the intensity of the light currently being 'seen' by the NXT light sensor. If active is set true an additionall white LED will be turned on while sensing.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>nxt.ReadMail</b><br>Reads a message from the NXT brick's mail box. This message can be written using a normal NXT-G program running on the brick. This allows you to read values from NXT-G programs with your phone or tablet.</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>nxt.ReadSoundSensor</b><br>Reads the sound pressure level of the surrounding.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>nxt.ReadTouchSensor</b><br>Returns whether the touch sensor switch is currently pushed.</div>
	<div data-role="popup" id="pop_dsc_01b" class="ui-content"><b>nxt.RequestEnable</b><br>Invokes system dialog box which could enable Bluetooth on tablet/phone when Bluetooth is disabled.</div>
	<div data-role="popup" id="pop_dsc_01c" class="ui-content"><b>nxt.Reset</b><br>Reset wheel encoder offset to 0.</div>
	<div data-role="popup" id="pop_dsc_01d" class="ui-content"><b>nxt.SendMail</b><br>Sends a message to the NXT brick's mail box.</div>
	<div data-role="popup" id="pop_dsc_01e" class="ui-content"><b>nxt.SetInvert</b><br>Provides a convenient way to invert the direction of the motor commands.</div>
	<div data-role="popup" id="pop_dsc_01f" class="ui-content"><b>nxt.SetLampColor</b><br>Changes the color sensor LED to one color of <docstr>“White”</docstr>, <docstr>“Red”</docstr>, <docstr>“Green”</docstr>, <docstr>“Blue”</docstr> or <docstr>“Off”</docstr></div>
	<div data-role="popup" id="pop_dsc_020" class="ui-content"><b>nxt.SetOnConnect</b><br>Define a callback function which is called when the NXT has been connected via Bluetooth or if it failed to.</div>
	<div data-role="popup" id="pop_dsc_021" class="ui-content"><b>nxt.SetOnConnected</b><br>Define a callback function which is called when the NXT has been successfully connected via Bluetooth</div>
	<div data-role="popup" id="pop_dsc_022" class="ui-content"><b>nxt.ShowDevices</b><br>Shows the user a dialog box that contains a list of NXT bricks which are paired with the phone. The user can then select the brick to connect to via Bluetooth.</div>
	<div data-role="popup" id="pop_dsc_023" class="ui-content"><b>nxt.StartProgram</b><br>Starts an NXT-G program on the NXT brick if available.</div>
	<div data-role="popup" id="pop_dsc_024" class="ui-content"><b>nxt.Stop</b><br>Stop powering some motors.</div>
	<div data-role="popup" id="pop_dsc_025" class="ui-content"><b>nxt.StopProgram</b><br>Stops a the currently running NXT-G program.</div>
	<div data-role="popup" id="pop_dsc_026" class="ui-content"><b>nxt.ToColorName</b><br>Converts a color integer received from ReadColorSensor to a meaningful color name.</div>
</div>
</body>

</html>
