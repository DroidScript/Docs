
<!DOCTYPE html>
<html>

<head>
	<title>CreateCard</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateCard</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>A material implementation of a card.</p>

		<div class="samp">
		crd = MUI.CreateCard(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Object</b>
		</div>

		<p>It is fully customizable to suit your likings.</p>
		<h5>options properties<i style='font-size: 75%;'>definitions</i></h5>
		<p><b>title</b><i style='font-size: 75%;'>String</i> Title text</p><p><b>body</b><i style='font-size: 75%;'>String</i> Body text</p><p><b>image</b><i style='font-size: 75%;'>String</i> Path to the image</p><p><b>buttonText</b><i style='font-size: 75%;'>String</i> Comma separated string for button text</p><p><b>color</b><i style='font-size: 75%;'>String</i> Color string</p><p><b>width</b><i style='font-size: 75%;'>Number</i> Fraction of the screen width</p><p><b>divider1</b><i style='font-size: 75%;'>Boolean</i> Divider below the avatar</p><p><b>divider2</b><i style='font-size: 75%;'>Boolean</i> Divider below the body</p><p><b>avatar</b><i style='font-size: 75%;'>String</i> Path to the avatar image</p><p><b>avatarOnTop</b><i style='font-size: 75%;'>Boolean</i> Is the avatar on top of the image</p><p><b>buttonType</b><i style='font-size: 75%;'>String</i> Can be 'raised', 'raisedoutline', 'round', 'roundoutline' or 'flat'</p><p><b>name</b><i style='font-size: 75%;'>String</i> Name of the card</p></p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - No-image, No-Avatar</h3>
			<div id="examp1" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">,</span> <span class="token string">"Light"</span><span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Card Title"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">"Lorem ipsum dolor set amit consectetur elit"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">buttonText</span><span class="token operator">:</span> <span class="token string">"SEE MORE"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">0.94</span><br>
				        <span class="token punctuation">}</span><br>
				        <span class="token keyword">var</span> card <span class="token operator">=</span> <span class="token constant">UI</span><span class="token punctuation">.</span><span class="token function">CreateCard</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>card<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - With-image, No-Avatar</h3>
			<div id="examp2" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Card Title"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">"Lorem ipsum dolor set amit consectetur elit"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">buttonText</span><span class="token operator">:</span> <span class="token string">"LINKS,SEE MORE"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">"/Sys/Img/Sky.jpg"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">0.94</span><br>
				        <span class="token punctuation">}</span><br>
				        <span class="token keyword">var</span> card <span class="token operator">=</span> <span class="token constant">UI</span><span class="token punctuation">.</span><span class="token function">CreateCard</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>card<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - With Image, With Avatar</h3>
			<div id="examp3" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Card Title"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">"Lorem ipsum dolor set amit consectetur elit"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">buttonText</span><span class="token operator">:</span> <span class="token string">"LINKS,SEE MORE"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">"/Sys/Img/Sky.jpg"</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">0.94</span><span class="token punctuation">,</span><br>
				            <span class="token literal-property property">avatar</span><span class="token operator">:</span> <span class="token string">"/Sys/Img/Droid1.png"</span><br>
				        <span class="token punctuation">}</span><br>
				        <span class="token keyword">var</span> card <span class="token operator">=</span> <span class="token constant">UI</span><span class="token punctuation">.</span><span class="token function">CreateCard</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>card<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp3 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp3 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Complete</h3>
			<div id="examp4" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Dark<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        scrl <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">CreateScroller</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"NoScrollBar"</span><span class="token punctuation">)</span><br>
				            lay2 <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter"</span><span class="token punctuation">)</span><br>
				            lay2<span class="token punctuation">.</span><span class="token function">SetPadding</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span><br>
				            lay2<span class="token punctuation">.</span><span class="token function">SetSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><br>
				                <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><br>
				                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Card Title"</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">"Lorem ipsum dolor set amit consectetur elit"</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">buttonText</span><span class="token operator">:</span> <span class="token string">"LINKS,SEE MORE"</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">"/Sys/Img/Sky.jpg"</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">0.94</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">avatar</span><span class="token operator">:</span> <span class="token string">"/Sys/Img/Droid1.png"</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">avatarOnTop</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">divider1</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br>
				                    <span class="token literal-property property">divider2</span><span class="token operator">:</span> <span class="token boolean">true</span><br>
				                <span class="token punctuation">}</span><br>
				                <br>
				                options<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"my-card1"</span><br>
				                card1 <span class="token operator">=</span> <span class="token constant">UI</span><span class="token punctuation">.</span><span class="token function">CreateCard</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><br>
				                lay2<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>card1<span class="token punctuation">)</span><br>
				                card1<span class="token punctuation">.</span><span class="token function">SetOnButtonTouch</span><span class="token punctuation">(</span>OnBtnTouch<span class="token punctuation">)</span><br>
				                <br>
				                options<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"my-card2"</span><br>
				                options<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">"raised"</span><br>
				                card2 <span class="token operator">=</span> <span class="token constant">UI</span><span class="token punctuation">.</span><span class="token function">CreateCard</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><br>
				                card2<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><br>
				                lay2<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>card2<span class="token punctuation">)</span><br>
				                card2<span class="token punctuation">.</span><span class="token function">SetOnButtonTouch</span><span class="token punctuation">(</span>OnBtnTouch<span class="token punctuation">)</span><br>
				            scrl<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>lay2<span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>scrl<span class="token punctuation">)</span><br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnBtnTouch</span><span class="token punctuation">(</span><span class="token parameter">btnText<span class="token punctuation">,</span> cardName</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    app<span class="token punctuation">.</span><span class="token function">ShowPopup</span><span class="token punctuation">(</span>btnText <span class="token operator">+</span> <span class="token string">" : "</span> <span class="token operator">+</span> cardName<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp4 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp4 )">      Run      </a>
			</div>
		</div>


		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Card</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup" class="baseFunc">ClearFocus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup" class="baseFunc">Focus</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsHeight</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup" class="baseFunc">GetAbsWidth</a>() → <b>Number:</b> <i>integer</i>
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup" class="baseFunc">GetHeight</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup" class="baseFunc">GetLeft</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup" class="baseFunc">GetParent</a>() → <b>app object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup" class="baseFunc">GetPosition</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Object:</b> {
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">bottom</a> }
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup" class="baseFunc">GetTop</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup" class="baseFunc">GetVisibility</a>() → <b>String:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup" class="baseFunc">GetWidth</a>(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Number</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup" class="baseFunc">Gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup" class="baseFunc">Hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup" class="baseFunc">IsEnabled</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup" class="baseFunc">IsOverlap</a>(
			<a href="#pop_std_dso" data-transition="pop" data-rel="popup">obj</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">depth</a> )
			→ <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup" class="baseFunc">IsVisible</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup" class="baseFunc">SetEnabled</a>(
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">enable</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup" class="baseFunc">SetMargins</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_frc" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup">SetOnAvatarTouch</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup">SetOnButtonTouch</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup">SetOnImageTouch</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup">SetOnTitleTouch</a>(
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_017" data-transition="pop" data-rel="popup" class="baseFunc">SetPosition</a>(
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_std_num" data-transition="pop" data-rel="popup">height</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_018" data-transition="pop" data-rel="popup" class="baseFunc">SetVisibility</a>(
			<a href="#pop_str_008" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_019" data-transition="pop" data-rel="popup" class="baseFunc">Show</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_01a" data-transition="pop" data-rel="popup" class="baseFunc">Tween</a>(
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">target</a>,
			<a href="#pop_num_mls" data-transition="pop" data-rel="popup">duration</a>,
			<a href="#pop_str_009" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_num_int" data-transition="pop" data-rel="popup">repeat</a>,
			<a href="#pop_std_bin" data-transition="pop" data-rel="popup">yoyo</a>,
			<a href="#pop_fnc_004" data-transition="pop" data-rel="popup">callback</a> )
		</div>

	</div>

	<div data-role="popup" id="pop_std_bin" class="ui-content"><b>Boolean</b></div>
	<div data-role="popup" id="pop_std_dso" class="ui-content"><b>app object</b></div>
	<div data-role="popup" id="pop_std_num" class="ui-content"><b>Number</b></div>
	<div data-role="popup" id="pop_num_frc" class="ui-content"><b>Number:</b> <i>fraction (0..1)</i></div>
	<div data-role="popup" id="pop_num_int" class="ui-content"><b>Number:</b> <i>integer</i></div>
	<div data-role="popup" id="pop_num_mls" class="ui-content"><b>Number:</b> <i>milliseconds</i></div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“screen”</docstr>, <docstr>“px”</docstr></div>
	<div data-role="popup" id="pop_str_006" class="ui-content"><b>String:</b> <docstr>“px”</docstr> or <docstr>“sp”</docstr> or <docstr>“dip”</docstr> or <docstr>“mm”</docstr> or <docstr>“pt”</docstr></div>
	<div data-role="popup" id="pop_str_008" class="ui-content"><b>String:</b> <docstr>“Show”</docstr> or <docstr>“Hide”</docstr> or <docstr>“Gone”</docstr></div>
	<div data-role="popup" id="pop_str_009" class="ui-content"><b>String:</b> <docstr>“Linear.None”</docstr> or <docstr>“Quadratic.In/Out”</docstr> or <docstr>“Cubic.In/Out”</docstr> or <docstr>“Quartic.In/Out”</docstr> or <docstr>“Quintic.In/Out”</docstr> or <docstr>“Sinusoidal.In/Out”</docstr> or <docstr>“Exponential.In/Out”</docstr> or <docstr>“Circular.In/Out”</docstr> or <docstr>“Elastic.In/Out”</docstr> or <docstr>“Back.In/Out”</docstr> or <docstr>“Bounce.In/Out”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> {<a href="" onclick="app.ShowPopup('String')">title</a>, <a href="" onclick="app.ShowPopup('String')">body</a>, <a href="" onclick="app.ShowPopup('String: path to file ( “/absolute/...” or “relative/...” )')">image</a>, <a href="" onclick="app.ShowPopup('String: comma “,” separated')">buttonText</a>, <a href="" onclick="app.ShowPopup('String')">color</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">width</a>, <a href="" onclick="app.ShowPopup('Boolean')">dividerAvatar</a>, <a href="" onclick="app.ShowPopup('Boolean')">dividerBody</a>, <a href="" onclick="app.ShowPopup('String: path to file or folder ( “/absolute/...” or “relative/...” )')">avatar</a>, <a href="" onclick="app.ShowPopup('Boolean')">avatarOnTop</a>, <a href="" onclick="app.ShowPopup('String: “raised” or “raisedoutline” or “round” or “roundoutline” or “flat”')">buttonType</a>}</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> { <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">x</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">y</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">w</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1)')">w</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): horizontal scale')">sw</a>, <a href="" onclick="app.ShowPopup('Number: fraction (0..1): vertical scale')">sh</a>, <a href="" onclick="app.ShowPopup('Number: angle in degrees (0..360)')">rot</a> }</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String')">cardName</a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String')">btnText</a>,
		<a href="" onclick="app.ShowPopup('String')">cardName</a>
	)</div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('String')">title</a>,
		<a href="" onclick="app.ShowPopup('String')">cardName</a>
	)</div>
	<div data-role="popup" id="pop_fnc_004" class="ui-content"><b>function</b>()</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>crd.ClearFocus</b><br>Removes the focus of the control so that the user no longer has immediate access to it.</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>crd.Focus</b><br>Set the focus to the control so that the user can interact with it immediately.</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>crd.GetAbsHeight</b><br>Get the absolute height of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>crd.GetAbsWidth</b><br>Get the absolute width of the control in pixels.</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>crd.GetHeight</b><br>Get the height of the control as screen height relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>crd.GetLeft</b><br>Get the distance from the control to the left parent border as width relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>crd.GetParent</b><br>Returns the parent control object where the object was added to - commonly a layout.</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>crd.GetPosition</b><br>Returns data about the position and size of the control.<br>If the <strong>screen</strong> option is given the position on the screen will be returned. Otherwise relative to the parent control.<br>The <b>px</b> options turns the relative values into pixels.</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>crd.GetTop</b><br>Get the distance from the control to the upper parent border as height relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>crd.GetVisibility</b><br>Returns the current visibility state of the control. The Values are:<br><strong>Show</strong>: visible<br><strong>Hide</strong>: invisible but still consuming space<br><strong>Gone</strong>: invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>crd.GetWidth</b><br>Get the width of the control as screen width relative float or in pixels with the <b>px</b> option.</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>crd.Gone</b><br>Hides the control without consuming any more layout space as if it were never there.</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>crd.Hide</b><br>Hide the control but keep the layout space free.</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>crd.IsEnabled</b><br>Returns whether the control is currently useable by the user.</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>crd.IsOverlap</b><br>Returns whether the control overlaps with another by a given distance.</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>crd.IsVisible</b><br>Returns whether the control is currently visible to the user, ignoring overlaying controls.</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>crd.SetEnabled</b><br>En/Disable the control physically and visually so that the user can/can not access the control. Events like OnTouch will still be fired.</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>crd.SetMargins</b><br>Define a distance to other controls on each side of the control.</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>crd.SetOnAvatarTouch</b><br>Calls a function when avatar is click.</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>crd.SetOnButtonTouch</b><br>Calls a function when buttons are click.</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>crd.SetOnImageTouch</b><br>Calls a function when the image is click.</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>crd.SetOnTitleTouch</b><br>Calls a function when title item is click.</div>
	<div data-role="popup" id="pop_dsc_017" class="ui-content"><b>crd.SetPosition</b><br>Defines the position and size for the control if the parent is an absolute layout.</div>
	<div data-role="popup" id="pop_dsc_018" class="ui-content"><b>crd.SetVisibility</b><br>Change the visibility of the control to one of the available modes:<br><strong>Show:</strong> visible<br><strong>Hide:</strong> invisible but still consuming space<br><strong>Gone:</strong> invisible and not consuming space</div>
	<div data-role="popup" id="pop_dsc_019" class="ui-content"><b>crd.Show</b><br>Set the visibility of the control to <docstr>“Show”</docstr>.</div>
	<div data-role="popup" id="pop_dsc_01a" class="ui-content"><b>crd.Tween</b><br>Performs an animation on the control.<br>The <strong>target</strong> object is for the position, size and rotation that the control has at the end of the animation.<br><br>The <strong>type</strong> specifies the behavior and the speed of the animation. Separated by a dot, you must also specify whether you want to apply this behavior to the beginning (In), end (Out), or to both (InOut) times of the animation.<br><br>With the amount of <strong>repeat</strong>s you can control how many times you want to play the animation.<br><br>If you have <strong>jojo</strong> activated, the animation will alternate between forward and backward playback, so that if the repetition value is odd, the control will be at the start position again at the end of the animation.<br><br>Finally the <strong>callback</strong> function will be called after the animation has finished. Well, it's about time!</div>
</div>
</body>

</html>
