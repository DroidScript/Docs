
<!DOCTYPE html>
<html>

<head>
	<title>CreateLayout</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../js/jquery.mark.es6.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>CreateLayout</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Card Layouts')">Card Layouts</a><br>
			</span><br>
		</div>

		<p>It is just the <strong>CreateLayout</strong> method of DroidScript with predefined values on background color just to be consistent on MUI theming.</p>

		<div class="samp">
		lay = MUI.CreateLayout(
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">type</a>,
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Object</b>
		</div>

		<p>It is highly recommended to use this method instead of directly calling <strong>CreateLayout</strong> from the app object.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Just Layout</h3>
			<div id="examp1" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Light<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        txt <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateTextParagraph</span><span class="token punctuation">(</span><span class="token string">"DroidScript is awesome!"</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>

		<h3>Card Layouts</h3>
		<p>Card layout is ligter than other types of layouts to make it appear as a primary focus on a page.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Dark Layout with Card</h3>
			<div id="examp2" style="font-size:70%">
				cfg<span class="token punctuation">.</span>Dark<br>
				cfg<span class="token punctuation">.</span><span class="token constant">MUI</span><br>
				<br>
				<span class="token keyword">function</span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				<span class="token punctuation">{</span><br>
				    color <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>teal<br>
				    app<span class="token punctuation">.</span><span class="token function">InitializeUIKit</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><br>
				    <br>
				    lay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        cardLay <span class="token operator">=</span> <span class="token constant">MUI</span><span class="token punctuation">.</span><span class="token function">CreateLayout</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><br>
				        cardLay<span class="token punctuation">.</span><span class="token function">SetSize</span><span class="token punctuation">(</span><span class="token number">0.85</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span><br>
				        lay<span class="token punctuation">.</span><span class="token function">AddChild</span><span class="token punctuation">(</span>cardLay<span class="token punctuation">)</span><br>
				    <br>
				    app<span class="token punctuation">.</span><span class="token function">AddLayout</span><span class="token punctuation">(</span>lay<span class="token punctuation">)</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>

		<p>Since it returns a DroidScript layout object, you can use all the layout methods you know.</p>

	</div>

	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“Linear”</docstr> or <docstr>“Absolute”</docstr> or <docstr>“Frame”</docstr> or <docstr>“Card”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“Comma separated DroidScript layout options”</docstr></div>
</div>
</body>

</html>
